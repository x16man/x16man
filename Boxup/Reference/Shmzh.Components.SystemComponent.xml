<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Shmzh.Components.SystemComponent</name>
    </assembly>
    <members>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.Role">
            <summary>
            角色的SQL Server数据访问对象。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IRole">
            <summary>
            角色的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRole.Insert(Shmzh.Components.SystemComponent.RoleInfo)">
            <summary>
            添加角色。
            </summary>
            <param name="roleInfo">角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRole.Update(Shmzh.Components.SystemComponent.RoleInfo)">
            <summary>
            修改角色。
            </summary>
            <param name="roleInfo">角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRole.Delete(Shmzh.Components.SystemComponent.RoleInfo)">
            <summary>
            删除角色。
            </summary>
            <param name="roleInfo">角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRole.Delete(System.Int16)">
            <summary>
            删除角色。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRole.IsExist(System.Int16)">
            <summary>
            是否已经存在角色编号。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRole.IsExist(System.String,System.Int16)">
            <summary>
            是否已经存在角色名称。
            </summary>
            <param name="roleName">组名称。</param>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRole.GetAllByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有角色。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>角色记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRole.GetAllAvalibleByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有有效的角色。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>角色记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRole.GetByCode(System.Int16)">
            <summary>
            根据角色编号获取角色实体。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>ArrayList</returns>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Role.SQL_INSERT_ROLE">
            <summary>
            添加角色记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Role.SQL_UPDATE_ROLE">
            <summary>
            修改角色记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Role.SQL_DELETE_ROLE">
            <summary>
            删除角色记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Role.SQL_SELECT_ALL_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取所有角色记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Role.SQL_SELECT_ALLAVALIBLE_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取所有有效的角色记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Role.SQL_SELECT_BY_NAME_PRODUCTCODE">
            <summary>
            根据角色名称和产品编号获取角色记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Role.SQL_SELECT_BY_CODE">
            <summary>
            根据角色编号获取角色记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Role.PARM_ROLECODE">
            <summary>
            角色编号。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Role.PARM_ROLENAME">
            <summary>
            角色名称。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Role.PARM_ISVALID">
            <summary>
            是否有效。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Role.PARM_REMARK">
            <summary>
            角色描述。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Role.PARM_PRODUCTCODE">
            <summary>
            产品编号。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Role.PARM_SERIALNO">
            <summary>
            顺序编号。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Role.GetRoleParameters">
            <summary>
            获取角色参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Role.ConvertToRoleInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成RoleInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>角色实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Role.Insert(Shmzh.Components.SystemComponent.RoleInfo)">
            <summary>
            添加角色。
            </summary>
            <param name="roleInfo">角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Role.Update(Shmzh.Components.SystemComponent.RoleInfo)">
            <summary>
            修改角色。
            </summary>
            <param name="roleInfo">角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Role.Delete(Shmzh.Components.SystemComponent.RoleInfo)">
            <summary>
            删除角色。
            </summary>
            <param name="roleInfo">角色实体。</param>
            <returns>bool</returns>
            <remarks>联动删除角色权限、用户角色、组角色。</remarks>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Role.Delete(System.Int16)">
            <summary>
            删除角色。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>bool</returns>
            <remarks>联动删除角色权限、用户角色、组角色。</remarks>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Role.IsExist(System.Int16)">
            <summary>
            根据角色编号判断是否已经在数据库中存在。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Role.IsExist(System.String,System.Int16)">
            <summary>
            根据产品编号和角色名称判断是否已经在数据库中存在。
            </summary>
            <param name="roleName">角色名称。</param>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Role.GetAllByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有的角色。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Role.GetAllAvalibleByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有的有效角色。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Role.GetByCode(System.Int16)">
            <summary>
            根据角色编号获取角色实体。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>角色实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlParam">
            <summary>
            查询引擎控件的参数随想的SQLServer的数据访问层。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.ISEControlParam">
            <summary>
            查询引擎控件类型的数据接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControlParam.Insert(Shmzh.Components.SystemComponent.SEControlParamInfo)">
            <summary>
            添加控件参数。
            </summary>
            <param name="obj">控件参数实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControlParam.Update(Shmzh.Components.SystemComponent.SEControlParamInfo)">
            <summary>
            修改控件参数。
            </summary>
            <param name="obj">控件参数实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControlParam.Delete(Shmzh.Components.SystemComponent.SEControlParamInfo)">
            <summary>
            删除控件参数实体。
            </summary>
            <param name="obj">控件参数实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControlParam.Delete(System.Int32)">
            <summary>
            删除控件参数实体。
            </summary>
            <param name="id">控件参数实体id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControlParam.GetByControlId(System.Int32)">
            <summary>
            获取所有的控件参数。
            </summary>
            <returns>控件参数集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControlParam.GetById(System.Int32)">
            <summary>
            根据Id获取控件参数。
            </summary>
            <param name="id">控件参数id。</param>
            <returns>控件参数实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlParam.GetParameters">
            <summary>
            获取查询引擎的数据类型的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlParam.ConvertToSEControlParamInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成SEControlTypeInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>查询引擎控件类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlParam.Insert(Shmzh.Components.SystemComponent.SEControlParamInfo)">
            <summary>
            添加控件参数。
            </summary>
            <param name="obj">控件参数实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlParam.Update(Shmzh.Components.SystemComponent.SEControlParamInfo)">
            <summary>
            修改控件参数。
            </summary>
            <param name="obj">控件参数实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlParam.Delete(Shmzh.Components.SystemComponent.SEControlParamInfo)">
            <summary>
            删除控件参数实体。
            </summary>
            <param name="obj">控件参数实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlParam.Delete(System.Int32)">
            <summary>
            删除控件参数实体。
            </summary>
            <param name="id">控件参数实体id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlParam.GetByControlId(System.Int32)">
            <summary>
            获取所有的控件参数。
            </summary>
            <returns>控件参数集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlParam.GetById(System.Int32)">
            <summary>
            根据Id获取控件参数。
            </summary>
            <param name="id">控件参数id。</param>
            <returns>控件参数实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ProviderBase.CreateTransaction">
            <summary>
            Creates a new <see cref="T:Shmzh.Components.SystemComponent.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ProviderBase.DefaultCommandTimeout">
            <summary>
            Gets or sets the default timeout for every command
            </summary>
            <value>integer value in seconds.</value>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ProviderBase.IsTransactionSupported">
            <summary>
             Indicates if the current <see cref="T:Shmzh.Components.SystemComponent.Provider"/> implementation is supporting Transactions.
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OrgTypeInfo">
            <summary>
            部门信息实体。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OrgTypeInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OrgTypeInfo.Code">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OrgTypeInfo.Level">
            <summary>
            级别。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OrgTypeInfo.CnName">
            <summary>
            中文名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OrgTypeInfo.EnName">
            <summary>
            英文名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OrgTypeInfo.IsValid">
            <summary>
            是否有效。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.TemplateInfo">
            <summary>
            模板记录实体。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.TemplateInfo.#ctor">
            <summary>
             默认构造函数。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.TemplateInfo.#ctor(System.Int32,System.Int16,System.String,System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="id">模板ID。</param>
            <param name="productCode">产品ID。</param>
            <param name="code">模板编号。</param>
            <param name="name">模板名称。</param>
            <param name="content">模板内容。</param>
            <param name="remark">模板备注。</param>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TemplateInfo.ID">
            <summary>
            模板ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TemplateInfo.ProductCode">
            <summary>
            产品ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TemplateInfo.Code">
            <summary>
            模板编号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TemplateInfo.Name">
            <summary>
            模板名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TemplateInfo.Content">
            <summary>
            IP地址。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TemplateInfo.Remark">
            <summary>
            在线状态
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.TB_UsersInfo">
            <summary>
            工作流系统中的用户。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.UserId">
            <summary>
            用户Id。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.HRID">
            <summary>
            工号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.UserName">
            <summary>
            登陆名
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.Domain">
            <summary>
            所属域。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.PWD">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.UserDspName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.EMail">
            <summary>
            邮件地址。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.Tel">
            <summary>
            电话。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.Dept">
            <summary>
            部门名
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.JobTitle">
            <summary>
            职位名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.SpHRID">
            <summary>
            上级部门主管工号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.JoinDate">
            <summary>
            入职时间
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.CostCenter">
            <summary>
            成本中心。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.LocationCode">
            <summary>
            地区编号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.Enalbe">
            <summary>
            是否删除。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.IsOut">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.AgentUserId">
            <summary>
            代理用户Id。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.Language">
            <summary>
            语言。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.MbTel">
            <summary>
            移动电话。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.CanAssignOut">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.IsLeave">
            <summary>
            是否离职。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.LeaveDate">
            <summary>
             离职时间
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_UsersInfo.UserCatId">
            <summary>
            用户分类。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleInfo">
            <summary>
            组角色信息类
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleInfo.GroupCode">
            <summary>
            组编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleInfo.RoleCode">
            <summary>
            角色编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleInfo.CheckCode">
            <summary>
            checkcode
            </summary>
            <remarks>知识管理部分</remarks>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleInfo.Type">
            <summary>
            Type
            </summary>
            /// <remarks>知识管理部分</remarks>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IProduct">
            <summary>
            产品的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IProduct.Insert(Shmzh.Components.SystemComponent.ProductInfo)">
            <summary>
            添加产品。
            </summary>
            <param name="productInfo">产品实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IProduct.Update(Shmzh.Components.SystemComponent.ProductInfo)">
            <summary>
            修改产品。
            </summary>
            <param name="productInfo">产品实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IProduct.Delete(Shmzh.Components.SystemComponent.ProductInfo)">
            <summary>
            删除产品。
            </summary>
            <param name="productInfo">产品实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IProduct.Delete(System.Int16)">
            <summary>
            删除产品。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IProduct.Register(Shmzh.Components.SystemComponent.ProductInfo)">
            <summary>
            注册产品。
            </summary>
            <param name="productInfo">产品实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IProduct.IsExist(System.Int16)">
            <summary>
            判断产品编号是否已经存在。
            </summary>
            <param name="productCode"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IProduct.IsExist(System.String)">
            <summary>
            是否已经存在产品名称。
            </summary>
            <param name="productName">产品名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IProduct.GetAll">
            <summary>
            获取所有产品。
            </summary>
            <returns>ArrayList。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IProduct.GetAllAvalible">
            <summary>
            获取所有有效的产品。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IProduct.GetByCode(System.Int16)">
            <summary>
            根据产品编号获取产品。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>ArrayList</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IGroupUser">
            <summary>
            组与用户关系的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupUser.Insert(Shmzh.Components.SystemComponent.GroupUserInfo)">
            <summary>
            添加组用户。
            </summary>
            <param name="groupUserInfo">组用户。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupUser.Insert(Shmzh.Components.SystemComponent.GroupUserInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加组用户。
            </summary>
            <param name="obj">组用户实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupUser.Insert(System.Int16,System.String)">
            <summary>
            批量添加组用户。
            </summary>
            <param name="groupCode">组编号。</param>
            <param name="userNames">用户名拼接字符串。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupUser.Delete(Shmzh.Components.SystemComponent.GroupUserInfo)">
            <summary>
            删除组用户。
            </summary>
            <param name="groupUserInfo">组用户。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupUser.Delete(Shmzh.Components.SystemComponent.GroupUserInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除组用户。
            </summary>
            <param name="groupUserInfo">组用户实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupUser.Delete(System.String)">
            <summary>
             根据指定的用户名来删除组和用户的关系记录。
            </summary>
            <param name="userCode">用户名。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupUser.Delete(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据指定的用户名来删除组和用户的关系记录。
            </summary>
            <param name="userCode">用户名。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupUser.GetAll">
            <summary>
            获取所有的组用户集合.
            </summary>
            <returns>组用户集合.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupUser.GetByGroupCode(System.Int16)">
            <summary>
            根据组编号来获取组用户集合。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>组用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupUser.GetByUserCode(System.String)">
            <summary>
            根据用户名获取组用户集合。
            </summary>
            <param name="userCode">用户名。</param>
            <returns>组用户集合。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IUserRole">
            <summary>
            组的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.Insert(Shmzh.Components.SystemComponent.UserRoleInfo)">
            <summary>
            添加用户角色。
            </summary>
            <param name="userRoleInfo">用户角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.Insert(System.String,System.String,System.Int16)">
            <summary>
            批量添加用户角色。
            </summary>
            <param name="userNames">用户名拼接字符串。</param>
            <param name="roleCodes">角色编号拼接字符串。</param>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.CopyTo(System.String,System.String,System.Int16)">
            <summary>
            复制用户角色到目标用户
            </summary>
            <param name="sourceUserName">源用户名。</param>
            <param name="targetUserName">目标用户名。</param>
            <param name="productCode">产品编号。</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.Insert(System.String,System.String,System.String,System.String)">
            <summary>
            针对知识库条目批量增加用户角色。
            </summary>
            <param name="userNames">用户名拼接字符串。</param>
            <param name="roleCodes">角色编号串。</param>
            <param name="checkCode">知识库条目ID。</param>
            <param name="type">知识库条目类型。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.Delete(Shmzh.Components.SystemComponent.UserRoleInfo)">
            <summary>
            删除用户角色。
            </summary>
            <param name="userRoleInfo">用户角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.Delete(System.String,System.Int16)">
            <summary>
            批量删除某些用户的某个产品的角色。
            </summary>
            <param name="userNames">用户名拼接字符串。</param>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.Delete(System.String,System.String,System.String)">
            <summary>
            针对知识库条目删除某一个用户的角色。
            </summary>
            <param name="userNames">用户名。</param>
            <param name="checkCode">知识库条目ID。</param>
            <param name="type">知识库条目类型。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.ClearAccess(System.String,System.String)">
            <summary>
            清除知识库条目的访问控制。
            </summary>
            <param name="checkCode">知识库条目的id。</param>
            <param name="type">知识库条目的类型。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.GetByUserName(System.String)">
            <summary>
            根据用户名获取所有用户角色。
            </summary>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.GetByProductCode(System.Int16)">
            <summary>
            根据产品编号获取用户角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.GetByRoleCode(System.Int16)">
            <summary>
            根据角色编号获取用户角色集合。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.GetByProductCodeAndName(System.Int16,System.String)">
            <summary>
            根据产品编号和模糊匹配用户名、姓名来获取用户角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="name">用户名、姓名。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.GetByProductCodeAndUserName(System.Int16,System.String)">
            <summary>
            根据产品编号和用户名获取用户角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="userName">用户名。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.GetByProductCodeAndUserNameAndCheckCodeAndType(System.Int16,System.String,System.String,System.String)">
            <summary>
            根据产品编号和用户名获取用户角色集合。
            </summary>
            <param name="productCode">产品编号</param>
            <param name="userName">用户名。</param>
            <param name="checkCode">检查对象编号。</param>
            <param name="type">检查对象类型。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.GetByCheckCodeAndType(System.String,System.String)">
            <summary>
            根据CheckCode和Type获取用户角色列表。
            </summary>
            <param name="checkCode">检查对象编号。</param>
            <param name="type">检查对象类型。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.GetByCheckCodeAndTypeAndUserName(System.String,System.String,System.String)">
            <summary>
            根据用户名和知识库条目获取用户角色集合。
            </summary>
            <param name="checkCode">知识库条目ID。</param>
            <param name="type">知识库条目类型。</param>
            <param name="userName">用户名。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserRole.GetNoAccessObj(System.Int32,System.Int32)">
            <summary>
            获取没有设置任何访问权限的对象.
            </summary>
            <param name="rightCode">权限代码</param>
            <param name="productcode">产品代码</param>
            <returns>DataSet</returns>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.UserRole.SQL_INSERT_USERROLE">
            <summary>
            添加组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.UserRole.SQL_DELETE_USERROLE">
            <summary>
            删除组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.UserRole.SQL_DELETE_BY_USERCODELIST_PRODUCTCODE">
            <summary>
            根据产品删除某一个用户的角色关联。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.UserRole.SQL_DELETE_BY_USERCODELIST_CHECKCODE_TYPE">
            <summary>
            根据知识库条目删除某一个用户的角色关联。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.UserRole.SQL_SELECT_ALLAVALIBLE_BY_USERNAME">
            <summary>
            获取所有有效的用户角色记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.UserRole.SQL_SELECT_BY_PRODUCTCODE">
            <summary>
            根据产品编号来获取用户角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.UserRole.SQL_SELECT_BY_ROLECODE">
            <summary>
            根据角色编号来获取用户角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.UserRole.SQL_SELECT_BY_PRODUCTCODE_NAME">
            <summary>
            根据产品编号和用户名、姓名来获取用户角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.UserRole.SQL_SELECT_BY_PRODUCTCODE_USERNAME">
            <summary>
            根据产品编号和用户名获取用户角色的SQL语句。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.UserRole.GetUserRoleParameters">
            <summary>
            获取用户角色参数。
            </summary>
            <returns>参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.UserRole.ConvertToUserRoleInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.UserRole.Insert(Shmzh.Components.SystemComponent.UserRoleInfo)">
            <summary>
            添加用户角色。
            </summary>
            <param name="userRoleInfo">用户角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.UserRole.GetByProductCodeAndUserNameAndCheckCodeAndType(System.Int16,System.String,System.String,System.String)">
            <summary>
            根据产品编号和用户名获取用户角色集合。
            </summary>
            <param name="productCode">产品编号</param>
            <param name="userName">用户名。</param>
            <param name="checkCode">检查对象编号。</param>
            <param name="type">检查对象类型。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.SEControlParam">
            <summary>
            查询引擎控件的参数随想的SQLServer的数据访问层。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlParam.GetParameters">
            <summary>
            获取查询引擎的数据类型的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlParam.ConvertToSEControlParamInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成SEControlTypeInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>查询引擎控件类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlParam.Insert(Shmzh.Components.SystemComponent.SEControlParamInfo)">
            <summary>
            添加控件参数。
            </summary>
            <param name="obj">控件参数实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlParam.Update(Shmzh.Components.SystemComponent.SEControlParamInfo)">
            <summary>
            修改控件参数。
            </summary>
            <param name="obj">控件参数实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlParam.Delete(Shmzh.Components.SystemComponent.SEControlParamInfo)">
            <summary>
            删除控件参数实体。
            </summary>
            <param name="obj">控件参数实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlParam.Delete(System.Int32)">
            <summary>
            删除控件参数实体。
            </summary>
            <param name="id">控件参数实体id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlParam.GetByControlId(System.Int32)">
            <summary>
            获取所有的控件参数。
            </summary>
            <returns>控件参数集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlParam.GetById(System.Int32)">
            <summary>
            根据Id获取控件参数。
            </summary>
            <param name="id">控件参数id。</param>
            <returns>控件参数实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.Duty">
            <summary>
            职位的SQLServer的数据访问对象。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IDuty">
            <summary>
            职务的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDuty.Insert(Shmzh.Components.SystemComponent.DutyInfo)">
            <summary>
            添加职务。
            </summary>
            <param name="dutyInfo">职务实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDuty.Update(Shmzh.Components.SystemComponent.DutyInfo)">
            <summary>
            修改职务。
            </summary>
            <param name="dutyInfo">职务实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDuty.Delete(Shmzh.Components.SystemComponent.DutyInfo)">
            <summary>
            删除职务。
            </summary>
            <param name="dutyInfo">职务实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDuty.Delete(System.String,System.String)">
            <summary>
            删除职务。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="dutyCode">职务编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDuty.IsExistDutyCode(System.String,System.String)">
            <summary>
            是否已经存在职务编号。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="dutyCode">职务编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDuty.IsExistDutyName(System.String,System.String)">
            <summary>
            是否已经存在职务名称
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="dutyName">职务名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDuty.GetAllByCompanyCode(System.String)">
            <summary>
            获取所有职务。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>ArrayList。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDuty.GetAllAvalibleByCompanyCode(System.String)">
            <summary>
            获取所有有效的职务。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>职务集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDuty.GetByCompanyCodeAndDutyCode(System.String,System.String)">
            <summary>
            根据职务编号获取职务。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="dutyCode">职务编号。</param>
            <returns>职务实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Duty.GetDutyParameters">
            <summary>
            获取组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Duty.ConvertToDutyInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成DutyInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Duty.Insert(Shmzh.Components.SystemComponent.DutyInfo)">
            <summary>
            添加职务。
            </summary>
            <param name="dutyInfo">职务实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Duty.Update(Shmzh.Components.SystemComponent.DutyInfo)">
            <summary>
            修改职务。
            </summary>
            <param name="dutyInfo">职务实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Duty.Delete(Shmzh.Components.SystemComponent.DutyInfo)">
            <summary>
            删除职务。
            </summary>
            <param name="dutyInfo">职务实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Duty.Delete(System.String,System.String)">
            <summary>
            删除职务。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="dutyCode">职务编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Duty.IsExistDutyCode(System.String,System.String)">
            <summary>
            是否已经存在职务编号。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="dutyCode">职务编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Duty.IsExistDutyName(System.String,System.String)">
            <summary>
            是否已经存在职务名称
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="dutyName">职务名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Duty.GetAllByCompanyCode(System.String)">
            <summary>
            获取所有职务。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>ArrayList。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Duty.GetAllAvalibleByCompanyCode(System.String)">
            <summary>
            获取所有有效的职务。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>职务集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Duty.GetByCompanyCodeAndDutyCode(System.String,System.String)">
            <summary>
            根据职务编号获取职务。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="dutyCode">职务编号。</param>
            <returns>职务实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.Dept">
            <summary>
            组织机构的SQL Server的数据访问层。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IDept">
            <summary>
            部门的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.Insert(Shmzh.Components.SystemComponent.DeptInfo)">
            <summary>
            添加部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.Insert(Shmzh.Components.SystemComponent.DeptInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.Update(Shmzh.Components.SystemComponent.DeptInfo)">
            <summary>
            修改部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.Update(Shmzh.Components.SystemComponent.DeptInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.Delete(Shmzh.Components.SystemComponent.DeptInfo)">
            <summary>
            删除部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.Delete(Shmzh.Components.SystemComponent.DeptInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <param name="trans">事务对虾昂。</param>
            <returns>bool。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.Delete(System.String,System.String)">
            <summary>
            删除部门。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.Disable(System.String,System.String)">
            <summary>
            部门失效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.Disable(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            部门失效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.Enable(System.String,System.String)">
            <summary>
            部门有效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.Enable(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            部门起效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门代码。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.IsExistDeptCode(System.String,System.String)">
            <summary>
            是否已经存在部门编号。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.IsExistDeptName(System.String,System.String)">
            <summary>
            是否已经存在部门名称
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptName">部门名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.HasChildDept(System.String,System.String)">
            <summary>
            判断是否有子部门。
            </summary>
            <param name="companyCode">公司编号</param>
            <param name="deptCode">部门名称</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.HasUser(System.String,System.String)">
            <summary>
            判断是否有用户。
            </summary>
            <param name="companyCode">公司编号</param>
            <param name="deptCode">部门名称</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.GetAllByCompanyCode(System.String)">
            <summary>
            获取所有部门。
            </summary>
            <returns>部门集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.GetAllAvalibleCompanyCode(System.String)">
            <summary>
            获取所有有效的部门。
            </summary>
            <returns>部门集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.GetByCompanyAndManager(System.String,System.String)">
            <summary>
            根据公司编号和部门主管获取部门列表。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="manager">部门主管。</param>
            <returns>部门列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.GetByCompanyCodeAndDeptCode(System.String,System.String)">
            <summary>
            根据部门编号获取部门。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>部门实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IDept.GetParentDeptByCode(System.String)">
            <summary>
            根据部门编号获取上级部门。
            </summary>
            <param name="deptCode">部门编号。</param>
            <returns>部门实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.GetDeptParameters">
            <summary>
            获取Insert和Update命令的参数数组。
            </summary>
            <returns>Sql参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.ConvertToDeptInfo(System.Data.IDataRecord)">
            <summary>
            将SqlDataReader转换为DeptInfo实体。
            </summary>
            <param name="dr">DataReader</param>
            <returns>组织机构实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.Insert(Shmzh.Components.SystemComponent.DeptInfo)">
            <summary>
            添加部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.Insert(Shmzh.Components.SystemComponent.DeptInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.Update(Shmzh.Components.SystemComponent.DeptInfo)">
            <summary>
            修改部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.Update(Shmzh.Components.SystemComponent.DeptInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.Delete(Shmzh.Components.SystemComponent.DeptInfo)">
            <summary>
            删除部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.Delete(Shmzh.Components.SystemComponent.DeptInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <param name="trans">事务对虾昂。</param>
            <returns>bool。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.Delete(System.String,System.String)">
            <summary>
            删除部门。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.Disable(System.String,System.String)">
            <summary>
            部门失效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.Disable(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            部门失效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.Enable(System.String,System.String)">
            <summary>
            部门有效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.Enable(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            部门起效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门代码。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.IsExistDeptCode(System.String,System.String)">
            <summary>
            是否已经存在部门编号。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.IsExistDeptName(System.String,System.String)">
            <summary>
            是否已经存在部门名称
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptName">部门名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.GetAllByCompanyCode(System.String)">
            <summary>
            获取所有部门。
            </summary>
            <returns>部门集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.GetAllAvalibleCompanyCode(System.String)">
            <summary>
            获取所有有效的部门。
            </summary>
            <returns>部门集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.GetByCompanyCodeAndDeptCode(System.String,System.String)">
            <summary>
            根据部门编号获取部门。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>部门实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.GetParentDeptByCode(System.String)">
            <summary>
            根据部门编号获取上级部门。
            </summary>
            <param name="deptCode">部门编号。</param>
            <returns>部门实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.GetByCompanyAndManager(System.String,System.String)">
            <summary>
            根据公司编号和部门主管获取部门列表。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="manager">部门主管。</param>
            <returns>部门列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.HasChildDept(System.String,System.String)">
            <summary>
            判断是否有子部门。
            </summary>
            <param name="companyCode">公司编号</param>
            <param name="deptCode">部门名称</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Dept.HasUser(System.String,System.String)">
            <summary>
            判断是否有用户。
            </summary>
            <param name="companyCode">公司编号</param>
            <param name="deptCode">部门名称</param>
            <returns>bool</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IOnlineStatus">
            <summary>
            用户在线状态数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOnlineStatus.Insert(Shmzh.Components.SystemComponent.OnlineStatusInfo)">
            <summary>
            添加用户在线状态记录。
            </summary>
            <param name="onlineStatus">用户在线状态记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOnlineStatus.Update(Shmzh.Components.SystemComponent.OnlineStatusInfo)">
            <summary>
            修改用户在线状态记录。
            </summary>
            <param name="onlineStatus">用户在线状态记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOnlineStatus.Delete(Shmzh.Components.SystemComponent.OnlineStatusInfo)">
            <summary>
            删除用户在线状态记录。
            </summary>
            <param name="onlineStatus">用户在线状态记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOnlineStatus.GetByUserNameAndIPAddress(System.String,System.String)">
            <summary>
            根据用户名和IP地址来获取用户在线状态记录实体。
            </summary>
            <param name="userName">用户名。</param>
            <param name="ipAddress">IP地址。</param>
            <returns>用户在线记录实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOnlineStatus.GetByUserName(System.String)">
            <summary>
            根据用户名获取用户在线记录集合。
            </summary>
            <param name="userName">用户名。</param>
            <returns>用户在线记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOnlineStatus.GetByIPAddress(System.String)">
            <summary>
            根据用户名获取用户在线记录集合。
            </summary>
            <param name="ipAddress">IP地址。</param>
            <returns>用户在线记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOnlineStatus.GetOnlineUser">
            <summary>
            根据在线用户记录集。
            </summary>       
            <returns>IList</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.OnlineStatus.Insert(Shmzh.Components.SystemComponent.OnlineStatusInfo)">
            <summary>
            添加用户在线状态记录。
            </summary>
            <param name="onlineStatus">用户在线状态记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.OnlineStatus.Update(Shmzh.Components.SystemComponent.OnlineStatusInfo)">
            <summary>
            修改用户在线状态记录。
            </summary>
            <param name="onlineStatus">用户在线状态记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.OnlineStatus.Delete(Shmzh.Components.SystemComponent.OnlineStatusInfo)">
            <summary>
            删除用户在线状态记录。
            </summary>
            <param name="onlineStatus">用户在线状态记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.OnlineStatus.GetByUserNameAndIPAddress(System.String,System.String)">
            <summary>
            根据用户名和IP地址来获取用户在线状态记录实体。
            </summary>
            <param name="userName">用户名。</param>
            <param name="ipAddress">IP地址。</param>
            <returns>用户在线记录实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.OnlineStatus.GetByUserName(System.String)">
            <summary>
            根据用户名获取用户在线记录集合。
            </summary>
            <param name="userName">用户名。</param>
            <returns>用户在线记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.OnlineStatus.GetByIPAddress(System.String)">
            <summary>
            根据用户名获取用户在线记录集合。
            </summary>
            <param name="ipAddress">IP地址。</param>
            <returns>用户在线记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.OnlineStatus.GetOnlineUser">
            <summary>
            根据在线用户记录集。
            </summary>       
            <returns>IList</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.#ctor">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Insert(Shmzh.Components.SystemComponent.GroupRoleService.GroupRoleInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.InsertAsync(Shmzh.Components.SystemComponent.GroupRoleService.GroupRoleInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.InsertAsync(Shmzh.Components.SystemComponent.GroupRoleService.GroupRoleInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Insert1(System.String,System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Insert1Async(System.String,System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Insert1Async(System.String,System.String,System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Insert2(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Insert2Async(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Insert2Async(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Delete(Shmzh.Components.SystemComponent.GroupRoleService.GroupRoleInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.DeleteAsync(Shmzh.Components.SystemComponent.GroupRoleService.GroupRoleInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.DeleteAsync(Shmzh.Components.SystemComponent.GroupRoleService.GroupRoleInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Delete1(System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Delete1Async(System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Delete1Async(System.String,System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Delete2(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Delete2Async(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Delete2Async(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.ClearAccess(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.ClearAccessAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.ClearAccessAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.CopyTo(System.String,System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.CopyToAsync(System.String,System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.CopyToAsync(System.String,System.String,System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByGroupCodeAndProductCode(System.Int16,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByGroupCodeAndProductCodeAsync(System.Int16,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByGroupCodeAndProductCodeAsync(System.Int16,System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByGroupCodeAndCheckCodeAndType(System.Int16,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByGroupCodeAndCheckCodeAndTypeAsync(System.Int16,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByGroupCodeAndCheckCodeAndTypeAsync(System.Int16,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByCheckCodeAndType(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByCheckCodeAndTypeAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByCheckCodeAndTypeAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCode(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByRoleCode(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByRoleCodeAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByRoleCodeAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeAndName(System.Int16,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeAndNameAsync(System.Int16,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeAndNameAsync(System.Int16,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeAndGroupCode(System.Int16,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeAndGroupCodeAsync(System.Int16,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeAndGroupCodeAsync(System.Int16,System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeAndGroupCodeAndCheckCodeAndType(System.Int16,System.Int16,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeAndGroupCodeAndCheckCodeAndTypeAsync(System.Int16,System.Int16,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeAndGroupCodeAndCheckCodeAndTypeAsync(System.Int16,System.Int16,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByGroupCodeAndType(System.Int16,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByGroupCodeAndTypeAsync(System.Int16,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByGroupCodeAndTypeAsync(System.Int16,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.InsertCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Insert1Completed">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Insert2Completed">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.DeleteCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Delete1Completed">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.Delete2Completed">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.ClearAccessCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.CopyToCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByGroupCodeAndProductCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByGroupCodeAndCheckCodeAndTypeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByCheckCodeAndTypeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByRoleCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeAndNameCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeAndGroupCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByProductCodeAndGroupCodeAndCheckCodeAndTypeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupRoleService.GroupRole.GetByGroupCodeAndTypeCompleted">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GroupRoleInfo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.GroupRoleInfo.GroupCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.GroupRoleInfo.RoleCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.GroupRoleInfo.CheckCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.GroupRoleInfo.Type">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.InsertCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.InsertCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.InsertCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.Insert1CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.Insert1CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.Insert1CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.Insert2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.Insert2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.Insert2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.DeleteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.DeleteCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.DeleteCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.Delete1CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.Delete1CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.Delete1CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.Delete2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.Delete2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.Delete2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.ClearAccessCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.ClearAccessCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.ClearAccessCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.CopyToCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.CopyToCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.CopyToCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByGroupCodeAndProductCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByGroupCodeAndProductCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.GetByGroupCodeAndProductCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByGroupCodeAndCheckCodeAndTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByGroupCodeAndCheckCodeAndTypeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.GetByGroupCodeAndCheckCodeAndTypeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByCheckCodeAndTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByCheckCodeAndTypeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.GetByCheckCodeAndTypeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByProductCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByProductCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.GetByProductCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByRoleCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByRoleCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.GetByRoleCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByProductCodeAndNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByProductCodeAndNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.GetByProductCodeAndNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByProductCodeAndGroupCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByProductCodeAndGroupCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.GetByProductCodeAndGroupCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByProductCodeAndGroupCodeAndCheckCodeAndTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByProductCodeAndGroupCodeAndCheckCodeAndTypeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.GetByProductCodeAndGroupCodeAndCheckCodeAndTypeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByGroupCodeAndTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupRoleService.GetByGroupCodeAndTypeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupRoleService.GetByGroupCodeAndTypeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IRoleRight">
            <summary>
            角色权限的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRoleRight.Insert(Shmzh.Components.SystemComponent.RoleRightInfo)">
            <summary>
            添加角色权限。
            </summary>
            <param name="roleRightInfo">用户角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRoleRight.Insert(System.Int16,System.String)">
            <summary>
            批量添加角色权限。
            </summary>
            <param name="roleCode">角色编号。</param>
            <param name="rightCodes">权限编码拼接字符串。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRoleRight.Delete(Shmzh.Components.SystemComponent.RoleRightInfo)">
            <summary>
            删除角色权限。
            </summary>
            <param name="roleRightInfo">角色权限实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRoleRight.Delete(System.Int16)">
            <summary>
            根据角色编号删除角色权限关系。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRoleRight.GetAll">
            <summary>
            获取所有的角色权限关系。
            </summary>
            <returns>角色权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRoleRight.GetAllAvalible">
            <summary>
            获取所有有效的角色权限关系。
            </summary>
            <returns>角色权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRoleRight.GetByRoleCode(System.Int16)">
            <summary>
            根据角色编号获取角色权限。
            </summary>
            <returns>角色权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRoleRight.GetByRightCode(System.Int16)">
            <summary>
            根据权限编号获取角色权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <returns>角色权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRoleRight.GetByProductCodeAndUserName(System.Int16,System.String)">
            <summary>
            根据用户名获取角色权限集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="userName">用户名。</param>
            <returns>角色权限集合。</returns>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.SQL_INSERT_ROLERIGHT">
            <summary>
            添加组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.SQL_DELETE_ROLERIGHT">
            <summary>
            删除组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.SQL_SELECT_BY_ROLECODE">
            <summary>
            获取所有有效的用户角色记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.SQL_SELECT_BY_RIGHTCODE">
            <summary>
            根据权限编号获取角色权限的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.PARM_ROLECODE">
            <summary>
            用户名参数。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.PARM_RIGHTCODE">
            <summary>
            角色编号参数。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.GetRoleRightParameters">
            <summary>
            获取用户角色参数。
            </summary>
            <returns>参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.ConvertToRoleRightInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成RoleRightInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>用户权限实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.Insert(Shmzh.Components.SystemComponent.RoleRightInfo)">
            <summary>
            添加用户角色。
            </summary>
            <param name="roleRightInfo">用户角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.Insert(System.Int16,System.String)">
            <summary>
            批量添加角色权限。
            </summary>
            <param name="roleCode">角色编号。</param>
            <param name="rightCodes">权限编码拼接字符串。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.Delete(Shmzh.Components.SystemComponent.RoleRightInfo)">
            <summary>
            删除角色权限实体。
            </summary>
            <param name="roleRightInfo">角色权限实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.Delete(System.Int16)">
            <summary>
            根据角色编号删除角色权限关系。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.GetByRoleCode(System.Int16)">
            <summary>
            根据角色编号获取角色权限。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>角色权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.GetByRightCode(System.Int16)">
            <summary>
            根据权限编号获取角色权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <returns>角色权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RoleRight.GetByProductCodeAndUserName(System.Int16,System.String)">
            <summary>
            根据用户名获取角色权限集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="userName">用户名。</param>
            <returns>角色权限集合。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserDetailInfo">
            <summary>
            工作流中用户的详细信息实体.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserDetailInfo.UserId">
            <summary>
            用户Id。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserDetailInfo.HRID">
            <summary>
            工号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserDetailInfo.UserName">
            <summary>
            登陆名
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserDetailInfo.UserDspName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserDetailInfo.JobTitle">
            <summary>
            职位名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserDetailInfo.OrgID">
            <summary>
            部门Id
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserDetailInfo.OrgName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.EntityState">
            <summary>
            List of possible state for an entity.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.EntityState.Unchanged">
            <summary>
            Entity is unchanged
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.EntityState.Added">
            <summary>
            Entity is new
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.EntityState.Changed">
            <summary>
            Entity has been modified
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.EntityState.Deleted">
            <summary>
            Entity has been deleted
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IEntity">
            <summary>
            The interface that each business object of the model implements.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IEntity.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IEntity.MarkToDelete">
            <summary>
            Marks entity to be deleted.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.IEntity.TableName">
            <summary>
            The name of the underlying database table.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.IEntity.IsDirty">
             <summary>
            	Indicates if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.IEntity.IsNew">
             <summary>
            	Indicates if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.IEntity.IsDeleted">
            <summary>
            True if object has been marked as deleted. ReadOnly.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.IEntity.IsValid">
            <summary>
            Indicates if the object is in a valid state
            </summary>
            <value>True if object is valid; otherwise False.</value>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.IEntity.EntityState">
            <summary>
            Returns one of EntityState enum values - intended to replace IsNew, IsDirty, IsDeleted.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.IEntity.ParentCollection">
            <summary>
            Gets or sets the parent collection.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.IEntity.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
            <value>A string array that holds the columns names.</value>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.IEntity.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.IEntity.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.IEntity.IsEntityTracked">
            <summary>
            Determines whether this entity is being tracked.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.IEntity.EntityTrackingKey">
            <summary>
             The tracking key 
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.ICloneableEx">
            <summary>
                Interface that TList and every entity implements to support
            	cloning of an object tree.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ICloneableEx.Clone(System.Collections.IDictionary)">
            <summary>
             The tracking key 
            </summary>
            <param name="existingCopies">A list containing references to all objects already copied.</param>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.ISetting">
            <summary>
            配置信息的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISetting.Insert(Shmzh.Components.SystemComponent.SettingInfo)">
            <summary>
            添加配置信息。
            </summary>
            <param name="settingInfo">配置信息实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISetting.Update(Shmzh.Components.SystemComponent.SettingInfo)">
            <summary>
            修改配置信息。
            </summary>
            <param name="settingInfo">配置信息实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISetting.Delete(Shmzh.Components.SystemComponent.SettingInfo)">
            <summary>
            删除配置信息。
            </summary>
            <param name="settingInfo">配置信息实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISetting.Delete(System.String)">
            <summary>
            删除配置信息。
            </summary>
            <param name="key">配置信息编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISetting.IsExist(System.String)">
            <summary>
            是否已经存在配置信息名称。
            </summary>
            <param name="key">配置信息的键。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISetting.GetAll">
            <summary>
            获取所有配置信息。
            </summary>
            <returns>配置信息集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISetting.GetByCategory(System.String)">
            <summary>
            根据分类获取配置信息。
            </summary>
            <param name="category">分类名称。</param>
            <returns>配置信息集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISetting.GetByKey(System.String)">
            <summary>
            根据配置信息编号获取配置信息。
            </summary>
            <param name="key">配置信息编号。</param>
            <returns>配置信息。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IGrant">
            <summary>
            组的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGrant.Insert(Shmzh.Components.SystemComponent.GrantInfo)">
            <summary>
            添加授权记录。
            </summary>
            <param name="grantInfo">授权记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGrant.Update(Shmzh.Components.SystemComponent.GrantInfo)">
            <summary>
            修改授权记录。
            </summary>
            <param name="grantInfo">授权记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGrant.Delete(Shmzh.Components.SystemComponent.GrantInfo)">
            <summary>
            删除授权记录。
            </summary>
            <param name="grantInfo">授权记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGrant.Delete(System.Int64)">
            <summary>
            删除授权记录。
            </summary>
            <param name="id">授权记录PKID。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGrant.GetAllAvalibleByGrantor(System.String)">
            <summary>
            根据授权人获取当前有效的授权记录。
            </summary>
            <param name="grantor">授权人用户名。</param>
            <returns>授权记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGrant.GetAllAvalibleByEmbracer(System.String)">
            <summary>
            根据被授权人获取当前有效的授权记录。
            </summary>
            <param name="Embracer">被授权人用户名。</param>
            <returns>授权记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGrant.GetById(System.Int64)">
            <summary>
            根据Id获取授权记录实体。
            </summary>
            <param name="id">授权记录Id。</param>
            <returns>授权记录实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.ITB_UserCat">
            <summary>
            东兰工作流用户分类数据接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_UserCat.Insert(Shmzh.Components.SystemComponent.Model.TB_UserCatInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加用户分类。
            </summary>
            <param name="obj">用户实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_UserCat.Update(Shmzh.Components.SystemComponent.Model.TB_UserCatInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改用户分类。
            </summary>
            <param name="obj">用户实体。</param>
            <param name="trans">事务对象</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_UserCat.Delete(Shmzh.Components.SystemComponent.Model.TB_UserCatInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除用户分类实体。
            </summary>
            <param name="obj">用户分类实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_UserCat.Delete(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            删除用户分类实体。
            </summary>
            <param name="id">用户分类Id。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_UserCat.GetByUserCatName(System.String)">
            <summary>
            根据用户分类名称获取用户分类信息。
            </summary>
            <param name="userCatName">用户分类名称。</param>
            <returns>用户分类实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SystemInfo">
            <summary>
            SystemInfo 的摘要说明
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SystemInfo.GetCpuId">
            <summary>
            查询CPU编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SystemInfo.GetMainHardDiskId">
            <summary>
            查询硬盘编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SystemInfo.GetWinDirectory">
            <summary>
            获取Windows目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SystemInfo.GetSysDirectory">
            <summary>
            获取系统目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SystemInfo.GetCpuInfo">
            <summary>
            获取CPU信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SystemInfo.GetMemoryInfo">
            <summary>
            获取系统内存信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SystemInfo.GetSystemTimeInfo">
            <summary>
            获取系统时间信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SystemInfo.GetOperationSystemInName">
            <summary>
            获取系统名称
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.Product">
            <summary>
             产品的SQL Server数据访问层。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Product.Insert(Shmzh.Components.SystemComponent.ProductInfo)">
            <summary>
            添加产品。
            </summary>
            <param name="productInfo">产品实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Product.Update(Shmzh.Components.SystemComponent.ProductInfo)">
            <summary>
            修改产品。
            </summary>
            <param name="productInfo">产品实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Product.Delete(Shmzh.Components.SystemComponent.ProductInfo)">
            <summary>
            删除产品。
            </summary>
            <param name="productInfo">产品实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Product.Delete(System.Int16)">
            <summary>
            删除产品。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Product.Register(Shmzh.Components.SystemComponent.ProductInfo)">
            <summary>
            注册产品。
            </summary>
            <param name="productInfo">产品实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Product.IsExist(System.Int16)">
            <summary>
            判断产品编号是否已经存在。
            </summary>
            <param name="productCode"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Product.IsExist(System.String)">
            <summary>
            是否已经存在产品名称。
            </summary>
            <param name="productName">产品名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Product.GetAll">
            <summary>
            获取所有产品。
            </summary>
            <returns>ArrayList。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Product.GetAllAvalible">
            <summary>
            获取所有有效的产品。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Product.GetByCode(System.Int16)">
            <summary>
            根据产品编号获取产品。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>ArrayList</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Product.GetProductParameters">
            <summary>
            获取产品参数。
            </summary>
            <returns>产品参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Product.ConvertToProductInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成ProductInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>产品实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IRightCat">
            <summary>
            权限分组的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRightCat.Insert(Shmzh.Components.SystemComponent.RightCatInfo)">
            <summary>
            添加权限分组。
            </summary>
            <param name="rightCatInfo">权限分组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRightCat.Update(Shmzh.Components.SystemComponent.RightCatInfo)">
            <summary>
            修改权限分组。
            </summary>
            <param name="rightCatInfo">权限分组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRightCat.Delete(Shmzh.Components.SystemComponent.RightCatInfo)">
            <summary>
            删除权限分组。
            </summary>
            <param name="rightCatInfo">权限分组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRightCat.Delete(System.String)">
            <summary>
            删除权限分组。
            </summary>
            <param name="code">权限分组编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRightCat.IsExist(System.String)">
            <summary>
            判断是否已经存在权限分组编号。
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRightCat.IsExist(System.Int16,System.String)">
            <summary>
            判断在同一个产品下是否已经存在权限分组名称。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="name">权限分组名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRightCat.HasChildren(System.String)">
            <summary>
            是否有子分类。
            </summary>
            <param name="code">权限分类编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRightCat.GetAllByProductCode(System.Int16)">
            <summary>
            获取所有权限分组。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限分组集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRightCat.GetAllAvalibleByProductCode(System.Int16)">
            <summary>
            获取所有有效的权限分组。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限分组集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRightCat.GetByCode(System.String)">
            <summary>
            根据组编号获取权限分组。
            </summary>
            <param name="code">权限分组编号。</param>
            <returns>权限分组集合。</returns>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.SQL_INSERT_RIGHTCAT">
            <summary>
            添加权限分组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.SQL_UPDATE_RIGHTCAT">
            <summary>
            修改权限分组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.SQL_DELETE_RIGHTCAT">
            <summary>
            删除权限分组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.SQL_SELECT_ALL_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取所有权限分组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.SQL_SELECT_ALLAVALIBLE_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取所有有效的权限分组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.SQL_SELECT_BY_CODE">
            <summary>
            根据权限分组编号获取权限分组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.SQL_SELECT_COUNT_BY_CODE">
            <summary>
            判断权限编号是否已经存在的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.SQL_SELECT_COUNT_BY_PRODUCTCODE_NAME">
            <summary>
            判断在同一产品下是否存在相同的名称权限分组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.SQL_SELECT_CHILDCOUNT_BY_CODE">
            <summary>
            判断权限分类是否被使用。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.GetRightCatParameters">
            <summary>
            获取权限分组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.ConvertToRightCatInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.Insert(Shmzh.Components.SystemComponent.RightCatInfo)">
            <summary>
            添加权限分组。
            </summary>
            <param name="rightCatInfo">权限分组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.Update(Shmzh.Components.SystemComponent.RightCatInfo)">
            <summary>
            修改权限分组。
            </summary>
            <param name="rightCatInfo">权限分组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.Delete(Shmzh.Components.SystemComponent.RightCatInfo)">
            <summary>
            删除权限分组。
            </summary>
            <param name="rightCatInfo">权限分组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.Delete(System.String)">
            <summary>
            删除权限分组。
            </summary>
            <param name="code">权限分组编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.IsExist(System.String)">
            <summary>
            判断权限分组编号是否已经存在。
            </summary>
            <param name="code">权限编号编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.IsExist(System.Int16,System.String)">
            <summary>
            判断权限分组名称是否已经存在。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="name">权限分组名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.GetAllByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有的权限分组。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限分组集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.GetAllAvalibleByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有有效的权限分组。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限分组集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.RightCat.GetByCode(System.String)">
            <summary>
            根据编号获取权限分组。
            </summary>
            <param name="code">权限分组编号。</param>
            <returns>权限分组实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.TB_Users">
            <summary>
            东兰数据库用户的数据访问类。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.ITB_Users">
            <summary>
            东兰工作流用户数据接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_Users.Insert(Shmzh.Components.SystemComponent.TB_UsersInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加工作流人员信息.
            </summary>
            <param name="tbluserInfo">用户信息。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_Users.Update(Shmzh.Components.SystemComponent.TB_UsersInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改东兰工作流人员信息。
            </summary>
            <param name="tbluserInfo">用户信息。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_Users.Delete(Shmzh.Components.SystemComponent.TB_UsersInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流人员信息。
            </summary>
            <param name="tbluserInfo">用户信息。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_Users.Delete(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流人员信息。
            </summary>
            <param name="key">人员信息编号。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_Users.GetByUserName(System.String)">
            <summary>
            根据用户名获取人员信息。
            </summary>
            <param name="userName">用户名。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_Users.GetByHrId(System.String)">
            <summary>
            根据工号获取人员信息。
            </summary>
            <param name="hrid">工号。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_Users.GetByOrgId(System.Int32)">
            <summary>
            根据组织机构Id获取用户列表。
            </summary>
            <param name="orgId">组织机构Id。</param>
            <returns>用户列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_Users.GetAll">
            <summary>
            获取所有的用户列表。
            </summary>
            <returns>所有的用户列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_Users.GetAllAvalible">
            <summary>
            获取所有有效的用户列表。
            </summary>
            <returns>所有有效的用户列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_Users.Insert(Shmzh.Components.SystemComponent.TB_UsersInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加东兰工作流人员信息。
            </summary>
            <param name="obj">用户。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_Users.Update(Shmzh.Components.SystemComponent.TB_UsersInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改东兰工作流人员信息。
            </summary>
            <param name="obj">配置信息实体。</param>
            <param name="trans"></param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_Users.Delete(Shmzh.Components.SystemComponent.TB_UsersInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流人员信息。
            </summary>
            <param name="tbluserInfo">配置信息实体。</param>
            <param name="trans"></param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_Users.Delete(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流人员信息。
            </summary>
            <param name="key">人员信息编号。</param>
            <param name="trans"></param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_Users.GetByUserName(System.String)">
            <summary>
            根据用户名获取人员信息。
            </summary>
            <param name="userName">用户名。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_Users.GetByOrgId(System.Int32)">
            <summary>
            根据组织机构Id获取用户列表。
            </summary>
            <param name="orgId">组织机构Id。</param>
            <returns>用户列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_Users.GetAll">
            <summary>
            获取所有的用户列表。
            </summary>
            <returns>所有的用户列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_Users.GetAllAvalible">
            <summary>
            获取所有有效的用户列表。
            </summary>
            <returns>所有有效的用户列表。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGTREE">
            <summary>
            组织机构的SQL Server的数据访问对象。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.ITB_ORGTREE">
            <summary>
            工作流组织机构的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGTREE.Insert(Shmzh.Components.SystemComponent.TB_ORGTREEInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加东兰工作流部门信息。
            </summary>
            <param name="tborgtreeinfo">配置信息实体。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGTREE.Update(Shmzh.Components.SystemComponent.TB_ORGTREEInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改东兰工作流部门信息。
            </summary>
            <param name="tborgtreeinfo">配置信息实体。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGTREE.Delete(Shmzh.Components.SystemComponent.TB_ORGTREEInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流部门信息。
            </summary>
            <param name="tborgtreeinfo">配置信息实体。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGTREE.Delete(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流部门信息。
            </summary>
            <param name="itemId">部门key。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGTREE.GetAll">
            <summary>
            获取所有组织机构。
            </summary>
            <returns>所有组织机构。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGTREE.GetAllAvalible">
            <summary>
            获取所有组织机构。
            </summary>
            <returns>所有组织机构。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGTREE.GetByName(System.String)">
            <summary>
            根据名称获取组织机构。
            </summary>
            <param name="name">名称。</param>
            <returns>组织机构。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGTREE.IsExistName(System.String)">
            <summary>
            东兰工作流是否存在某一名称的部门
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGTREE.Disable(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            部门失效
            </summary>
            <param name="itemid"></param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGTREE.HasChildDept(System.String)">
            <summary>
            判断是否有子部门。
            </summary>
            <param name="deptname">部门名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGTREE.HasUser(System.String)">
            <summary>
            判断是否有用户。
            </summary>
            <param name="deptName">父部门名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGTREE.HasLeader(System.String)">
            <summary>
            判断是否有领导。
            </summary>
            <param name="deptName">部门名称。</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGTREE.Insert(Shmzh.Components.SystemComponent.TB_ORGTREEInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加东兰工作流部门信息。
            </summary>
            <param name="obj">配置信息实体。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGTREE.Update(Shmzh.Components.SystemComponent.TB_ORGTREEInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改东兰工作流部门信息。
            </summary>
            <param name="obj">配置信息实体。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGTREE.Delete(Shmzh.Components.SystemComponent.TB_ORGTREEInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流部门信息。
            </summary>
            <param name="tborgtreeinfo">配置信息实体。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGTREE.Delete(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流部门信息。
            </summary>
            <param name="itemId">部门key。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGTREE.GetAll">
            <summary>
            获取所有组织机构。
            </summary>
            <returns>所有组织机构。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGTREE.GetAllAvalible">
            <summary>
            获取所有组织机构。
            </summary>
            <returns>所有组织机构。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGTREE.Disable(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            部门失效
            </summary>
            <param name="itemId"></param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGTREE.IsExistName(System.String)">
            <summary>
            东兰工作流是否存在某一名称的部门
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGTREE.HasChildDept(System.String)">
            <summary>
            判断是否有子部门。
            </summary>
            <param name="deptName">部门名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGTREE.HasUser(System.String)">
            <summary>
            判断是否有用户。
            </summary>
            <param name="deptName">父部门名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGTREE.HasLeader(System.String)">
            <summary>
            判断是否有领导。
            </summary>
            <param name="deptName">部门名称。</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGTREE.GetByName(System.String)">
            <summary>
            根据名称获取组织机构。
            </summary>
            <param name="name">名称。</param>
            <returns>组织机构。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.ConnectionString">
            <summary>
            SystemComponent组件所连接数据库的连接字符串.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ConnectionString.GetDBConnectionString(System.String)">
            <summary>
            根据ComponentConfiguration.xml的SectionName获取数据库的连接字符串。
            </summary>
            <param name="sectionName">ComponentConfiguration.xml中Section名称。</param>
            <returns>数据库连接字符串。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ConnectionString.#ctor">
            <summary>
            内部构造函数。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.Value">
            <summary>
            SystemComponent组件使用的数据库连接字符串.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.PubData">
            <summary>
            PubData的数据库连接字符串。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.KM">
            <summary>
            知识管理数据库的连接字符串。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.MM">
            <summary>
            物料管理数据库的连接字符串。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.CRM">
            <summary>
            供应商数据库的连接字符串。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.PM">
            <summary>
            项目管理数据库的连接字符串。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.ET">
            <summary>
            食堂管理数据库的连接字符串。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.INFO">
            <summary>
            杨水信息数据库的连接字符串。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.Produce">
            <summary>
            生产数据库的连接字符串。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.DEV">
            <summary>
            设备数据库的连接字符串。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.Address">
            <summary>
            通讯录数据库的连接字符串。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.MAIL">
            <summary>
            邮件数据库的连接字符串。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.DLFLODB">
            <summary>
            工作流数据库的连接字符串。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.NetDoor">
            <summary>
            巡检数据库的连接字符串。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.HR">
            <summary>
            人事数据库。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.Monitor">
            <summary>
            生产监控数据库。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ConnectionString.Contract">
            <summary>
            合同数据库。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.OnlineStatus">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OnlineStatus.Insert(Shmzh.Components.SystemComponent.OnlineStatusInfo)">
            <summary>
            增加。
            </summary>
            <param name="onlineStatus">用户在线状态实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OnlineStatus.Update(Shmzh.Components.SystemComponent.OnlineStatusInfo)">
            <summary>
            修改。
            </summary>
            <param name="onlineStatus">用户在线状态实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OnlineStatus.Delete(Shmzh.Components.SystemComponent.OnlineStatusInfo)">
            <summary>
            删除。
            </summary>
            <param name="onlineStatus"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OnlineStatus.GetByUserNameAndIPAddress(System.String,System.String)">
            <summary>
            根据用户名和IP地址获取用户在线状态记录。
            </summary>
            <param name="userName">用户名。</param>
            <param name="ipAddress">IP地址。</param>
            <returns>用户在线状态实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OnlineStatus.GetByUserName(System.String)">
            <summary>
            根据用户名获取用户在线状态记录集。
            </summary>
            <param name="userName">用户名。</param>
            <returns>IList</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OnlineStatus.GetByIPAddress(System.String)">
            <summary>
            根据IP地址获取用户在线状态记录集。
            </summary>
            <param name="ipAddress">IP地址。</param>
            <returns>IList。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OnlineStatus.GetOnlineUser">
            <summary>
            根据在线用户记录集。
            </summary>       
            <returns>IList</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OnlineStatus.GetOnlineStatusParameters">
            <summary>
            获取Insert和Update命令的参数数组。
            </summary>
            <returns>Sql参数数组。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.ICompany">
            <summary>
            组的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ICompany.Insert(Shmzh.Components.SystemComponent.CompanyInfo)">
            <summary>
            添加公司。
            </summary>
            <param name="companyInfo">公司实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ICompany.Update(Shmzh.Components.SystemComponent.CompanyInfo)">
            <summary>
            修改公司。
            </summary>
            <param name="companyInfo">公司实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ICompany.Delete(Shmzh.Components.SystemComponent.CompanyInfo)">
            <summary>
            删除公司。
            </summary>
            <param name="companyInfo">公司实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ICompany.Delete(System.String)">
            <summary>
            删除公司。
            </summary>
            <param name="coCode">公司编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ICompany.IsExistCode(System.String)">
            <summary>
            判断公司编号是否已经存在。
            </summary>
            <param name="coCode">公司编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ICompany.IsExistName(System.String)">
            <summary>
            是否已经存在组名称。
            </summary>
            <param name="coCnName">公司名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ICompany.GetAll">
            <summary>
            获取所有公司。
            </summary>
            <returns>公司集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ICompany.GetAllAvalible">
            <summary>
            获取所有有效的公司。
            </summary>
            <returns>公司集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ICompany.GetByCode(System.String)">
            <summary>
            根据公司编号获取公司。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>公司实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ICompany.GetDefault">
            <summary>
            获取默认的公司。
            </summary>
            <returns>公司信息。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Setting.GetSettingInfoParameters">
            <summary>
            获取查询模块参数。
            </summary>
            <returns>查询模块参数。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Setting.ConvertToSettingInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成SEModuleInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>查询模块实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.SEControlType">
            <summary>
            查询引擎的控件类型的SQLServer的数据访问层。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.ISEControlType">
            <summary>
            查询引擎控件类型的数据接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControlType.Insert(Shmzh.Components.SystemComponent.SEControlTypeInfo)">
            <summary>
            添加控件类型。
            </summary>
            <param name="obj">控件类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControlType.Update(Shmzh.Components.SystemComponent.SEControlTypeInfo)">
            <summary>
            修改控件类型。
            </summary>
            <param name="obj">控件类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControlType.Delete(Shmzh.Components.SystemComponent.SEControlTypeInfo)">
            <summary>
            删除控件类型实体。
            </summary>
            <param name="obj">控件类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControlType.Delete(System.Int32)">
            <summary>
            删除控件类型实体。
            </summary>
            <param name="id">控件类型实体id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControlType.GetAll">
            <summary>
            获取所有的控件类型。
            </summary>
            <returns>控件类型集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControlType.GetById(System.Int32)">
            <summary>
            根据Id获取控件类型。
            </summary>
            <param name="id">控件类型id。</param>
            <returns>控件类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControlType.IsExist(System.Int32)">
            <summary>
            判断id是否已经存在。
            </summary>
            <param name="id">id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControlType.IsExist(System.String)">
            <summary>
            判断名称是否已经存在。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlType.GetSEControlTypeParameters">
            <summary>
            获取查询引擎的数据类型的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlType.ConvertToSEControlTypeInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成SEControlTypeInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>查询引擎控件类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlType.Insert(Shmzh.Components.SystemComponent.SEControlTypeInfo)">
            <summary>
            添加控件类型。
            </summary>
            <param name="obj">控件类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlType.Update(Shmzh.Components.SystemComponent.SEControlTypeInfo)">
            <summary>
            修改控件类型。
            </summary>
            <param name="obj">控件类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlType.Delete(Shmzh.Components.SystemComponent.SEControlTypeInfo)">
            <summary>
            删除控件类型实体。
            </summary>
            <param name="obj">控件类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlType.Delete(System.Int32)">
            <summary>
            删除控件类型实体。
            </summary>
            <param name="id">控件类型实体id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlType.GetAll">
            <summary>
            获取所有的控件类型。
            </summary>
            <returns>控件类型集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlType.GetById(System.Int32)">
            <summary>
            根据Id获取控件类型。
            </summary>
            <param name="id">控件类型id。</param>
            <returns>控件类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlType.IsExist(System.Int32)">
            <summary>
            判断id是否已经存在。
            </summary>
            <param name="id">id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControlType.IsExist(System.String)">
            <summary>
            判断名称是否已经存在。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.GroupRole">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IGroupRole">
            <summary>
            组与角色关系的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.Insert(Shmzh.Components.SystemComponent.GroupRoleInfo)">
            <summary>
            添加组角色。
            </summary>
            <param name="groupRoleInfo">组角色。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.Insert(System.String,System.String,System.Int16)">
            <summary>
            批量添加组角色。
            </summary>
            <param name="groupCodes">组编号串。</param>
            <param name="roleCodes">角色编号串。</param>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
            <remarks>首先删除</remarks>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.Insert(System.String,System.String,System.String,System.String)">
            <summary>
            针对知识库条目批量添加组角色。
            </summary>
            <param name="groupCodes">组编号串。</param>
            <param name="roleCodes">角色编号串。</param>
            <param name="checkCode">知识库条目id。</param>
            <param name="type">知识库条目类型。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.Delete(Shmzh.Components.SystemComponent.GroupRoleInfo)">
            <summary>
            删除组角色。
            </summary>
            <param name="groupRoleInfo">组角色。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.Delete(System.String,System.Int16)">
            <summary>
            删除某些组的某一产品的组角色关系。
            </summary>
            <param name="groupCodes">组编号。</param>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.Delete(System.String,System.String,System.String)">
            <summary>
            针对知识库条目删除组的角色。
            </summary>
            <param name="groupCodes"></param>
            <param name="checkCode"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.ClearAccess(System.String,System.String)">
            <summary>
            清除知识库条目的访问控制。
            </summary>
            <param name="checkCode">知识库条目id。</param>
            <param name="type">知识库条目类型。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.CopyTo(System.String,System.String,System.Int16)">
            <summary>
            复制组角色到目标组
            </summary>
            <param name="sourceGroupCode">源组名称。</param>
            <param name="targetGroupCode">目标组名称。</param>
            <param name="productCode">产品编号。</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.GetByGroupCodeAndProductCode(System.Int16,System.Int16)">
            <summary>
            根据组编号和产品编号获取组角色。
            </summary>
            <param name="groupCode">组编号。</param>
            <param name="productCode">产品编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.GetByGroupCodeAndCheckCodeAndType(System.Int16,System.String,System.String)">
            <summary>
            根据组编号和知识库条目编号和知识库条目类型获取组角色。
            </summary>
            <param name="groupCode">组编号。</param>
            <param name="checkCode">知识库条目编号。</param>
            <param name="type">知识库条目类型。</param>
            <returns>组角色编号。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.GetByCheckCodeAndType(System.String,System.String)">
            <summary>
            根据知识库条目编号和知识库条目类型获取组角色。
            </summary>
            <param name="checkCode">知识库条目编号。</param>
            <param name="type">知识库条目类型。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.GetByProductCode(System.Int16)">
            <summary>
            根据产品编号获取组角色编号。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.GetByRoleCode(System.Int16)">
            <summary>
            根据产品编号和角色编号获取组角色。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.GetByProductCodeAndName(System.Int16,System.String)">
            <summary>
            根据产品编号和用户名、姓名来获取组角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="name">组名。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.GetByProductCodeAndGroupCode(System.Int16,System.Int16)">
            <summary>
            根据产品编号和组编号来获取组角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="groupCode">组编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.GetByProductCodeAndGroupCodeAndCheckCodeAndType(System.Int16,System.Int16,System.String,System.String)">
            <summary>
            根据产品编号和组编号和检查对象来获取组角色集合
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="groupCode">组编号。</param>
            <param name="checkCode">检查对象编号。</param>
            <param name="type">检查对象类型。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupRole.GetByGroupCodeAndType(System.Int16,System.String)">
            <summary>
            根据用户组和访问对象类型获取组角色列表。
            </summary>
            <param name="groupCode">用户组编号</param>
            <param name="type">访问对象类型</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.SQL_INSERT_GROUPROLE">
            <summary>
            添加组角色记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.SQL_DELETE_GROUPROLE">
            <summary>
            删除组角色记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.SQL_SELECT_BY_GROUPCODE_PRODUCTCODE">
            <summary>
            根据组编号和产品编号获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.SQL_SELECT_BY_GROUPCODE_CHECKCODE_TYPE">
            <summary>
            根据组编号和知识库条目号和知识库条目类型来获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.SQL_SELECT_BY_CHECKCODE_TYPE">
            <summary>
            根据知识库条目号和知识库条目类型来获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.SQL_SELECT_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.SQL_SELECT_BY_ROLECODE">
            <summary>
            根据角色编号获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.SQL_SELECT_BY_PRODUCTCODE_NAME">
            <summary>
            根据产品编号和组名(模糊)来获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.SQL_SELECT_BY_PRODUCTCODE_GROUPCODE">
            <summary>
            根据产品编号和组编号获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.SQL_CLEARACCESS">
            <summary>
            清除知识库条目的访问控制。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.SQL_COPYTOGROUPROLE_BY_SOURCEGROUPCODE_TARGETGROUPCODE_PRODUCTCODE">
            <summary>
            复制组权限到目标组
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.GetGroupRoleParameters">
            <summary>
            获取用户角色参数。
            </summary>
            <returns>参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.ConvertToGroupRoleInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.Insert(Shmzh.Components.SystemComponent.GroupRoleInfo)">
            <summary>
            添加组角色。
            </summary>
            <param name="groupRoleInfo">组角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.GetByGroupCodeAndProductCode(System.Int16,System.Int16)">
            <summary>
            根据组编号和产品编号获取组角色。
            </summary>
            <param name="groupCode">组编号。</param>
            <param name="productCode">产品编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.GetByGroupCodeAndCheckCodeAndType(System.Int16,System.String,System.String)">
            <summary>
            根据组编号和知识库条目号和知识库条目类型获取组角色。
            </summary>
            <param name="groupCode">组编号。</param>
            <param name="checkCode">知识库条目号。</param>
            <param name="type">知识库条目类型。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.GetByCheckCodeAndType(System.String,System.String)">
            <summary>
            根据知识库条目号和知识库条目类型获取组角色。
            </summary>
            <param name="checkCode">知识库条目号。</param>
            <param name="type">知识库条目类型。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.GetByProductCode(System.Int16)">
            <summary>
            根据产品编号获取组角色。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.GetByRoleCode(System.Int16)">
            <summary>
            根据角色编号获取组角色集合。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.GetByProductCodeAndName(System.Int16,System.String)">
            <summary>
            根据产品编号和组名来获取组角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="name">组名称。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.GetByProductCodeAndGroupCode(System.Int16,System.Int16)">
            <summary>
            根据产品编号和组编号获取组角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="groupCode">组编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.GetByProductCodeAndGroupCodeAndCheckCodeAndType(System.Int16,System.Int16,System.String,System.String)">
            <summary>
            根据产品编号和组编号和检查对象来获取组角色集合
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="groupCode">组编号。</param>
            <param name="checkCode">检查对象编号。</param>
            <param name="type">检查对象类型。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupRole.GetByGroupCodeAndType(System.Int16,System.String)">
            <summary>
            根据用户组和访问对象类型获取组角色列表。
            </summary>
            <param name="groupCode">用户组编号</param>
            <param name="type">访问对象类型</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupUserService.GroupUser">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.#ctor">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.Insert(Shmzh.Components.SystemComponent.GroupUserService.GroupUserInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.InsertAsync(Shmzh.Components.SystemComponent.GroupUserService.GroupUserInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.InsertAsync(Shmzh.Components.SystemComponent.GroupUserService.GroupUserInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.Delete(Shmzh.Components.SystemComponent.GroupUserService.GroupUserInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.DeleteAsync(Shmzh.Components.SystemComponent.GroupUserService.GroupUserInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.DeleteAsync(Shmzh.Components.SystemComponent.GroupUserService.GroupUserInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.GetAll">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.GetAllAsync">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.GetAllAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.GetByGroupCode(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.GetByGroupCodeAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.GetByGroupCodeAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.GetByUserCode(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.GetByUserCodeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.GetByUserCodeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.InsertCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.DeleteCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.GetAllCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.GetByGroupCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupUserService.GroupUser.GetByUserCodeCompleted">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupUserService.GroupUserInfo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupUserService.GroupUserInfo.GroupCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupUserService.GroupUserInfo.UserCode">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupUserService.InsertCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupUserService.InsertCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupUserService.InsertCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupUserService.DeleteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupUserService.DeleteCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupUserService.DeleteCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupUserService.GetAllCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupUserService.GetAllCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupUserService.GetAllCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupUserService.GetByGroupCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupUserService.GetByGroupCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupUserService.GetByGroupCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupUserService.GetByUserCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupUserService.GetByUserCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupUserService.GetByUserCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupService.Group">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.#ctor">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.Insert(Shmzh.Components.SystemComponent.GroupService.GroupInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.InsertAsync(Shmzh.Components.SystemComponent.GroupService.GroupInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.InsertAsync(Shmzh.Components.SystemComponent.GroupService.GroupInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.Update(Shmzh.Components.SystemComponent.GroupService.GroupInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.UpdateAsync(Shmzh.Components.SystemComponent.GroupService.GroupInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.UpdateAsync(Shmzh.Components.SystemComponent.GroupService.GroupInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.Delete(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.DeleteAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.DeleteAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.IsExist(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.IsExistAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.IsExistAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.GetAll">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.GetAllAsync">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.GetAllAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.GetByCode(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.GetByCodeAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.GetByCodeAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupService.Group.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupService.Group.InsertCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupService.Group.UpdateCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupService.Group.DeleteCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupService.Group.IsExistCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupService.Group.GetAllCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupService.Group.GetByCodeCompleted">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupService.GroupInfo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupService.GroupInfo.GroupCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupService.GroupInfo.GroupName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupService.GroupInfo.Remark">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupService.GroupInfo.SerialNo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupService.GroupInfo.GroupCatId">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupService.InsertCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupService.InsertCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupService.InsertCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupService.UpdateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupService.UpdateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupService.UpdateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupService.DeleteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupService.DeleteCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupService.DeleteCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupService.IsExistCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupService.IsExistCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupService.IsExistCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupService.GetAllCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupService.GetAllCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupService.GetAllCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupService.GetByCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupService.GetByCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupService.GetByCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.SEControl">
            <summary>
            查询引擎的控件的SQLServer的数据访问层。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.ISEControl">
            <summary>
            查询引擎控件的数据接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControl.Insert(Shmzh.Components.SystemComponent.SEControlInfo)">
            <summary>
            添加控件。
            </summary>
            <param name="obj">控件实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControl.Update(Shmzh.Components.SystemComponent.SEControlInfo)">
            <summary>
            修改控件。
            </summary>
            <param name="obj">控件实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControl.Delete(Shmzh.Components.SystemComponent.SEControlInfo)">
            <summary>
            删除控件。
            </summary>
            <param name="obj">控件实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControl.Delete(System.Int32)">
            <summary>
            删除控件。
            </summary>
            <param name="id">控件Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControl.GetAllByModuleId(System.String)">
            <summary>
            根据查询模块Id获取所有控件集合。
            </summary>
            <param name="moduleId">查询模块id。</param>
            <returns>控件集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControl.GetAllAvalibleByModuleId(System.String)">
            <summary>
            根据查询模块Id获取所有有效控件集合。
            </summary>
            <param name="moduleId">查询模块id。</param>
            <returns>控件集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEControl.GetById(System.Int32)">
            <summary>
            根据控件Id获取控件。
            </summary>
            <param name="id">控件id。</param>
            <returns>控件实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControl.GetSEControlParameters">
            <summary>
            获取查询引擎的数据类型的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControl.ConvertToSEControlInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成SEControlTypeInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>查询引擎控件类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControl.Insert(Shmzh.Components.SystemComponent.SEControlInfo)">
            <summary>
            添加控件。
            </summary>
            <param name="obj">控件实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControl.Update(Shmzh.Components.SystemComponent.SEControlInfo)">
            <summary>
            修改控件。
            </summary>
            <param name="obj">控件实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControl.Delete(Shmzh.Components.SystemComponent.SEControlInfo)">
            <summary>
            删除控件。
            </summary>
            <param name="obj">控件实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControl.Delete(System.Int32)">
            <summary>
            删除控件。
            </summary>
            <param name="id">控件Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControl.GetAllByModuleId(System.String)">
            <summary>
            根据查询模块Id获取所有控件集合。
            </summary>
            <param name="moduleId">查询模块id。</param>
            <returns>控件集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControl.GetAllAvalibleByModuleId(System.String)">
            <summary>
            根据查询模块Id获取所有有效控件集合。
            </summary>
            <param name="moduleId">查询模块id。</param>
            <returns>控件集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControl.GetById(System.Int32)">
            <summary>
            根据控件Id获取控件。
            </summary>
            <param name="id">控件id。</param>
            <returns>控件实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IGroupCat">
            <summary>
            组分类的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupCat.Insert(Shmzh.Components.SystemComponent.GroupCatInfo)">
            <summary>
            添加组分类。
            </summary>
            <param name="obj">组分类实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupCat.Update(Shmzh.Components.SystemComponent.GroupCatInfo)">
            <summary>
            修改组分类。
            </summary>
            <param name="obj">组分类实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupCat.Delete(Shmzh.Components.SystemComponent.GroupCatInfo)">
            <summary>
            删除组分类。
            </summary>
            <param name="obj">组分类实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupCat.Delete(System.Int16)">
            <summary>
            删除组分类。
            </summary>
            <param name="id">组分类Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupCat.IsExist(System.String)">
            <summary>
            是否已经存在组分类名称。
            </summary>
            <param name="name">组分类名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupCat.GetAll">
            <summary>
            获取所有组分类。
            </summary>
            <returns>组分类列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroupCat.GetById(System.Int16)">
            <summary>
            根据组编号获取组。
            </summary>
            <param name="id">组编号。</param>
            <returns>组分类。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupCat.ConvertToGroupCatInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupCatInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组分类实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupCat.Insert(Shmzh.Components.SystemComponent.GroupCatInfo)">
            <summary>
            添加组分类。
            </summary>
            <param name="obj">组分类实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupCat.Update(Shmzh.Components.SystemComponent.GroupCatInfo)">
            <summary>
            修改组分类。
            </summary>
            <param name="obj">组分类实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupCat.Delete(Shmzh.Components.SystemComponent.GroupCatInfo)">
            <summary>
            删除组分类。
            </summary>
            <param name="obj">组分类实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupCat.Delete(System.Int16)">
            <summary>
            删除组分类。
            </summary>
            <param name="id">组分类Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupCat.IsExist(System.String)">
            <summary>
            是否已经存在组分类名称。
            </summary>
            <param name="name">组分类名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupCat.GetAll">
            <summary>
            获取所有组分类。
            </summary>
            <returns>组分类列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupCat.GetById(System.Int16)">
            <summary>
            根据组编号获取组。
            </summary>
            <param name="id">组编号。</param>
            <returns>组分类。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IUserDetail">
            <summary>
            工作流人员的查询的数据访问接口.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserDetail.GetByOrg(System.Int32)">
            <summary>
            根据组织机构来获取人员列表.
            </summary>
            <param name="orgId"></param>
            <returns>人员列表.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserDetail.GetByContent(System.String)">
            <summary>
            根据查询内容来获取人员列表.
            </summary>
            <param name="content">查询内容.</param>
            <returns>人员列表.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUserDetail.GetAllAvalible">
            <summary>
            获取所有人员列表.
            </summary>
            <returns>人员列表.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserDetail.ConvertToUserDetailInfo(System.Data.IDataRecord)">
            <summary>
            将SqlDataReader转换为UserDetailInfo实体。
            </summary>
            <param name="dr">SqlDataReader</param>
            <returns>UserDetailInfo实体</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserDetail.GetByOrg(System.Int32)">
            <summary>
            根据组织机构来获取人员列表.
            </summary>
            <param name="orgId"></param>
            <returns>人员列表.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserDetail.GetByContent(System.String)">
            <summary>
            根据查询内容来获取人员列表.
            </summary>
            <param name="content">查询内容.</param>
            <returns>人员列表.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserDetail.GetAllAvalible">
            <summary>
            获取所有人员列表.
            </summary>
            <returns>人员列表.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ProviderCollection.Add(Shmzh.Components.SystemComponent.Provider)">
            <summary>
            Adds the specified provider.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ProviderCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:NetTiersProvider"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RightCatInfo">
            <summary>
            权限分组信息
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RightCatInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RightCatInfo.Code">
            <summary>
            权限分组编号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RightCatInfo.Name">
            <summary>
            权限分组名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RightCatInfo.Desc">
            <summary>
            权限分组描述。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RightCatInfo.ProductCode">
            <summary>
            权限分组所属产品编号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RightCatInfo.IsValid">
            <summary>
            权限分组是否。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SDTransferInfo">
            <summary>
            智能桌面与服务器交互数据时用到的实体类。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SDTransferInfo.ViewTime">
            <summary>
            最新阅读消息时间。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SDTransferInfo.CreateTime">
            <summary>
            最近收取消息时间。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SDTransferInfo.OnlineStatus">
            <summary>
            在线状态。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SDTransferInfo.OnlineCount">
            <summary>
            在线人数。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.ISEDataType">
            <summary>
            查询引擎的控件的数据类型数据接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEDataType.Insert(Shmzh.Components.SystemComponent.SEDataTypeInfo)">
            <summary>
            添加数据类型。
            </summary>
            <param name="obj">数据类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEDataType.Update(Shmzh.Components.SystemComponent.SEDataTypeInfo)">
            <summary>
            修改数据类型。
            </summary>
            <param name="obj">数据类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEDataType.Delete(Shmzh.Components.SystemComponent.SEDataTypeInfo)">
            <summary>
            删除数据类型。
            </summary>
            <param name="obj">数据类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEDataType.Delete(System.Int32)">
            <summary>
            删除数据类型。
            </summary>
            <param name="id">数据类型Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEDataType.GetAll">
            <summary>
            获取所有数据类型集合。
            </summary>
            <returns>数据类型集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEDataType.GetById(System.Int32)">
            <summary>
            根据id获取数据类型。
            </summary>
            <param name="id">数据类型Id</param>
            <returns>数据类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEDataType.IsExist(System.Int32)">
            <summary>
            判断ID是否已经存在。
            </summary>
            <param name="id">id</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEDataType.IsExist(System.String)">
            <summary>
            判断名称是否已经存在。
            </summary>
            <param name="name">名称。</param>
            <returns>bool</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.Group">
            <summary>
            User用户的摘要说明。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Group.SQL_HASRIGHT_BY_RIGHTCODE">
            <summary>
            根据权限编号判断用户是否拥有权限的SQl语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Group.SQL_HASRIGHT_BY_RIGHTCODE_CHECKCODE_TYPE">
            <summary>
            根据权限编号和知识库项目ID和类型来判断用户是否对知识库项目拥有权限的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Group.SQL_ISUNMANAGED_BY_CHECKCODE_TYPE">
            <summary>
            判断知识库条目是否是不受管制的SQL语句。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.Group.#ctor(Shmzh.Components.SystemComponent.GroupInfo)">
            <summary>
            用户实例
            </summary>
            <param name="obj">组实体。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.Group.#ctor(System.Int16)">
            <summary>
            根据用户名构造用户实例.
            </summary>
            <param name="groupCode">组编号.</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.Group.HasRight(System.Int32)">
            <summary>
            是否有权限
            </summary>
            <param name="rightCode">权限编号</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.Group.HasRight(System.Int32,System.String)">
            <summary>
            是否拥有权限，仅限知识库文章使用。
            </summary>
            <param name="rightCode">权限编号</param>
            <param name="docCode">文档编号</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.Group.HasRight(System.Int32,System.String,System.String)">
            <summary>
            是否拥有权限(适用知识管理)
            </summary>
            <param name="rightCode">权限代码</param>
            <param name="checkCode">节点号</param>
            <param name="type">类型（目录、文章）</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.Group.IsUnManaged(System.String,System.String)">
            <summary>
            判断知识库项目是否是不受管制的。
            </summary>
            <param name="checkCode">文章或目录的ID。</param>
            <param name="type">类型(文章或目录);</param>
            <returns>bool</returns>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Group.thisGroupInfo">
            <summary>
            组实体。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Group.OwenedRoles">
            <summary>
            组拥有的角色信息.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Group.RoleRights">
            <summary>
            角色权限.
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.Authorization">
            <summary>
            授权类。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.Authorization.#ctor(System.String,Shmzh.Components.SystemComponent.CompanyInfo)">
            <summary>
            构造函数。
            </summary>
            <param name="licenseKey">注册码。</param>
            <param name="companyInfo">默认单位。</param>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Authorization.LicenseKey">
            <summary>
            授权key值。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Authorization.ProductCode">
            <summary>
            产品编号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Authorization.Company">
            <summary>
            使用单位信息。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Authorization.Users">
            <summary>
            有效的用户列表。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Authorization.AvalibleUserCount">
            <summary>
            系统中有效的用户的数目。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Authorization.LicenseStatus">
            <summary>
            授权状态。-5：公司名称不符。-4:产品编号不符。-3:授权人数不够。-2:非法授权。-1:没有公司信息。0:超出试用期限。1:正式授权。2：试用。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Authorization.LeftTrailDays">
            <summary>
            使用剩余天数。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CpuInfo">
            <summary>
            定义CPU的信息结构
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.CpuInfo.dwOemId">
            <summary>
            OEM ID
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.CpuInfo.dwPageSize">
            <summary>
            页面大小
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.CpuInfo.dwNumberOfProcessors">
            <summary>
            CPU个数
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.CpuInfo.dwProcessorType">
            <summary>
            CPU类型
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.CpuInfo.dwProcessorLevel">
            <summary>
            CPU等级
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IRight">
            <summary>
            权限分组的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRight.Insert(Shmzh.Components.SystemComponent.RightInfo)">
            <summary>
            添加权限。
            </summary>
            <param name="rightInfo">权限实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRight.Update(Shmzh.Components.SystemComponent.RightInfo)">
            <summary>
            修改权限。
            </summary>
            <param name="rightInfo">权限实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRight.Delete(Shmzh.Components.SystemComponent.RightInfo)">
            <summary>
            删除权限。
            </summary>
            <param name="rightInfo">权限实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRight.Delete(System.Int16)">
            <summary>
            删除权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRight.IsExist(System.Int16)">
            <summary>
            判断是否已经存在权限编号。
            </summary>
            <param name="rightCode">权限编号</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRight.IsUsing(System.Int16)">
            <summary>
            判断权限码是否已被使用。
            </summary>
            <param name="rightCode">权限编号。</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRight.GetAllByProductCode(System.Int16)">
            <summary>
            获取所有权限。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRight.GetAllAvalibleByProductCode(System.Int16)">
            <summary>
            获取所有有效的权限。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRight.GetAllByRightCatCode(System.String)">
            <summary>
            根据权限分类获取所有权限集合。
            </summary>
            <param name="rightCatCode">权限分类编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRight.GetAllAvalibleByRightCatCode(System.String)">
            <summary>
            根据权限分类获取所有有效的权限集合。
            </summary>
            <param name="rightCatCode">权限分类编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRight.GetAllOtherByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有没有设置权限分类的权限。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRight.GetAllAvalibleOtherByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有有效的没有设置权限分类的权限。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IRight.GetByCode(System.Int16)">
            <summary>
            根据组编号获取权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <returns>权限实体。</returns>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Right.SQL_INSERT_RIGHT">
            <summary>
            添加权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Right.SQL_UPDATE_RIGHT">
            <summary>
            修改权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Right.SQL_DELETE_RIGHTS">
            <summary>
            删除权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Right.SQL_SELECT_ALL_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取所有权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Right.SQL_SELECT_ALLAVALIBLE_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取所有有效的权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Right.SQL_SELECT_ALL_BY_RIGHTCATCODE">
            <summary>
            根据权限分类编号获取所有的权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Right.SQL_SELECT_ALLAVALIBLE_BY_RIGHTCATCODE">
            <summary>
            根据权限分类编号获取所有有效的权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Right.SQL_SELECT_BY_RIGHTCODE">
            <summary>
            根据权限编号获取权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Right.SQL_SELECT_COUNT_BY_CODE">
            <summary>
            判断权限编号是否已经存在的SQL语句。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Right.GetRightParameters">
            <summary>
            获取权限参数。
            </summary>
            <returns>权限参数。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Right.ConvertToRightInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成RightInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>权限实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Right.Insert(Shmzh.Components.SystemComponent.RightInfo)">
            <summary>
            添加权限。
            </summary>
            <param name="rightInfo">权限实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Right.Update(Shmzh.Components.SystemComponent.RightInfo)">
            <summary>
            修改权限。
            </summary>
            <param name="rightInfo">权限实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Right.Delete(Shmzh.Components.SystemComponent.RightInfo)">
            <summary>
            删除权限。
            </summary>
            <param name="rightInfo">权限实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Right.Delete(System.Int16)">
            <summary>
            删除权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Right.IsExist(System.Int16)">
            <summary>
            判断权限编号是否存在。
            </summary>
            <param name="rightCode">权限编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Right.GetAllByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有权限。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Right.GetAllAvalibleByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有有效的权限。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Right.GetAllByRightCatCode(System.String)">
            <summary>
            根据权限分类获取权限。
            </summary>
            <param name="rightCatCode">权限分类编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Right.GetAllAvalibleByRightCatCode(System.String)">
            <summary>
            根据权限分类获取所有有效的权限集合。
            </summary>
            <param name="rightCatCode">权限分类编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Right.GetAllOtherByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有没有设置权限分类的权限。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Right.GetAllAvalibleOtherByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有有效的没有设置权限分类的权限。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Right.GetByCode(System.Int16)">
            <summary>
            根据权限编号获取权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <returns>权限实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.Group">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IGroup">
            <summary>
            组的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroup.Insert(Shmzh.Components.SystemComponent.GroupInfo)">
            <summary>
            添加组。
            </summary>
            <param name="groupInfo">组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroup.Update(Shmzh.Components.SystemComponent.GroupInfo)">
            <summary>
            修改组。
            </summary>
            <param name="groupInfo">组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroup.Delete(Shmzh.Components.SystemComponent.GroupInfo)">
            <summary>
            删除组。
            </summary>
            <param name="groupInfo">组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroup.Delete(System.Int16)">
            <summary>
            删除组。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroup.IsExist(System.String)">
            <summary>
            是否已经存在组名称。
            </summary>
            <param name="groupName">组名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroup.GetAll">
            <summary>
            获取所有组。
            </summary>
            <returns>ArrayList。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IGroup.GetByCode(System.Int16)">
            <summary>
            根据组编号获取组。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>ArrayList</returns>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Group.SQL_INSERT_GROUP">
            <summary>
            添加组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Group.SQL_UPDATE_GROUP">
            <summary>
            修改组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Group.SQL_DELETE_GROUP">
            <summary>
            删除组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Group.SQL_SELECT_ALL">
            <summary>
            获取所有组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Group.SQL_SELECT_BY_NAME">
            <summary>
            根据组名称获取组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Group.SQL_SELECT_BY_CODE">
            <summary>
            根据组编号获取组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Group.PARM_GROUPCODE">
            <summary>
            组编号。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Group.PARM_GROUPNAME">
            <summary>
            组名称。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Group.PARM_REMARK">
            <summary>
            组描述。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Group.Insert(Shmzh.Components.SystemComponent.GroupInfo)">
            <summary>
            添加组。
            </summary>
            <param name="groupInfo">组信息实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Group.Insert(System.Int16,System.String)">
            <summary>
            批量添加组用户。
            </summary>
            <param name="groupCode">组编号。</param>
            <param name="userNames">用户名拼接字符串。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Group.Update(Shmzh.Components.SystemComponent.GroupInfo)">
            <summary>
            修改组。
            </summary>
            <param name="groupInfo">组信息实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Group.Delete(Shmzh.Components.SystemComponent.GroupInfo)">
            <summary>
            删除组。
            </summary>
            <param name="groupInfo">组信息实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Group.Delete(System.Int16)">
            <summary>
            删除组。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Group.IsExist(System.String)">
            <summary>
            判断组名称是否已经存在。
            </summary>
            <param name="groupName">组名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Group.GetAll">
            <summary>
            获取所有组记录。
            </summary>
            <returns>组记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Group.GetByCode(System.Int16)">
            <summary>
            根据组编好获取组信息实体。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>组信息实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Group.GetGroupParameters">
            <summary>
            获取组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Group.ConvertToGroupInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.Company">
            <summary>
            公司信息的SQL Server 的数据访问对象。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Company.Insert(Shmzh.Components.SystemComponent.CompanyInfo)">
            <summary>
            添加公司。
            </summary>
            <param name="companyInfo">公司实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Company.Update(Shmzh.Components.SystemComponent.CompanyInfo)">
            <summary>
            修改公司。
            </summary>
            <param name="companyInfo">公司实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Company.Delete(Shmzh.Components.SystemComponent.CompanyInfo)">
            <summary>
            删除公司。
            </summary>
            <param name="companyInfo">公司实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Company.Delete(System.String)">
            <summary>
            删除公司。
            </summary>
            <param name="coCode">公司编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Company.IsExistCode(System.String)">
            <summary>
            判断公司编号是否已经存在。
            </summary>
            <param name="coCode">公司编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Company.IsExistName(System.String)">
            <summary>
            是否已经存在组名称。
            </summary>
            <param name="coCnName">公司名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Company.GetAll">
            <summary>
            获取所有公司。
            </summary>
            <returns>公司集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Company.GetAllAvalible">
            <summary>
            获取所有有效的公司。
            </summary>
            <returns>公司集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Company.GetByCode(System.String)">
            <summary>
            根据公司编号获取公司。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>公司实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Company.GetDefault">
            <summary>
            获取默认的公司。
            </summary>
            <returns>公司信息。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Company.GetCompanyParameters">
            <summary>
            获取组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Company.ConvertToCompanyInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.Insert(Shmzh.Components.SystemComponent.DeptInfo)">
            <summary>
            添加部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.Insert(Shmzh.Components.SystemComponent.DeptInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.Update(Shmzh.Components.SystemComponent.DeptInfo)">
            <summary>
            修改部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.Update(Shmzh.Components.SystemComponent.DeptInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.Delete(Shmzh.Components.SystemComponent.DeptInfo)">
            <summary>
            删除部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.Delete(Shmzh.Components.SystemComponent.DeptInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <param name="trans">事务对虾昂。</param>
            <returns>bool。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.Delete(System.String,System.String)">
            <summary>
            删除部门。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.Disable(System.String,System.String)">
            <summary>
            部门失效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.Disable(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            部门失效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.Enable(System.String,System.String)">
            <summary>
            部门有效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.Enable(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            部门起效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门代码。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.IsExistDeptCode(System.String,System.String)">
            <summary>
            是否已经存在部门编号。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.IsExistDeptName(System.String,System.String)">
            <summary>
            是否已经存在部门名称
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptName">部门名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.HasChildDept(System.String,System.String)">
            <summary>
            判断是否有子部门。
            </summary>
            <param name="companyCode">公司编号</param>
            <param name="deptCode">部门名称</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.HasUser(System.String,System.String)">
            <summary>
            判断是否有用户。
            </summary>
            <param name="companyCode">公司编号</param>
            <param name="deptCode">部门名称</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.GetAllByCompanyCode(System.String)">
            <summary>
            获取所有部门。
            </summary>
            <returns>部门集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.GetAllAvalibleCompanyCode(System.String)">
            <summary>
            获取所有有效的部门。
            </summary>
            <returns>部门集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.GetByCompanyAndManager(System.String,System.String)">
            <summary>
            根据公司编号和部门主管获取部门列表。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="manager">部门主管。</param>
            <returns>部门列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.GetByCompanyCodeAndDeptCode(System.String,System.String)">
            <summary>
            根据部门编号获取部门。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>部门实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Dept.GetParentDeptByCode(System.String)">
            <summary>
            根据部门编号获取上级部门。
            </summary>
            <param name="deptCode">部门编号。</param>
            <returns>部门实体。</returns>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Right.SQL_INSERT_RIGHT">
            <summary>
            添加权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Right.SQL_UPDATE_RIGHT">
            <summary>
            修改权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Right.SQL_DELETE_RIGHT">
            <summary>
            删除权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Right.SQL_SELECT_ALL_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取所有权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Right.SQL_SELECT_ALLAVALIBLE_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取所有有效的权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Right.SQL_SELECT_ALL_BY_RIGHTCATCODE">
            <summary>
            根据权限分类编号获取所有的权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Right.SQL_SELECT_ALLAVALIBLE_BY_RIGHTCATCODE">
            <summary>
            根据权限分类编号获取所有有效的权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Right.SQL_SELECT_BY_RIGHTCODE">
            <summary>
            根据权限编号获取权限记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Right.SQL_SELECT_COUNT_BY_CODE">
            <summary>
            判断权限编号是否已经存在的SQL语句。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Right.GetRightParameters">
            <summary>
            获取权限参数。
            </summary>
            <returns>权限参数。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Right.ConvertToRightInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成RightInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>权限实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Right.Insert(Shmzh.Components.SystemComponent.RightInfo)">
            <summary>
            添加权限。
            </summary>
            <param name="rightInfo">权限实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Right.Update(Shmzh.Components.SystemComponent.RightInfo)">
            <summary>
            修改权限。
            </summary>
            <param name="rightInfo">权限实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Right.Delete(Shmzh.Components.SystemComponent.RightInfo)">
            <summary>
            删除权限。
            </summary>
            <param name="rightInfo">权限实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Right.Delete(System.Int16)">
            <summary>
            删除权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Right.IsExist(System.Int16)">
            <summary>
            判断权限编号是否存在。
            </summary>
            <param name="rightCode">权限编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Right.GetAllByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有权限。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Right.GetAllAvalibleByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有有效的权限。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Right.GetAllByRightCatCode(System.String)">
            <summary>
            根据权限分类获取权限。
            </summary>
            <param name="rightCatCode">权限分类编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Right.GetAllAvalibleByRightCatCode(System.String)">
            <summary>
            根据权限分类获取所有有效的权限集合。
            </summary>
            <param name="rightCatCode">权限分类编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Right.GetAllOtherByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有没有设置权限分类的权限。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Right.GetAllAvalibleOtherByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有有效的没有设置权限分类的权限。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Right.GetByCode(System.Int16)">
            <summary>
            根据权限编号获取权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <returns>权限实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.OwnedRole">
            <summary>
            角色与访问对象之间关系的SQLServer的数据访问对象。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IOwnedRole">
            <summary>
            用户具有的访问对象和角色的关系的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOwnedRole.GetAllByProductCode(System.Int16)">
            <summary>
            根据产品获取所有的角色与对象的关系的集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>角色和访问对象关系的集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOwnedRole.GetByUserName(System.String)">
            <summary>
            根据用户名获取用户所具有的角色和访问对象的关系。
            </summary>
            <param name="UserName">用户名。</param>
            <returns>角色和访问对象关系的集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOwnedRole.GetByGroupCode(System.Int16)">
            <summary>
            根据组编号获取具有的角色和访问对象的关系。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>角色和访问对象关系的集合</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OwnedRole.GetAllByProductCode(System.Int16)">
            <summary>
            根据产品获取所有的角色与对象的关系的集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>角色和访问对象关系的集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OwnedRole.GetByUserName(System.String)">
            <summary>
            根据用户名获取用户所具有的角色和访问对象的关系。
            </summary>
            <param name="userName">用户名。</param>
            <returns>角色和访问对象关系的集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OwnedRole.GetByGroupCode(System.Int16)">
            <summary>
            根据组编号获取具有的角色和访问对象的关系。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>角色和访问对象关系的集合</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OwnedRole.ConvertToOwnedRoleInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成OwnedRoleInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>角色与访问对象的关系实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.MzhHelp">
            <summary>
            Help 的摘要说明。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.Messages">
            <summary>
            Messages 的摘要说明。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.Messages.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Messages.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.MzhHelp.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.MzhHelp.GetHelpInfoByCode(System.String)">
            <summary>
            获取帮助
            </summary>
            <param name="code">帮助编号。</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.MzhHelp.AddHelpInfo(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            增加帮助
            </summary>
            <param name="code">帮助编号</param>
            <param name="title">标题</param>
            <param name="content">内容</param>
            <param name="parentcode">上级编号</param>
            <param name="serial">序号</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.MzhHelp.UpdateHelpInfo(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            更改帮助
            </summary>
            <param name="code">帮助编号</param>
            <param name="title">标题</param>
            <param name="content">内容</param>
            <param name="parentcode">上级编号</param>
            <param name="serial">序号</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.MzhHelp.DeleteHelpInfo(System.String)">
            <summary>
            删除帮助
            </summary>
            <param name="code">帮助编号</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.MzhHelp.GetAllHelpsByParentCode(System.String)">
            <summary>
            根据上级编号获取所有的帮助信息.
            </summary>
            <param name="parentCode">上级帮助编号</param>
            <returns>DataSet</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IMenuType">
            <summary>
            菜单类型的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenuType.Insert(Shmzh.Components.SystemComponent.MenuTypeInfo)">
            <summary>
            添加菜单类型。
            </summary>
            <param name="menuTypeInfo">菜单类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenuType.Update(Shmzh.Components.SystemComponent.MenuTypeInfo)">
            <summary>
            修改菜单类型。
            </summary>
            <param name="menuTypeInfo">菜单类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenuType.Delete(Shmzh.Components.SystemComponent.MenuTypeInfo)">
            <summary>
            删除菜单类型。
            </summary>
            <param name="menuTypeInfo">菜单类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenuType.Delete(System.Int32)">
            <summary>
            删除菜单类型。
            </summary>
            <param name="id">菜单类型编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenuType.IsExist(System.Int32)">
            <summary>
            判断ID是否已经存在。
            </summary>
            <param name="id">菜单类型Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenuType.IsExist(System.String)">
            <summary>
            是否已经存在菜单类型名称。
            </summary>
            <param name="name">菜单类型名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenuType.GetAll">
            <summary>
            获取所有菜单类型。
            </summary>
            <returns>菜单类型集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenuType.GetALLUsedByFrameWork">
            <summary>
            获取所有框架所使用的菜单类型。
            </summary>
            <returns>菜单类型集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenuType.GetById(System.Int32)">
            <summary>
            根据菜单类型编号获取菜单类型。
            </summary>
            <param name="id">菜单类型Id。</param>
            <returns>菜单类型</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.MenuType.GetMenuTypeParameters">
            <summary>
            获取菜单类型参数。
            </summary>
            <returns>菜单类型参数.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.MenuType.ConvertToMenuTypeInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成MenuTypeInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>菜单类型实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.Group">
            <summary>
            组的SQLServer数据访问对象。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Group.SQL_INSERT_GROUP">
            <summary>
            添加组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Group.SQL_UPDATE_GROUP">
            <summary>
            修改组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Group.SQL_DELETE_GROUP">
            <summary>
            删除组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Group.SQL_SELECT_ALL">
            <summary>
            获取所有组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Group.SQL_SELECT_BY_NAME">
            <summary>
            根据组名称获取组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Group.SQL_SELECT_BY_CODE">
            <summary>
            根据组编号获取组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Group.PARM_GROUPCODE">
            <summary>
            组编号。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Group.PARM_GROUPNAME">
            <summary>
            组名称。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Group.PARM_REMARK">
            <summary>
            组描述。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Group.PARM_SERIALNO">
            <summary>
            序号。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Group.Insert(Shmzh.Components.SystemComponent.GroupInfo)">
            <summary>
            添加组。
            </summary>
            <param name="groupInfo">组信息实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Group.Insert(System.Int16,System.String)">
            <summary>
            批量添加组用户。
            </summary>
            <param name="groupCode">组编号。</param>
            <param name="userNames">用户名拼接字符串。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Group.Update(Shmzh.Components.SystemComponent.GroupInfo)">
            <summary>
            修改组。
            </summary>
            <param name="groupInfo">组信息实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Group.Delete(Shmzh.Components.SystemComponent.GroupInfo)">
            <summary>
            删除组。
            </summary>
            <param name="groupInfo">组信息实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Group.Delete(System.Int16)">
            <summary>
            删除组。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Group.IsExist(System.String)">
            <summary>
            判断组名称是否已经存在。
            </summary>
            <param name="groupName">组名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Group.GetAll">
            <summary>
            获取所有组记录。
            </summary>
            <returns>组记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Group.GetByCode(System.Int16)">
            <summary>
            根据组编好获取组信息实体。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>组信息实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Group.GetGroupParameters">
            <summary>
            获取组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Group.ConvertToGroupInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SD_MessageTypeInfo">
            <summary>
            消息类型实体。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SD_MessageTypeInfo.#ctor">
            <summary>
            默认构造函数。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SD_MessageTypeInfo.#ctor(System.String,System.String,System.Boolean,System.String)">
            <summary>
            消息类型的构造函数。
            </summary>
            <param name="id">消息类型id。</param>
            <param name="name">消息类型名称。</param>
            <param name="isLocked">是否锁定。</param>
            <param name="remark">消息类型备注。</param>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageTypeInfo.ID">
            <summary>
            消息类型ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageTypeInfo.Name">
            <summary>
            消息类型名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageTypeInfo.IsLocked">
            <summary>
            是否是锁定的。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageTypeInfo.Remark">
            <summary>
            消息类型描述。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageTypeInfo.SerialNumber">
            <summary>
            排序号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageTypeInfo.MsgCount">
            <summary>
            消息个数。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupUserInfo">
            <summary>
            用户组信息类
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupUserInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupUserInfo.GroupCode">
            <summary>
            组编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupUserInfo.UserCode">
            <summary>
            用户id
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DALFactory.DataProvider">
            <summary>
            依据配置文件以抽象工厂模式来创建数据访问层.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateTemplateProvider">
            <summary>
            创建模板对象的数据访问对象。
            </summary>
            <returns>模板对象的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateOnlineStatusProvider">
            <summary>
            创建在线状态的数据访问对象。
            </summary>
            <returns>在线状态的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateSD_MessageProvider">
            <summary>
            创建消息对象的数据访问对象。
            </summary>
            <returns>消息对象的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateSD_MessageTypeProvider">
            <summary>
            创建消息类型对象的数据访问对象。
            </summary>
            <returns>消息类型对象的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateMenuProvider">
            <summary>
            创建菜单对象的数据访问对象。
            </summary>
            <returns>菜单对象的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateUserProvider">
            <summary>
            创建用户对象的数据访问对象。
            </summary>
            <returns>用户对象的数据访问对象</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateGroupCatProvider">
            <summary>
            创建组分类的数据访问对象。
            </summary>
            <returns>组分类的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateGroupProvider">
            <summary>
            创建组信息对象的数据访问对象。
            </summary>
            <returns>组信息对象的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateRoleProvider">
            <summary>
            创建角色信息对象的数据访问对象。
            </summary>
            <returns>角色信息对象的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateUserRoleProvider">
            <summary>
            创建用户角色信息对象的数据访问对象。
            </summary>
            <returns>用户角色信息对象的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateRoleRightProvider">
            <summary>
            创建角色权限的数据访问对象。
            </summary>
            <returns>角色权限的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateGrantProvider">
            <summary>
            创建授权信息的数据访问对象。
            </summary>
            <returns>授权信息的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateGroupRoleProvider">
            <summary>
            创建组角色信息的数据访问对象。
            </summary>
            <returns>组角色信息的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateGroupUserProvider">
            <summary>
            创建组用户信息的数据访问对象。
            </summary>
            <returns>组用户信息的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateRightCatProvider">
            <summary>
            创建权限分组的数据访问对象。
            </summary>
            <returns>权限分组的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateRightProvider">
            <summary>
            创建权限的数据访问对象。
            </summary>
            <returns>权限的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateCompanyProvider">
            <summary>
            创建公司信息的数据访问对象。
            </summary>
            <returns>公司信息的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateDutyProvider">
            <summary>
            创建职务信息的数据访问对象。
            </summary>
            <returns>职务信息的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateDeptProvider">
            <summary>
            创建部门信息的数据访问对象。
            </summary>
            <returns>部门信息的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateOrgTypeProvider">
            <summary>
            创建部门信息的数据访问对象。
            </summary>
            <returns>部门信息的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateEmpStateProvider">
            <summary>
            创建员工状态的数据访问对象。
            </summary>
            <returns>员工状态的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateProductProvider">
            <summary>
             创建产品的数据访问对象。
            </summary>
            <returns>产品的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateMenuTypeProvider">
            <summary>
            创建菜单类型的数据访问对象。
            </summary>
            <returns>菜单类型的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateOwnedRoleProvider">
            <summary>
            创建角色与访问对象的关系的数据访问对象。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateSEModuleProvider">
            <summary>
            创建查询模块的数据访问对象。
            </summary>
            <returns>查询模块的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateSEControlProvider">
            <summary>
            创建查询引擎控件的数据访问对象。
            </summary>
            <returns>查询引擎控件的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateSEControlTypeProvider">
            <summary>
            创建查询引擎的控件类型的数据访问对象。
            </summary>
            <returns>查询引擎的控件类型的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateSEDataTypeProvider">
            <summary>
            创建查询引擎的数据类型的数据访问对象。
            </summary>
            <returns>查询引擎的数据类型的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateSESchemaProvider">
            <summary>
            创建查询方案的数据访问对象。
            </summary>
            <returns>查询方案的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateSettingInfoProvider">
            <summary>
            开关量的数据访问对象。
            </summary>
            <returns>开关量的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateUserDetailProvider">
            <summary>
            创建工作流用户详细信息的数据访问对象.
            </summary>
            <returns>工作流用户详细信息的数据访问对象.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateTB_UsersInfoProvider">
            <summary>
            创建工作流用户的数据访问对象。
            </summary>
            <returns>工作流用户的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateTB_OrgTreeProvider">
            <summary>
            创建工作流组织机构的数据访问对象。
            </summary>
            <returns>工作流组织机构的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateTB_SYSORTTPProvider">
            <summary>
            创建工作流组织机构类型的数据访问对象。
            </summary>
            <returns>工作流组织机构类型的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateTB_ORGMEMLKProvider">
            <summary>
            创建工作流组织机构与人员关联的数据访问对象。
            </summary>
            <returns>工作流组织机构与人员关联的数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateTB_UserCatProvider">
            <summary>
            创建用户分类数据访问对象。
            </summary>
            <returns>用户分类数据访问对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateHistoryProvider">
            <summary>
            系统访问记录的数据访问对象。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CreateOperationLogProvider">
            <summary>
            创建操作日志的数据访问对象。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.TemplateProvider">
            <summary>
            模板对象的数据访问对象.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.OnlineStatusProvider">
            <summary>
            智能桌面系统在线状态的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.SD_MessageProvider">
            <summary>
            消息对象的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.SD_MessageTypeProvider">
            <summary>
            消息类型对象的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.MenuProvider">
            <summary>
            菜单对象的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.MenuTypeProvider">
            <summary>
            菜单类型的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.UserProvider">
            <summary>
            用户人员的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.GroupCatProvider">
            <summary>
            组分类的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.GroupProvider">
            <summary>
            组的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.RoleProvider">
            <summary>
            角色的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.UserRoleProvider">
            <summary>
            用户角色的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.RoleRightProvider">
            <summary>
            角色权限的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.GrantProvider">
            <summary>
            授权的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.GroupRoleProvider">
            <summary>
            组角色的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.GroupUserProvider">
            <summary>
            组用户的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.RightCatProvider">
            <summary>
            权限分类的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.RightProvider">
            <summary>
            权限的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.CompanyProvider">
            <summary>
            公司的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.DutyProvider">
            <summary>
            职务的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.DeptProvider">
            <summary>
            部门的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.OrgTypeProvider">
            <summary>
            组织机构类型的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.EmpStateProvider">
            <summary>
            员工状态的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.ProductProvider">
            <summary>
            产品的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.OwnedRoleProvider">
            <summary>
            角色与访问对象的关系的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.SEModuleProvider">
            <summary>
            查询模块的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.SEControlProvider">
            <summary>
            查询引擎控件的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.SEControlTypeProvider">
            <summary>
            查询引擎的控件类型的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.SEDataTypeProvider">
            <summary>
            查询引擎的数据类型的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.SESchemaProvider">
            <summary>
            查询方案的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.SettingProvider">
            <summary>
            开关量的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.UserDetailProvider">
            <summary>
            工作流用户详细信息的数据访问接口.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.TB_UsersProvider">
            <summary>
            工作流用户数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.TB_OrgTreeProvider">
            <summary>
            工作流组织机构数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.TB_OrgMemLkProvider">
            <summary>
            工作流组织机构与人员的关联关系的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.TB_SYSORGTPProvider">
            <summary>
            工作流组织机构类型的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.TB_UserCatProvider">
            <summary>
            工作流用户分类数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.HistoryProvider">
            <summary>
            系统访问记录的数据访问对象。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DALFactory.DataProvider.OperationLogProvider">
            <summary>
            操作日志的数据访问对象。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.SQL_INSERT_ROLERIGHT">
            <summary>
            添加组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.SQL_DELETE_ROLERIGHT">
            <summary>
            删除组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.SQL_SELECT_BY_ROLECODE">
            <summary>
            获取所有有效的用户角色记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.SQL_SELECT_BY_RIGHTCODE">
            <summary>
            根据权限编号获取角色权限的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.PARM_ROLECODE">
            <summary>
            用户名参数。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.PARM_RIGHTCODE">
            <summary>
            角色编号参数。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.GetRoleRightParameters">
            <summary>
            获取用户角色参数。
            </summary>
            <returns>参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.ConvertToRoleRightInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成RoleRightInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>用户权限实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.Insert(Shmzh.Components.SystemComponent.RoleRightInfo)">
            <summary>
            添加用户角色。
            </summary>
            <param name="roleRightInfo">用户角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.Insert(System.Int16,System.String)">
            <summary>
            批量添加角色权限。
            </summary>
            <param name="roleCode">角色编号。</param>
            <param name="rightCodes">权限编码拼接字符串。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.Delete(Shmzh.Components.SystemComponent.RoleRightInfo)">
            <summary>
            删除角色权限实体。
            </summary>
            <param name="roleRightInfo">角色权限实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.Delete(System.Int16)">
            <summary>
            根据角色编号删除角色权限关系。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.GetByRoleCode(System.Int16)">
            <summary>
            根据角色编号获取角色权限。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>角色权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.GetByRightCode(System.Int16)">
            <summary>
            根据权限编号获取角色权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <returns>角色权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.GetByProductCodeAndUserName(System.Int16,System.String)">
            <summary>
            根据用户名获取角色权限集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="userName">用户名。</param>
            <returns>角色权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.GetAll">
            <summary>
            获取所有的角色权限关系。
            </summary>
            <returns>角色权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RoleRight.GetAllAvalible">
            <summary>
            获取所有有效的角色权限关系。
            </summary>
            <returns>角色权限集合。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.Menu">
            <summary>
            菜单的数据访问层。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IMenu">
            <summary>
            菜单的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenu.Insert(Shmzh.Components.SystemComponent.MenuInfo)">
            <summary>
            添加菜单项。
            </summary>
            <param name="menuInfo">菜单实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenu.Update(Shmzh.Components.SystemComponent.MenuInfo)">
            <summary>
            修改菜单项。
            </summary>
            <param name="menuInfo">菜单实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenu.Delete(Shmzh.Components.SystemComponent.MenuInfo)">
            <summary>
            删除菜单项。
            </summary>
            <param name="menuInfo">菜单项实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenu.Delete(System.Int32)">
            <summary>
            删除菜单项。
            </summary>
            <param name="id">菜单项ID。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenu.MoveTo(System.Int32,System.Int32)">
            <summary>
            转移菜单项。
            </summary>
            <param name="id">菜单项ID。</param>
            <param name="newParentId">新的父节点Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenu.IsExistsByType(System.Int32)">
            <summary>
            判断是否存在指定菜单类型的菜单项。
            </summary>
            <param name="typeId">菜单类型Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenu.GetAllMenu">
            <summary>
            获取所有的菜单项。
            </summary>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenu.GetAllAvalibleMenu">
            <summary>
            获取所有有效的菜单项。
            </summary>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenu.GetAllMenuByProductId(System.Int32)">
            <summary>
            根据产品Id获取所有的菜单项。
            </summary>
            <param name="productId">产品ID。</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenu.GetAllAvalibleMenuByProductId(System.Int32)">
            <summary>
            根据产品ID获取所有有效的菜单项。
            </summary>
            <param name="productId">产品Id。</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenu.GetAllAvalibleByProductCode(System.Int32)">
            <summary>
            根据产品编号获取所有的有效的菜单。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>菜单集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenu.GetAllMenuByParentId(System.Int32)">
            <summary>
            获取所有的子菜单项。
            </summary>
            <param name="parentId">上级菜单Id。</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenu.GetAllAvalibleMenuByParentId(System.Int32)">
            <summary>
            获取所有的有效的子菜单项。
            </summary>
            <param name="parentId">上级菜单Id。</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IMenu.GetMenuById(System.Int32)">
            <summary>
            根据Id获取菜单项。
            </summary>
            <param name="id">菜单项ID。</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.GetAllMenu">
            <summary>
            获取所有的菜单项。
            </summary>
            <returns>DataSet</returns>
            <remarks>方法名和实际行为不符。</remarks>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.GetAllAvalibleMenu">
            <summary>
            获取所有有效的菜单项。
            </summary>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.GetAllMenuByProductId(System.Int32)">
            <summary>
            根据指定产品ID获取所有的菜单项。
            </summary>
            <param name="productId">产品ID。</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.GetAllAvalibleMenuByProductId(System.Int32)">
            <summary>
            根据指定产品ID获取所有有效的菜单项。
            </summary>
            <param name="productId">产品ID。</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.GetAllAvalibleByProductCode(System.Int32)">
            <summary>
            根据产品编号获取所有的有效的菜单。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>菜单集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.GetAllMenuByParentId(System.Int32)">
            <summary>
            根据上一级菜单ID获取所有子菜单项。
            </summary>
            <param name="parentId">上一级菜单项ID。</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.GetAllAvalibleMenuByParentId(System.Int32)">
            <summary>
            根据上一级菜单ID获取所有有效的子菜单项。
            </summary>
            <param name="parentId">上一级菜单项ID。</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.GetMenuById(System.Int32)">
            <summary>
            根据菜单项Id获取菜单项。
            </summary>
            <param name="id">菜单项Id</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.Insert(Shmzh.Components.SystemComponent.MenuInfo)">
            <summary>
            增加菜单项。
            </summary>
            <param name="menuInfo">菜单项实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.Update(Shmzh.Components.SystemComponent.MenuInfo)">
            <summary>
            修改菜单项.
            </summary>
            <param name="menuInfo">菜单项实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.Delete(Shmzh.Components.SystemComponent.MenuInfo)">
            <summary>
            删除菜单实体。
            </summary>
            <param name="menuInfo">菜单实体对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.Delete(System.Int32)">
            <summary>
            删除菜单项。
            </summary>
            <param name="id">菜单项ID。</param>
            <returns>布尔类型。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.MoveTo(System.Int32,System.Int32)">
            <summary>
            转移菜单项。
            </summary>
            <param name="id">菜单项ID。</param>
            <param name="newParentId">新的父节点Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.GetMenuParameters">
            <summary>
            获取Insert和Update命令的参数数组。
            </summary>
            <returns>Sql参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Menu.IsExistsByType(System.Int32)">
            <summary>
            判断是否存在指定菜单类型的菜单项。
            </summary>
            <param name="typeId">菜单类型Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupUser.Insert(Shmzh.Components.SystemComponent.GroupUserInfo)">
            <summary>
            添加组用户。
            </summary>
            <param name="groupUserInfo">组用户。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupUser.Insert(Shmzh.Components.SystemComponent.GroupUserInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加组用户。
            </summary>
            <param name="obj">组用户实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupUser.Insert(System.Int16,System.String)">
            <summary>
            批量添加组用户。
            </summary>
            <param name="groupCode">组编号。</param>
            <param name="userNames">用户名拼接字符串。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupUser.Delete(Shmzh.Components.SystemComponent.GroupUserInfo)">
            <summary>
            删除组用户。
            </summary>
            <param name="groupUserInfo">组用户。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupUser.Delete(Shmzh.Components.SystemComponent.GroupUserInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除组用户。
            </summary>
            <param name="groupUserInfo">组用户实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupUser.Delete(System.String)">
            <summary>
             根据指定的用户名来删除组和用户的关系记录。
            </summary>
            <param name="userCode">用户名。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupUser.Delete(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据指定的用户名来删除组和用户的关系记录。
            </summary>
            <param name="userCode">用户名。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupUser.GetAll">
            <summary>
            获取所有的组用户集合.
            </summary>
            <returns>组用户集合.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupUser.GetByGroupCode(System.Int16)">
            <summary>
            根据组编号来获取组用户集合。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>组用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupUser.GetByUserCode(System.String)">
            <summary>
            根据用户名获取组用户集合。
            </summary>
            <param name="userCode">用户名。</param>
            <returns>组用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Group.Insert(Shmzh.Components.SystemComponent.GroupInfo)">
            <summary>
            添加组。
            </summary>
            <param name="groupInfo">组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Group.Update(Shmzh.Components.SystemComponent.GroupInfo)">
            <summary>
            修改组。
            </summary>
            <param name="groupInfo">组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Group.Delete(Shmzh.Components.SystemComponent.GroupInfo)">
            <summary>
            删除组。
            </summary>
            <param name="groupInfo">组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Group.Delete(System.Int16)">
            <summary>
            删除组。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Group.IsExist(System.String)">
            <summary>
            是否已经存在组名称。
            </summary>
            <param name="groupName">组名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Group.GetAll">
            <summary>
            获取所有组。
            </summary>
            <returns>ArrayList。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Group.GetByCode(System.Int16)">
            <summary>
            根据组编号获取组。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>ArrayList</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.EntityHelper">
            <summary>
            This classes contains utilities functions for the instances and collections.
            </summary>
            <remarks>All methods static</remarks>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.EntityHelper.GetByteLength(System.Object)">
            <summary>
            Gets the byte length of the specified object.
            </summary>
            <param name="obj">The object we want the length.</param>
            <returns>The byte length of the object.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.EntityHelper.ToString(System.Object)">
            <summary>
            Give a string representation of a object, with use of reflection.
            </summary>
            <param name="o">O.</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.EntityHelper.Clone``1(``0)">
            <summary>
            Generic method to perform a deep copy of an object
            </summary>
            <typeparam name="T">Type of object being cloned and returned</typeparam>
            <param name="sourceEntity">Source object to be cloned.</param>
            <returns>An object that is a deep copy of the sourceEntity object.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.EntityHelper.GetBindableProperties(System.Type)">
            <summary>
            Get the collection of properties that have been marked as Bindable
            </summary>
            <param name="type">The type of the object to get the properties for.</param>
            <returns><see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> of bindable properties.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.EntityHelper.GetEnumTextValue(System.Enum)">
            <summary>
             Allows the discovery of an enumeration text value based on the <c>EnumTextValueAttribute</c>
            </summary>
             <param name="e">The enum to get the reader friendly text value for.</param>
             <returns><see cref="T:System.String"/> </returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.EntityHelper.GetEnumValue(System.String,System.Type)">
            <summary>
             Allows the discovery of an enumeration value based on the <c>EnumTextValueAttribute</c>
            </summary>
             <param name="text">The text of the <c>EnumTextValueAttribute</c>.</param>
             <param name="enumType">The type of the enum to get the value for.</param>
             <returns><see cref="T:System.Object"/> boxed representation of the enum value </returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.EntityHelper.GetAttribute``1(System.Enum)">
            <summary>
            Gets the first occurrence of the specified type of <see cref="T:System.Attribute"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.EntityHelper.GetPascalSpacedName(System.String)">
            <summary>
            Get the Pascal spaced version of a name.  
            </summary>
            <param name="name">Name to be changed</param>
            <returns>PascalSpaced version of the name</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.EnumTextValueAttribute">
            <summary>
             Attribute used to decorate enumerations with reader friendly names
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.EnumTextValueAttribute.#ctor(System.String)">
            <summary>
             Allows the creation of a friendly text representation of the enumeration.
            </summary>
             <param name="text">The reader friendly text to decorate the enum.</param>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.EnumTextValueAttribute.Text">
            <summary>
             Returns the text representation of the value
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.ColumnEnumAttribute">
            <summary>
            Provides column metadata information for an entity column enumeration.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ColumnEnumAttribute.#ctor(System.String,System.Type,System.Data.DbType,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the ColumnEnumAttribute class.
            </summary>
            <param name="name"></param>
            <param name="systemType"></param>
            <param name="dbType"></param>
            <param name="isPrimaryKey"></param>
            <param name="isIdentity"></param>
            <param name="allowDbNull"></param>
            <param name="length"></param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ColumnEnumAttribute.#ctor(System.String,System.Type,System.Data.DbType,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ColumnEnumAttribute class.
            </summary>
            <param name="name"></param>
            <param name="systemType"></param>
            <param name="dbType"></param>
            <param name="isPrimaryKey"></param>
            <param name="isIdentity"></param>
            <param name="allowDbNull"></param>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.ColumnEnumAttribute.name">
            <summary>
            The Name member variable.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.ColumnEnumAttribute.systemType">
            <summary>
            The SystemType member variable.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.ColumnEnumAttribute.dbType">
            <summary>
            The DbType member variable.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.ColumnEnumAttribute.isPrimaryKey">
            <summary>
            The IsPrimaryKey member variable.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.ColumnEnumAttribute.isIdentity">
            <summary>
            The IsIdentity member variable.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.ColumnEnumAttribute.allowDbNull">
            <summary>
            The AllowDbNull member variable.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.ColumnEnumAttribute.length">
            <summary>
            The Length member variable.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ColumnEnumAttribute.Name">
            <summary>
            Gets or sets the Name property.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ColumnEnumAttribute.SystemType">
            <summary>
            Gets or sets the SystemType property.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ColumnEnumAttribute.DbType">
            <summary>
            Gets or sets the DbType property.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ColumnEnumAttribute.IsPrimaryKey">
            <summary>
            Gets or sets the IsPrimaryKey property.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ColumnEnumAttribute.IsIdentity">
            <summary>
            Gets or sets the IsIdentity property.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ColumnEnumAttribute.AllowDbNull">
            <summary>
            Gets or sets the AllowDbNull property.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ColumnEnumAttribute.Length">
            <summary>
            Gets or sets the Length property.
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GenericStateChangedEventArgs`1">
            <summary>
            Provides a generic way to inform interested objects about state change
            Supplies the old value and the new value of the changed state.
            </summary>
            <typeparam name="T">State Object</typeparam>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GenericStateChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Shmzh.Components.SystemComponent.GenericStateChangedEventArgs`1"/> class.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GenericStateChangedEventArgs`1.OldValue">
            <summary>
            Gets the old value.
            </summary>
            <value>The old value.</value>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GenericStateChangedEventArgs`1.NewValue">
            <summary>
            Gets the new value.
            </summary>
            <value>The new value.</value>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.EmpStateInfo">
            <summary>
            员工状态信息
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.EmpStateInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.EmpStateInfo.Code">
            <summary>
            员工状态编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.EmpStateInfo.Description">
            <summary>
            员工状态名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.EmpStateInfo.IsValid">
            <summary>
            是否有效。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.ProductInfo">
            <summary>
            产品信息对象.
            </summary>
            <remarks>对应于数据库PubData库中mySystemProducts表的记录.</remarks>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ProductInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ProductInfo.#ctor(System.Int16,System.String)">
            <summary>
            产品信息的构造函数.
            </summary>
            <param name="productCode">int:	产品编号</param>
            <param name="productName">string:产品名称</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ProductInfo.#ctor(System.Int16,System.String,System.String,System.String)">
            <summary>
            产品信息的构造函数
            </summary>
            <param name="productCode">int:产品编号</param>
            <param name="productName">string:产品名称</param>
            <param name="isValid">string:是否有效</param>
            <param name="remark">string:产品描述</param>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ProductInfo.ProductCode">
            <summary>
            产品编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ProductInfo.ProductName">
            <summary>
            产品名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ProductInfo.IsValid">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ProductInfo.Remark">
            <summary>
            产品描述
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ProductInfo.License">
            <summary>
            注册码。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IHistory">
            <summary>
            系统访问记录的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IHistory.Insert(Shmzh.Components.SystemComponent.HistoryInfo)">
            <summary>
            添加系统访问记录。
            </summary>
            <param name="historyInfo">系统访问记录。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IHistory.Update(Shmzh.Components.SystemComponent.HistoryInfo)">
            <summary>
            修改系统访问记录。
            </summary>
            <param name="historyInfo">系统访问记录。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IHistory.Delete(Shmzh.Components.SystemComponent.HistoryInfo)">
            <summary>
            删除系统访问记录。
            </summary>
            <param name="historyInfo">系统访问记录。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IHistory.Delete(System.Int64)">
            <summary>
            删除系统访问记录。
            </summary>
            <param name="id">系统访问记录Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IHistory.GetAllByDateTime(System.DateTime,System.DateTime)">
            <summary>
            根据时间段获取所有用户的登录退出记录。
            </summary>
            <param name="beginTime">开始时间。</param>
            <param name="endTime">结束时间。</param>
            <returns>登录退出记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IHistory.GetByUserAndDateTime(System.String,System.DateTime,System.DateTime)">
            <summary>
            根据时间段获取指定用户的登录退出记录
            </summary>
            <param name="userName">用户名。</param>
            <param name="beginTime">开始时间。</param>
            <param name="endTime">结束时间。</param>
            <returns>登录退出记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.History.Insert(Shmzh.Components.SystemComponent.HistoryInfo)">
            <summary>
            添加系统访问记录。
            </summary>
            <param name="historyInfo">系统访问记录。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.History.Update(Shmzh.Components.SystemComponent.HistoryInfo)">
            <summary>
            修改系统访问记录。
            </summary>
            <param name="historyInfo">系统访问记录。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.History.Delete(Shmzh.Components.SystemComponent.HistoryInfo)">
            <summary>
            删除系统访问记录。
            </summary>
            <param name="historyInfo">系统访问记录。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.History.Delete(System.Int64)">
            <summary>
            删除系统访问记录。
            </summary>
            <param name="id">系统访问记录Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.History.GetAllByDateTime(System.DateTime,System.DateTime)">
            <summary>
            根据时间段获取所有用户的登录退出记录。
            </summary>
            <param name="beginTime">开始时间。</param>
            <param name="endTime">结束时间。</param>
            <returns>登录退出记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.History.GetByUserAndDateTime(System.String,System.DateTime,System.DateTime)">
            <summary>
            根据时间段获取指定用户的登录退出记录
            </summary>
            <param name="userName">用户名。</param>
            <param name="beginTime">开始时间。</param>
            <param name="endTime">结束时间。</param>
            <returns>登录退出记录集合。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole.#ctor">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole.GetAllByProductCode(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole.GetAllByProductCodeAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole.GetAllByProductCodeAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole.GetByUserName(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole.GetByUserNameAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole.GetByUserNameAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole.GetByGroupCode(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole.GetByGroupCodeAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole.GetByGroupCodeAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole.GetAllByProductCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole.GetByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRole.GetByGroupCodeCompleted">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRoleInfo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRoleInfo.RoleCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRoleInfo.CheckCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OwnedRoleService.OwnedRoleInfo.Type">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OwnedRoleService.GetAllByProductCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OwnedRoleService.GetAllByProductCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OwnedRoleService.GetAllByProductCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OwnedRoleService.GetByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OwnedRoleService.GetByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OwnedRoleService.GetByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OwnedRoleService.GetByGroupCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OwnedRoleService.GetByGroupCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OwnedRoleService.GetByGroupCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.ITransactionManager">
            <summary>
            TransactionManager interface
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ITransactionManager.BeginTransaction">
            <summary>
            Begins the transaction.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ITransactionManager.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="isolationLevel">The isolation level.</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ITransactionManager.Commit">
            <summary>
            Commits this instance.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ITransactionManager.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ITransactionManager.Rollback">
            <summary>
            Rollbacks this instance.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ITransactionManager.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ITransactionManager.InvariantProviderName">
            <summary>
            Gets or sets the name of the invariant provider.
            </summary>
            <value>The name of the invariant provider.</value>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ITransactionManager.IsOpen">
            <summary>
            Gets a value indicating whether this instance is open.
            </summary>
            <value><c>true</c> if this instance is open; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ITransactionManager.TransactionObject">
            <summary>
            Gets the transaction object.
            </summary>
            <value>The transaction object.</value>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.TransactionManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Shmzh.Components.SystemComponent.TransactionManager"/> class.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.TransactionManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Shmzh.Components.SystemComponent.TransactionManager"/> class.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.TransactionManager.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Shmzh.Components.SystemComponent.TransactionManager"/> class.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="providerInvariantName">Name of the provider invariant.</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.TransactionManager.BeginTransaction">
            <summary>
            Begins a transaction.
            </summary>
            <remarks>The default <see cref="T:System.Data.IsolationLevel"/> mode is ReadCommitted</remarks>
            <exception cref="T:System.InvalidOperationException">If a transaction is already open.</exception>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.TransactionManager.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a transaction.
            </summary>
            <param name="isolationLevel">The <see cref="T:System.Data.IsolationLevel"/> level of the transaction</param>
            <exception cref="T:System.InvalidOperationException">If a transaction is already open.</exception>
            <exception cref="T:System.Data.DataException"></exception>
            <exception cref="T:System.Data.Common.DbException"></exception>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.TransactionManager.Commit">
            <summary>
            Commit the transaction to the datasource.
            </summary>
            <exception cref="T:System.InvalidOperationException">If a transaction is not open.</exception>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.TransactionManager.Rollback">
            <summary>
            Rollback the transaction.
            </summary>
            <exception cref="T:System.InvalidOperationException">If a transaction is not open.</exception>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.TransactionManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TransactionManager.ConnectionString">
            <summary>
            Gets or sets the configuration key for database service.
            </summary>
            <remark>Do not change during a transaction.</remark>
            <exception cref="T:System.InvalidOperationException">
            If an attempt to set when the connection is currently open.
            </exception>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TransactionManager.InvariantProviderName">
            <summary>
            Gets or sets the name of the invariant provider.
            </summary>
            <value>The name of the invariant provider.</value>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TransactionManager.TransactionObject">
            <summary>
            Gets the underlying <see cref="T:System.Data.Common.DbTransaction"/> object.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TransactionManager.IsOpen">
            <summary>
            Gets a value that indicates if a transaction is currently open and operating. 
            </summary>
            <value>Return true if a transaction session is currently open and operating; otherwise false.</value>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IOrgType">
            <summary>
            部门类型的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOrgType.Insert(Shmzh.Components.SystemComponent.OrgTypeInfo)">
            <summary>
            添加部门类型。
            </summary>
            <param name="orgTypeInfo">部门类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOrgType.Insert(Shmzh.Components.SystemComponent.OrgTypeInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加部门类型。
            </summary>
            <param name="orgTypeInfo">部门类型实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOrgType.Update(Shmzh.Components.SystemComponent.OrgTypeInfo)">
            <summary>
            修改部门类型。
            </summary>
            <param name="orgTypeInfo">部门类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOrgType.Update(Shmzh.Components.SystemComponent.OrgTypeInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改部门类型。
            </summary>
            <param name="orgTypeInfo">部门类型实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOrgType.Delete(Shmzh.Components.SystemComponent.OrgTypeInfo)">
            <summary>
            删除部门类型。
            </summary>
            <param name="orgTypeInfo">部门类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOrgType.Delete(Shmzh.Components.SystemComponent.OrgTypeInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除部门类型。
            </summary>
            <param name="orgTypeInfo">部门类型实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOrgType.Delete(System.String)">
            <summary>
            删除部门类型。
            </summary>
            <param name="code">代码。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOrgType.Delete(System.String,System.Data.Common.DbTransaction)">
            <summary>
            删除部门类型。
            </summary>
            <param name="code">代码。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOrgType.IsExistCode(System.String)">
            <summary>
            是否已经存在部门类型编号。
            </summary>
            <param name="code">部门类型编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOrgType.IsExistName(System.String)">
            <summary>
            是否已经存在部门类型名称
            </summary>
            <param name="name">部门类型名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOrgType.IsUsed(System.String)">
            <summary>
            是否已经被使用。
            </summary>
            <param name="code">部门类型编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOrgType.GetAll">
            <summary>
            获取所有部门类型。
            </summary>
            <returns>部门类型集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOrgType.GetAllAvalible">
            <summary>
            获取所有有效的部门类型。
            </summary>
            <returns>部门类型集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOrgType.GetByCode(System.String)">
            <summary>
            根据部门类型编号获取部门类型。
            </summary>
            <param name="code">部门类型编号。</param>
            <returns>部门类型实体。</returns>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.OrgType.SQL_INSERT_ORGTYPE">
            <summary>
            添加组织机构类型的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.OrgType.SQL_UPDATE_ORGTYPE">
            <summary>
            修改组织机构类型的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.OrgType.SQL_DELETE_ORGTYPE">
            <summary>
            删除组织机构类型的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.OrgType.SQL_SELECT_ALL">
            <summary>
            获取所有组织机构类型。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.OrgType.SQL_SELECT_ALLAVALIBLE">
            <summary>
            获取所有有效的组织机构类型。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.OrgType.SQL_SELECTCOUNT_BY_CODE">
            <summary>
            通过对组织机构类型编号进行查询，判断编号有没有已经存在的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.OrgType.SQL_SELECTCOUNT_BY_NAME">
            <summary>
            通过对组织机构类型名称进行查询，判断名称有没有已经存在的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.OrgType.SQL_SELECT_BY_CODE">
            <summary>
            根据组编号获取组织机构记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.OrgType.SQL_SELECTORGCOUNT_BY_CODE">
            <summary>
            判断组织机构类型有没有被使用的SQL语句。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OrgType.GetOrgTypeParameters">
            <summary>
            获取组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OrgType.ConvertToOrgTypeInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成OrgTypeInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组织机构类型实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DutyInfo">
            <summary>
            DutyInfo实体。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DutyInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DutyInfo.DutyCo">
            <summary>
            公司
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DutyInfo.DutyCode">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DutyInfo.ParentDutyCode">
            <summary>
            上级职位编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DutyInfo.DutyCnName">
            <summary>
            职位名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DutyInfo.DutyEnName">
            <summary>
            职位中文名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DutyInfo.IsValid">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DutyInfo.DutyLevel">
            <summary>
            职务级别。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DutyInfo.Remark">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.Duty">
            <summary>
            职位的SQLServer的数据访问对象。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Duty.GetDutyParameters">
            <summary>
            获取组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Duty.ConvertToDutyInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成DutyInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Duty.Insert(Shmzh.Components.SystemComponent.DutyInfo)">
            <summary>
            添加职务。
            </summary>
            <param name="dutyInfo">职务实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Duty.Update(Shmzh.Components.SystemComponent.DutyInfo)">
            <summary>
            修改职务。
            </summary>
            <param name="dutyInfo">职务实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Duty.Delete(Shmzh.Components.SystemComponent.DutyInfo)">
            <summary>
            删除职务。
            </summary>
            <param name="dutyInfo">职务实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Duty.Delete(System.String,System.String)">
            <summary>
            删除职务。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="dutyCode">职务编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Duty.IsExistDutyCode(System.String,System.String)">
            <summary>
            是否已经存在职务编号。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="dutyCode">职务编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Duty.IsExistDutyName(System.String,System.String)">
            <summary>
            是否已经存在职务名称
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="dutyName">职务名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Duty.GetAllByCompanyCode(System.String)">
            <summary>
            获取所有职务。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>ArrayList。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Duty.GetAllAvalibleByCompanyCode(System.String)">
            <summary>
            获取所有有效的职务。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>职务集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Duty.GetByCompanyCodeAndDutyCode(System.String,System.String)">
            <summary>
            根据职务编号获取职务。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="dutyCode">职务编号。</param>
            <returns>职务实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.Dept">
            <summary>
            组织机构的SQL Server的数据访问层。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.GetDeptParameters">
            <summary>
            获取Insert和Update命令的参数数组。
            </summary>
            <returns>Sql参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.ConvertToDeptInfo(System.Data.IDataRecord)">
            <summary>
            将SqlDataReader转换为DeptInfo实体。
            </summary>
            <param name="dr">DataReader</param>
            <returns>组织机构实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.Insert(Shmzh.Components.SystemComponent.DeptInfo)">
            <summary>
            添加部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.Insert(Shmzh.Components.SystemComponent.DeptInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.Update(Shmzh.Components.SystemComponent.DeptInfo)">
            <summary>
            修改部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.Update(Shmzh.Components.SystemComponent.DeptInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.Delete(Shmzh.Components.SystemComponent.DeptInfo)">
            <summary>
            删除部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.Delete(Shmzh.Components.SystemComponent.DeptInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除部门。
            </summary>
            <param name="deptInfo">部门实体。</param>
            <param name="trans">事务对虾昂。</param>
            <returns>bool。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.Delete(System.String,System.String)">
            <summary>
            删除部门。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.Disable(System.String,System.String)">
            <summary>
            部门失效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.Disable(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            部门失效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.Enable(System.String,System.String)">
            <summary>
            部门有效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.Enable(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            部门起效。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门代码。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.IsExistDeptCode(System.String,System.String)">
            <summary>
            是否已经存在部门编号。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.IsExistDeptName(System.String,System.String)">
            <summary>
            是否已经存在部门名称
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptName">部门名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.HasChildDept(System.String,System.String)">
            <summary>
            判断是否有子部门。
            </summary>
            <param name="companyCode">公司编号</param>
            <param name="deptCode">部门名称</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.HasUser(System.String,System.String)">
            <summary>
            判断是否有用户。
            </summary>
            <param name="companyCode">公司编号</param>
            <param name="deptCode">部门名称</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.GetAllByCompanyCode(System.String)">
            <summary>
            获取所有部门。
            </summary>
            <returns>部门集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.GetAllAvalibleCompanyCode(System.String)">
            <summary>
            获取所有有效的部门。
            </summary>
            <returns>部门集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.GetByCompanyCodeAndDeptCode(System.String,System.String)">
            <summary>
            根据部门编号获取部门。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="deptCode">部门编号。</param>
            <returns>部门实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.GetParentDeptByCode(System.String)">
            <summary>
            根据部门编号获取上级部门。
            </summary>
            <param name="deptCode">部门编号。</param>
            <returns>部门实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Dept.GetByCompanyAndManager(System.String,System.String)">
            <summary>
            根据公司编号和部门主管获取部门列表。
            </summary>
            <param name="companyCode">公司代码。</param>
            <param name="manager">部门主管。</param>
            <returns>部门列表。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SESchemaInfo">
            <summary>
            查询模块数据类型信息。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SESchemaInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SESchemaInfo.Id">
            <summary>
            查询方案Id。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SESchemaInfo.ModuleId">
            <summary>
            查询模块ID.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SESchemaInfo.UserCode">
            <summary>
            用户名。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SESchemaInfo.SchemaName">
            <summary>
            查询方案名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SESchemaInfo.WhereClause">
            <summary>
            Where语句部分。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SESchemaInfo.Remark">
            <summary>
            查询方案描述。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SESchemaInfo.IsDefault">
            <summary>
            是否是默认查询方案。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SESchemaInfo.CreateTime">
            <summary>
            创建日期。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SEControlParamInfo">
            <summary>
            查询模块控件参数信息。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SEControlParamInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlParamInfo.Id">
            <summary>
            查询模块控件参数Id。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlParamInfo.ControlId">
            <summary>
            查询模块控件Id。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlParamInfo.ParamName">
            <summary>
            查询模块控件参数名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlParamInfo.ParamType">
            <summary>
            参数类型。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlParamInfo.ParamValue">
            <summary>
            参数值。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlParamInfo.ParamIndex">
            <summary>
            参数序号。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SEModuleInfo">
            <summary>
            查询模块信息。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SEModuleInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEModuleInfo.OldId">
            <summary>
            原始ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEModuleInfo.Id">
            <summary>
            查询模块Id。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEModuleInfo.ProductCode">
            <summary>
            产品编号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEModuleInfo.Name">
            <summary>
            查询模块名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEModuleInfo.SQL">
            <summary>
            查询模块SQL的前缀。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEModuleInfo.Where">
            <summary>
            连接Where条件的字符串，Where 、 And 、 Or。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEModuleInfo.Remark">
            <summary>
            查询模块的备注。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.User">
            <summary>
            用户对象的SQLServer数据库的数据访问对象。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IUser">
            <summary>
            用户对象的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.Insert(Shmzh.Components.SystemComponent.UserInfo)">
            <summary>
            添加用户。
            </summary>
            <param name="userInfo">用户实体对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.Insert(Shmzh.Components.SystemComponent.UserInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.Update(Shmzh.Components.SystemComponent.UserInfo)">
            <summary>
            更改用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.Update(Shmzh.Components.SystemComponent.UserInfo,System.Data.Common.DbTransaction)">
            <summary>
            更改用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.Delete(Shmzh.Components.SystemComponent.UserInfo)">
            <summary>
            删除用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.Delete(Shmzh.Components.SystemComponent.UserInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.Delete(System.Int32)">
            <summary>
            删除用户实体。
            </summary>
            <param name="id">用户id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.Delete(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            删除用户实体。
            </summary>
            <param name="id">用户Id。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.CreateSalt">
            <summary>
            创建Salt值。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.SetPassword(System.String,System.String)">
            <summary>
            设置口令。
            </summary>
            <param name="loginName">登录名。</param>
            <param name="pwd">原始口令。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.HasRight(System.Int32,System.String)">
            <summary>
            根据登录名来判断是否拥有指定的权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <param name="loginName">登录名。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.HasRight(System.Int32,System.String,System.String)">
            <summary>
            根据登录名和文章编号来判断是否拥有指定的权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <param name="loginName">登录名。</param>
            <param name="docCode">文章编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetById(System.Int32)">
            <summary>
            根据ID获取用户对象。
            </summary>
            <param name="id">用户ID。</param>
            <returns>用户对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetByLoginName(System.String)">
            <summary>
            根据登录名获取用户信息。
            </summary>
            <param name="loginName">登录名。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetByCompanyAndLoginName(System.String,System.String)">
            <summary>
            根据公司编号和登录名获取用户信息。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="loginName">登录名。</param>
            <returns>用户。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetByEmpCode(System.String)">
            <summary>
            根据工号获取用户信息。
            </summary>
            <param name="empCode">工号。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetByMobile(System.String)">
            <summary>
            根据手机号码获取用户。
            </summary>
            <param name="mobile">手机号码。</param>
            <returns>用户。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetByCompanyAndEmpCode(System.String,System.String)">
            <summary>
            根据公司编号和工号获取用户信息。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="empCode">工号。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetByProductCode(System.Int16)">
            <summary>
            根据产品号获取用户集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetByGroupCode(System.Int16)">
            <summary>
            根据组编号获取用户。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetByRoleCode(System.Int16)">
            <summary>
            根据角色编号获取用户。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetAllByCompany(System.String)">
            <summary>
            根据公司编号获取所有员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetAllAvalibleByCompany(System.String)">
            <summary>
            根据公司编号获取所有有效的员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetAllEmployeeByCompany(System.String)">
            <summary>
            根据公司编号获取所有员工。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetAllUserByCompany(System.String)">
            <summary>
            根据公司编号获取所有用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetAllByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取所有的员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetAllAvalibleByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取所有有效的员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetAllAvalibleByCompanyAndDeptIds(System.String,System.String)">
            <summary>
            根据公司编号和部门编号串获取所有有效的员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptIds">部门编号串。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetAllEmployeeByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取员工。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门的员工。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetAllUserByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门的用户。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetInnerUserByCompany(System.String)">
            <summary>
            根据公司编号获取内部用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetAllAvalibleByCompanyAndRightCode(System.String,System.Int16)">
            <summary>
            根据公司编号或权限编码获取该公司下具有该权限的用户集合。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="rightCode">权限编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.SearchAll(System.String,System.String)">
            <summary>
            根据公司编号和输入的名称（用户名、姓名）模糊查找人员。
            </summary>
            <param name="companyCode">公司编号</param>
            <param name="name">用户名、姓名</param>
            <returns>用户集合.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.SearchAllAvalible(System.String,System.String)">
            <summary>
            根据公司编号和输入的名称（用户名、姓名）模糊查找非禁用人员。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="name">用户名、姓名.</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.SearchEmp(System.String,System.String)">
            <summary>
            根据公司编号和输入的名称（用户名、姓名）模糊查找员工。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="name">用户名、姓名</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.SearchUser(System.String,System.String)">
            <summary>
            根据公司编号和名称（用户名、姓名）模糊查找用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="name">用户名、姓名。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetBySQL(System.String)">
            <summary>
            根据SQL语句来获取用户集合。
            </summary>
            <param name="sqlStatement">SQL语句。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IUser.GetDeptMgr(System.String)">
            <summary>
            获取指定部门的部门主管工号。
            </summary>
            <param name="deptCode">部门编号。</param>
            <returns>部门主管工号。</returns>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_INSERT_USER">
            <summary>
            添加用户记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_UPDATE_USER">
             <summary>
            修改用户记录的SQL语句。
             </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_ALL_BY_COMPANY">
            <summary>
            根据公司编号获取所有用户或员工。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_ALL_USER_BY_COMPANY">
            <summary>
            根据公司编号获取所有的用户。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_ALL_EMP_BY_COMPANY">
            <summary>
            根据公司编号获取所有的员工。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_INNERUSER_BY_COMPANY">
            <summary>
            根据公司编号获取所有的内部用户。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_ALL_EMP_BY_COMPANY_DEPT_WITHCHILD">
            <summary>
            根据公司编号和部门编号获取所有的员工(包括子部门）。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_ALL_EMP_BY_COMPANY_DEPT">
            <summary>
            根据公司编号和部门编号获取所有的员工。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_ALL_USER_BY_COMPANY_DEPT_WITHCHILID">
            <summary>
            根据公司编号和部门编号获取所有的用户（包括子部门。）
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_ALL_USER_BY_COMPANY_DEPT">
            <summary>
            根据公司编号和部门编号获取所有的用户。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_ALL_BY_COMPANY_DEPT_WITHCHILD">
            <summary>
            根据公司编号和部门编号获取所有的员工和用户（包括子部门）。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_ALL_BY_COMPANY_DEPT">
            <summary>
            根据公司编号和部门编号获取所有的用户和员工。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_ALL_USER_BY_GROUPCODE">
            <summary>
            根据组编号获取所有的用户。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_BY_ID">
            <summary>
            根据ID获取用户的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_USER_BY_EMPCODE">
            <summary>
            根据工号获取用户的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_USER_BY_COMPANYCODE_EMPCODE">
            <summary>
            根据公司编号和工号获取用户的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_USER_BY_COMPANYCODE_LOGINNAME">
            <summary>
            根据公司编号和用户名获取用户的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_USER_BY_LOGINNAME">
            <summary>
            根据登录名获取用户的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_SELECT_USER_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取用户的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_HASRIGHT_BY_RIGHTCODE">
            <summary>
            根据权限编号判断用户是否拥有权限的SQl语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.User.SQL_HASRIGHT_BY_RIGHTCODE_CHECKCODE_TYPE">
            <summary>
            根据权限编号和知识库项目ID和类型来判断用户是否对知识库项目拥有权限的SQL语句。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetUserParameters">
            <summary>
            获取Insert和Update命令的参数数组。
            </summary>
            <returns>Sql参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.ConvertToUserInfo(System.Data.IDataRecord)">
            <summary>
            将SqlDataReader转换为TemplateInfo实体。
            </summary>
            <param name="dr">DataReader</param>
            <returns>模板实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.Insert(Shmzh.Components.SystemComponent.UserInfo)">
            <summary>
            添加用户。
            </summary>
            <param name="userInfo">用户实体对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.Update(Shmzh.Components.SystemComponent.UserInfo)">
            <summary>
            更改用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.Delete(Shmzh.Components.SystemComponent.UserInfo)">
            <summary>
            删除用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.Delete(System.Int32)">
            <summary>
            删除用户实体。
            </summary>
            <param name="id">用户id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetById(System.Int32)">
            <summary>
            根据ID获取用户对象。
            </summary>
            <param name="id">用户ID。</param>
            <returns>用户对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetByProductCode(System.Int16)">
            <summary>
            根据产品号获取用户集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetByGroupCode(System.Int16)">
            <summary>
            根据组编号获取用户。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetAllByCompany(System.String)">
            <summary>
            根据公司编号获取所有员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetAllAvalibleByCompany(System.String)">
            <summary>
            根据公司编号获取所有有效的员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetAllUserByCompany(System.String)">
            <summary>
            根据公司编号获取所有用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetByRoleCode(System.Int16)">
            <summary>
            根据角色编号获取用户。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetInnerUserByCompany(System.String)">
            <summary>
            根据公司编号获取内部用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetAllEmployeeByCompany(System.String)">
            <summary>
            根据公司编号获取所有员工。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetAllByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取所有的员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetAllAvalibleByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取所有有效的员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetAllEmployeeByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取员工。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门的员工。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetAllUserByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门的用户。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.SearchAll(System.String,System.String)">
            <summary>
            根据公司编号和输入的名称（用户名、姓名）模糊查找人员。
            </summary>
            <param name="companyCode">公司编号</param>
            <param name="name">用户名、姓名</param>
            <returns>用户集合.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.SearchAllAvalible(System.String,System.String)">
            <summary>
            根据公司编号和输入的名称（用户名、姓名）模糊查找非禁用人员。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="name">用户名、姓名.</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.SearchEmp(System.String,System.String)">
            <summary>
            根据公司编号和输入的名称（用户名、姓名）模糊查找员工。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="name">用户名、姓名</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.SearchUser(System.String,System.String)">
            <summary>
            根据公司编号和名称（用户名、姓名）模糊查找用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="name">用户名、姓名。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetByCompanyAndLoginName(System.String,System.String)">
            <summary>
            根据公司编号和登录名获取用户信息。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="loginName">登录名。</param>
            <returns>用户。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetByCompanyAndEmpCode(System.String,System.String)">
            <summary>
            根据公司编号和工号获取用户信息。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="empCode">工号。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetByLoginName(System.String)">
            <summary>
            根据登录名获取用户信息。
            </summary>
            <param name="loginName">登录名。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetByEmpCode(System.String)">
            <summary>
            根据工号获取用户信息。
            </summary>
            <param name="empCode">工号。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetByMobile(System.String)">
            <summary>
            根据手机号码获取用户。
            </summary>
            <param name="mobile">手机号码。</param>
            <returns>用户。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.SetPassword(System.String,System.String)">
            <summary>
            设置口令。
            </summary>
            <param name="loginName">登录名。</param>
            <param name="pwd">原始口令。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetAllAvalibleByCompanyAndRightCode(System.String,System.Int16)">
            <summary>
            根据公司编号或权限编码获取该公司下具有该权限的用户集合。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="rightCode">权限编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetBySQL(System.String)">
            <summary>
            根据SQL语句来获取用户集合。
            </summary>
            <param name="sqlStatement">SQL语句。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.Insert(Shmzh.Components.SystemComponent.UserInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.Update(Shmzh.Components.SystemComponent.UserInfo,System.Data.Common.DbTransaction)">
            <summary>
            更改用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.Delete(Shmzh.Components.SystemComponent.UserInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.Delete(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            删除用户实体。
            </summary>
            <param name="id">用户Id。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.GetDeptMgr(System.String)">
            <summary>
            获取指定部门的部门主管工号。
            </summary>
            <param name="strDeptCode">部门编号。</param>
            <returns>部门主管工号。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.HasRight(System.Int32,System.String)">
            <summary>
            根据登录名来判断是否拥有指定的权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <param name="loginName">登录名。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.HasRight(System.Int32,System.String,System.String)">
            <summary>
            根据登录名和文章编号来判断是否拥有指定的权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <param name="loginName">登录名。</param>
            <param name="docCode">文章编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.User.CreateSalt">
            <summary>
            创建Salt值。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.SEControl">
            <summary>
            查询引擎的控件的SQLServer的数据访问层。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControl.GetSEControlParameters">
            <summary>
            获取查询引擎的数据类型的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControl.ConvertToSEControlInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成SEControlTypeInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>查询引擎控件类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControl.Insert(Shmzh.Components.SystemComponent.SEControlInfo)">
            <summary>
            添加控件。
            </summary>
            <param name="obj">控件实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControl.Update(Shmzh.Components.SystemComponent.SEControlInfo)">
            <summary>
            修改控件。
            </summary>
            <param name="obj">控件实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControl.Delete(Shmzh.Components.SystemComponent.SEControlInfo)">
            <summary>
            删除控件。
            </summary>
            <param name="obj">控件实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControl.Delete(System.Int32)">
            <summary>
            删除控件。
            </summary>
            <param name="id">控件Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControl.GetAllByModuleId(System.String)">
            <summary>
            根据查询模块Id获取所有控件集合。
            </summary>
            <param name="moduleId">查询模块id。</param>
            <returns>控件集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControl.GetAllAvalibleByModuleId(System.String)">
            <summary>
            根据查询模块Id获取所有有效控件集合。
            </summary>
            <param name="moduleId">查询模块id。</param>
            <returns>控件集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEControl.GetById(System.Int32)">
            <summary>
            根据控件Id获取控件。
            </summary>
            <param name="id">控件id。</param>
            <returns>控件实体。</returns>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RightCat.SQL_INSERT_RIGHTCAT">
            <summary>
            添加权限分组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RightCat.SQL_UPDATE_RIGHTCAT">
            <summary>
            修改权限分组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RightCat.SQL_DELETE_RIGHTCAT">
            <summary>
            删除权限分组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RightCat.SQL_SELECT_ALL_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取所有权限分组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RightCat.SQL_SELECT_ALLAVALIBLE_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取所有有效的权限分组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RightCat.SQL_SELECT_BY_CODE">
            <summary>
            根据权限分组编号获取权限分组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RightCat.SQL_SELECT_COUNT_BY_CODE">
            <summary>
            判断权限编号是否已经存在的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RightCat.SQL_SELECT_COUNT_BY_PRODUCTCODE_NAME">
            <summary>
            判断在同一产品下是否存在相同的名称权限分组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.RightCat.SQL_SELECT_CHILDCOUNT_BY_CODE">
            <summary>
            判断权限分类是否被使用。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RightCat.GetRightCatParameters">
            <summary>
            获取权限分组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RightCat.ConvertToRightCatInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RightCat.Insert(Shmzh.Components.SystemComponent.RightCatInfo)">
            <summary>
            添加权限分组。
            </summary>
            <param name="rightCatInfo">权限分组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RightCat.Update(Shmzh.Components.SystemComponent.RightCatInfo)">
            <summary>
            修改权限分组。
            </summary>
            <param name="rightCatInfo">权限分组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RightCat.Delete(Shmzh.Components.SystemComponent.RightCatInfo)">
            <summary>
            删除权限分组。
            </summary>
            <param name="rightCatInfo">权限分组实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RightCat.Delete(System.String)">
            <summary>
            删除权限分组。
            </summary>
            <param name="code">权限分组编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RightCat.IsExist(System.String)">
            <summary>
            判断权限分组编号是否已经存在。
            </summary>
            <param name="code">权限编号编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RightCat.IsExist(System.Int16,System.String)">
            <summary>
            判断权限分组名称是否已经存在。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="name">权限分组名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RightCat.GetAllByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有的权限分组。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限分组集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RightCat.GetAllAvalibleByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有有效的权限分组。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>权限分组集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.RightCat.GetByCode(System.String)">
            <summary>
            根据编号获取权限分组。
            </summary>
            <param name="code">权限分组编号。</param>
            <returns>权限分组实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.Grant">
            <summary>
            授权管理。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Grant.SQL_INSERT_GRANT">
            <summary>
            添加组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Grant.SQL_UPDATE_GRANT">
            <summary>
            修改组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Grant.SQL_DELETE_GRANT">
            <summary>
            删除组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Grant.SQL_SELECT_ALLAVALIBLE_BY_GRANTOR">
            <summary>
            获取所有组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Grant.SQL_SELECT_ALLAVALIBLE_BY_EMBRACER">
            <summary>
            根据组名称获取组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Grant.SQL_SELECT_BY_ID">
            <summary>
            根据组编号获取组记录。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Grant.GetGrantParameters">
            <summary>
            获取组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Grant.ConvertToGrantInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GrantInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>授权记录实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Grant.Insert(Shmzh.Components.SystemComponent.GrantInfo)">
            <summary>
            添加授权记录。
            </summary>
            <param name="grantInfo">授权记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Grant.Update(Shmzh.Components.SystemComponent.GrantInfo)">
            <summary>
            修改授权记录实体。
            </summary>
            <param name="grantInfo">授权记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Grant.Delete(Shmzh.Components.SystemComponent.GrantInfo)">
            <summary>
            删除授权记录实体。
            </summary>
            <param name="grantInfo">授权记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Grant.Delete(System.Int64)">
            <summary>
            删除授权记录实体。
            </summary>
            <param name="id">授权记录id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Grant.GetAllAvalibleByGrantor(System.String)">
            <summary>
            根据授权人获取当前有效的授权记录。
            </summary>
            <param name="grantor">授权人用户名。</param>
            <returns>授权记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Grant.GetAllAvalibleByEmbracer(System.String)">
            <summary>
            根据被授权人获取当前的有效的授权记录。
            </summary>
            <param name="embracer">被授权人用户名。</param>
            <returns>授权记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Grant.GetById(System.Int64)">
            <summary>
            根据Id获取授权记录实体。
            </summary>
            <param name="id">授权记录Id。</param>
            <returns>授权记录实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.Role">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.#ctor">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.Insert(Shmzh.Components.SystemComponent.RoleService.RoleInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.InsertAsync(Shmzh.Components.SystemComponent.RoleService.RoleInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.InsertAsync(Shmzh.Components.SystemComponent.RoleService.RoleInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.Update(Shmzh.Components.SystemComponent.RoleService.RoleInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.UpdateAsync(Shmzh.Components.SystemComponent.RoleService.RoleInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.UpdateAsync(Shmzh.Components.SystemComponent.RoleService.RoleInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.Delete(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.DeleteAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.DeleteAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.IsExist(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.IsExistAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.IsExistAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.IsExist1(System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.IsExist1Async(System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.IsExist1Async(System.String,System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.GetAllByProductCode(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.GetAllByProductCodeAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.GetAllByProductCodeAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.GetAllAvalibleByProductCode(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.GetAllAvalibleByProductCodeAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.GetAllAvalibleByProductCodeAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.GetByCode(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.GetByCodeAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.GetByCodeAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleService.Role.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.RoleService.Role.InsertCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.RoleService.Role.UpdateCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.RoleService.Role.DeleteCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.RoleService.Role.IsExistCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.RoleService.Role.IsExist1Completed">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.RoleService.Role.GetAllByProductCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.RoleService.Role.GetAllAvalibleByProductCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.RoleService.Role.GetByCodeCompleted">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.RoleInfo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleService.RoleInfo.RoleCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleService.RoleInfo.RoleName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleService.RoleInfo.IsValid">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleService.RoleInfo.Remark">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleService.RoleInfo.ProductCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleService.RoleInfo.SerialNo">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.InsertCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.InsertCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleService.InsertCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.UpdateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.UpdateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleService.UpdateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.DeleteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.DeleteCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleService.DeleteCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.IsExistCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.IsExistCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleService.IsExistCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.IsExist1CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.IsExist1CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleService.IsExist1CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.GetAllByProductCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.GetAllByProductCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleService.GetAllByProductCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.GetAllAvalibleByProductCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.GetAllAvalibleByProductCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleService.GetAllAvalibleByProductCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.GetByCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleService.GetByCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleService.GetByCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.User">
            <summary>
            User用户的摘要说明。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.User.SQL_HASRIGHT_BY_RIGHTCODE">
            <summary>
            根据权限编号判断用户是否拥有权限的SQl语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.User.SQL_HASRIGHT_BY_RIGHTCODE_CHECKCODE_TYPE">
            <summary>
            根据权限编号和知识库项目ID和类型来判断用户是否对知识库项目拥有权限的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.User.SQL_ISUNMANAGED_BY_CHECKCODE_TYPE">
            <summary>
            判断知识库条目是否是不受管制的SQL语句。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.User.#ctor(System.String,System.String)">
            <summary>
            用户实例
            </summary>
            <param name="loginName">用户名</param>
            <param name="pwd">密码</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.User.#ctor(System.String)">
            <summary>
            根据用户名构造用户实例.
            </summary>
            <param name="loginName">用户名.</param>
            <remarks>适用于集成登录的环境,SSO登录后,直接以用户名来创建用户实例.
            这样SSO和其他系统只要保证用户名相同就可以了.
            </remarks>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.User.#ctor">
            <summary>
            用户构造函数.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.User.HasRight(System.Int32)">
            <summary>
            是否有权限
            </summary>
            <param name="rightCode">权限编号</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.User.HasRight(System.Int32,System.String)">
            <summary>
            是否拥有权限
            </summary>
            <param name="rightCode">权限编号</param>
            <param name="docCode">文档编号</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.User.HasRight(System.Int32,System.String,System.String)">
            <summary>
            是否拥有权限(适用知识管理)
            </summary>
            <param name="rightCode">权限代码</param>
            <param name="checkCode">节点号</param>
            <param name="type">类型（目录、文章）</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.User.IsUnManaged(System.String,System.String)">
            <summary>
            判断知识库项目是否是不受管制的。
            </summary>
            <param name="checkCode">文章或目录的ID。</param>
            <param name="type">类型(文章或目录);</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.User.ChangePassword(System.String,System.String,System.String)">
            <summary>
            改变口令
            </summary>
            <param name="loginName">用户名</param>
            <param name="oldPassword">旧口令</param>
            <param name="newPassword">新口令</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.User.ResetPassword(Shmzh.Components.SystemComponent.UserInfo)">
            <summary>
            复位密码。
            </summary>
            <param name="userInfo">用户对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.User.Get_HasRight_By_RightCode_Parameters">
            <summary>
            获取根据权限码判断是否拥有权限的SQL语句的参数数组。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.User.Get_HasRight_By_RightCode_CheckCode_Type_Parameters">
            <summary>
            获取根据权限码判断是否拥有权限的SQL语句的参数数组。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.User.CreatePasswordHash(System.String,System.String)">
            <summary>
            根据原始口令和附加码对口令进行哈希.
            </summary>
            <param name="pwd">string:口令</param>
            <param name="salt">string:附加码</param>
            <returns>经过哈希过的口令.</returns>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.thisUserInfo">
            <summary>
            用户基本信息
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.Information">
            <summary>
            用户信息实体.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.OwenedRoles">
            <summary>
            用户拥有的角色信息.
            包括用户角色，组角色以及授权人所拥有的组角色、用户角色。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.GroupUsers">
            <summary>
            用户所拥有的用户组。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.ACL">
            <summary>
            访问控制列表.Access Control List.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.RoleRights">
            <summary>
            角色权限.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.LoginSuccess">
            <summary>
            是否登录成功
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.Company">
            <summary>
            员工所属的公司.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.LoginName">
            <summary>
            用户的登录名。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.EmpName">
            <summary>
            用户姓名。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.EmpCode">
            <summary>
            工号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.Gender">
            <summary>
            性别。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.DeptCode">
            <summary>
            部门编号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.DeptName">
            <summary>
            部门名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.User.UICulture">
            <summary>
            界面语言.
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlType">
            <summary>
            查询引擎的控件类型的SQLServer的数据访问层。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlType.GetSEControlTypeParameters">
            <summary>
            获取查询引擎的数据类型的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlType.ConvertToSEControlTypeInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成SEControlTypeInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>查询引擎控件类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlType.Insert(Shmzh.Components.SystemComponent.SEControlTypeInfo)">
            <summary>
            添加控件类型。
            </summary>
            <param name="obj">控件类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlType.Update(Shmzh.Components.SystemComponent.SEControlTypeInfo)">
            <summary>
            修改控件类型。
            </summary>
            <param name="obj">控件类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlType.Delete(Shmzh.Components.SystemComponent.SEControlTypeInfo)">
            <summary>
            删除控件类型实体。
            </summary>
            <param name="obj">控件类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlType.Delete(System.Int32)">
            <summary>
            删除控件类型实体。
            </summary>
            <param name="id">控件类型实体id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlType.GetAll">
            <summary>
            获取所有的控件类型。
            </summary>
            <returns>控件类型集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlType.GetById(System.Int32)">
            <summary>
            根据Id获取控件类型。
            </summary>
            <param name="id">控件类型id。</param>
            <returns>控件类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlType.IsExist(System.Int32)">
            <summary>
            判断id是否已经存在。
            </summary>
            <param name="id">id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEControlType.IsExist(System.String)">
            <summary>
            判断名称是否已经存在。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.Grant">
            <summary>
            授权。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.SQL_INSERT_GRANT">
            <summary>
            添加组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.SQL_UPDATE_GRANT">
            <summary>
            修改组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.SQL_DELETE_GRANT">
            <summary>
            删除组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.SQL_SELECT_ALLAVALIBLE_BY_GRANTOR">
            <summary>
            获取所有组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.SQL_SELECT_ALLAVALIBLE_BY_EMBRACER">
            <summary>
            根据组名称获取组记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.SQL_SELECT_BY_ID">
            <summary>
            根据组编号获取组记录。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.GetGrantParameters">
            <summary>
            获取组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.ConvertToGrantInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GrantInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>授权记录实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.Insert(Shmzh.Components.SystemComponent.GrantInfo)">
            <summary>
            添加授权记录。
            </summary>
            <param name="grantInfo">授权记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.Update(Shmzh.Components.SystemComponent.GrantInfo)">
            <summary>
            修改授权记录实体。
            </summary>
            <param name="grantInfo">授权记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.Delete(Shmzh.Components.SystemComponent.GrantInfo)">
            <summary>
            删除授权记录实体。
            </summary>
            <param name="grantInfo">授权记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.Delete(System.Int64)">
            <summary>
            删除授权记录实体。
            </summary>
            <param name="id">授权记录id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.GetAllAvalibleByGrantor(System.String)">
            <summary>
            根据授权人获取当前有效的授权记录。
            </summary>
            <param name="grantor">授权人用户名。</param>
            <returns>授权记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.GetAllAvalibleByEmbracer(System.String)">
            <summary>
            根据被授权人获取当前的有效的授权记录。
            </summary>
            <param name="embracer">被授权人用户名。</param>
            <returns>授权记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Grant.GetById(System.Int64)">
            <summary>
            根据Id获取授权记录实体。
            </summary>
            <param name="id">授权记录Id。</param>
            <returns>授权记录实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.Section">
            <summary>
            The class that hold the configuration section for the mzh's Provider.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Section.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Section.DefaultProvider">
            <summary>
            Gets or sets the default provider.
            </summary>
            <value>The default provider.</value>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SEControlInfo">
            <summary>
            查询模块控件类型信息。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SEControlInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.Id">
            <summary>
            查询模块控件Id。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.ModuleId">
            <summary>
            查询模块ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.LabelName">
            <summary>
            查询模块控件标签名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.ControlTypeId">
            <summary>
            查询模块控件类型ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.DataTypeId">
            <summary>
            查询控件数据类型ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.DataTextField">
            <summary>
            显示绑定字段。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.DataValueField">
            <summary>
            值绑定字段。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.Assembly">
            <summary>
            数据绑定方法的装配集。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.ObjType">
            <summary>
            装配集中类名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.Method">
            <summary>
            数据绑定方法。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.TableName">
            <summary>
            表、视图名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.FieldName">
            <summary>
            字段名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.Operator">
            <summary>
            运算符
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.IsValid">
            <summary>
            是否有效。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.SerialNo">
            <summary>
            顺序号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlInfo.Remark">
            <summary>
            查询模块控件类型的备注。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.Model.TB_UserCatInfo">
            <summary>
            工作流用户分类。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Model.TB_UserCatInfo.UserCatId">
            <summary>
            用户分类Id。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Model.TB_UserCatInfo.UserCatType">
            <summary>
            用户分类类型。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Model.TB_UserCatInfo.UserCatName">
            <summary>
            用户分类名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.Model.TB_UserCatInfo.UserCatEnable">
            <summary>
            是否有效。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.OwnedRole">
            <summary>
            角色与访问对象之间关系的SQLServer的数据访问对象。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.OwnedRole.GetAllByProductCode(System.Int16)">
            <summary>
            根据产品获取所有的角色与对象的关系的集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>角色和访问对象关系的集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.OwnedRole.GetByUserName(System.String)">
            <summary>
            根据用户名获取用户所具有的角色和访问对象的关系。
            </summary>
            <param name="userName">用户名。</param>
            <returns>角色和访问对象关系的集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.OwnedRole.GetByGroupCode(System.Int16)">
            <summary>
            根据组编号获取具有的角色和访问对象的关系。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>角色和访问对象关系的集合</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.OwnedRole.ConvertToOwnedRoleInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成OwnedRoleInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>角色与访问对象的关系实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatService.GroupCat">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.#ctor">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.Insert(Shmzh.Components.SystemComponent.GroupCatService.GroupCatInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.InsertAsync(Shmzh.Components.SystemComponent.GroupCatService.GroupCatInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.InsertAsync(Shmzh.Components.SystemComponent.GroupCatService.GroupCatInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.Update(Shmzh.Components.SystemComponent.GroupCatService.GroupCatInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.UpdateAsync(Shmzh.Components.SystemComponent.GroupCatService.GroupCatInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.UpdateAsync(Shmzh.Components.SystemComponent.GroupCatService.GroupCatInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.Delete(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.DeleteAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.DeleteAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.IsExist(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.IsExistAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.IsExistAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.GetAll">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.GetAllAsync">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.GetAllAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.GetById(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.GetByIdAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.GetByIdAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.InsertCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.UpdateCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.DeleteCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.IsExistCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.GetAllCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.GroupCatService.GroupCat.GetByIdCompleted">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatService.GroupCatInfo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupCatService.GroupCatInfo.Id">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupCatService.GroupCatInfo.Name">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupCatService.GroupCatInfo.Remark">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupCatService.GroupCatInfo.SerialNo">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatService.InsertCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatService.InsertCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupCatService.InsertCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatService.UpdateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatService.UpdateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupCatService.UpdateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatService.DeleteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatService.DeleteCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupCatService.DeleteCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatService.IsExistCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatService.IsExistCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupCatService.IsExistCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatService.GetAllCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatService.GetAllCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupCatService.GetAllCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatService.GetByIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatService.GetByIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupCatService.GetByIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.Product">
            <summary>
             产品的SQL Server数据访问层。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Product.Insert(Shmzh.Components.SystemComponent.ProductInfo)">
            <summary>
            添加产品。
            </summary>
            <param name="productInfo">产品实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Product.Update(Shmzh.Components.SystemComponent.ProductInfo)">
            <summary>
            修改产品。
            </summary>
            <param name="productInfo">产品实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Product.Delete(Shmzh.Components.SystemComponent.ProductInfo)">
            <summary>
            删除产品。
            </summary>
            <param name="productInfo">产品实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Product.Delete(System.Int16)">
            <summary>
            删除产品。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Product.Register(Shmzh.Components.SystemComponent.ProductInfo)">
            <summary>
            注册产品。
            </summary>
            <param name="productInfo">产品实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Product.IsExist(System.Int16)">
            <summary>
            判断产品编号是否已经存在。
            </summary>
            <param name="productCode"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Product.IsExist(System.String)">
            <summary>
            是否已经存在产品名称。
            </summary>
            <param name="productName">产品名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Product.GetAll">
            <summary>
            获取所有产品。
            </summary>
            <returns>ArrayList。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Product.GetAllAvalible">
            <summary>
            获取所有有效的产品。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Product.GetByCode(System.Int16)">
            <summary>
            根据产品编号获取产品。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>ArrayList</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Product.GetProductParameters">
            <summary>
            获取产品参数。
            </summary>
            <returns>产品参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Product.ConvertToProductInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成ProductInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>产品实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SqlHelper">
            <summary>
            The SqlHelper class is intended to encapsulate high performance, scalable best practices for 
            common uses of SqlClient
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.AttachParameters(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlParameter[])">
            <summary>
            This method is used to attach array of SqlParameters to a SqlCommand.
            This method will assign a value of DbNull to any parameter with a direction of
            InputOutput and a value of null.  
            This behavior will prevent default values from being used, but
            this will be the less common case than an intended pure output parameter (derived as InputOutput)
            where the user provided no input value.
            </summary>
            <param name="command">The command to which the parameters will be added</param>
            <param name="commandParameters">An array of SqlParameters to be added to command</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.AssignParameterValues(System.Data.SqlClient.SqlParameter[],System.Data.DataRow)">
            <summary>
            This method assigns dataRow column values to an array of SqlParameters
            </summary>
            <param name="commandParameters">Array of SqlParameters to be assigned values</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.AssignParameterValues(System.Data.SqlClient.SqlParameter[],System.Object[])">
            <summary>
            This method assigns an array of values to an array of SqlParameters
            </summary>
            <param name="commandParameters">Array of SqlParameters to be assigned values</param>
            <param name="parameterValues">Array of objects holding the values to be assigned</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[],System.Boolean@)">
            <summary>
            This method opens (if necessary) and assigns a connection, transaction, command type and parameters 
            to the provided command
            </summary>
            <param name="command">The SqlCommand to be prepared</param>
            <param name="connection">A valid SqlConnection, on which to execute this command</param>
            <param name="transaction">A valid SqlTransaction, or 'null'</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
            <param name="mustCloseConnection"><c>true</c> if the connection was opened by the method, otherwose is false.</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the database specified in 
            the connection string
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the database specified in the connection string 
            using the provided parameters
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteNonQuery(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(connString, "PublishOrders", 24, 36);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored prcedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            e.g.:  
             int result = ExecuteNonQuery(conn, "PublishOrders", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            e.g.:  
             int result = ExecuteNonQuery(conn, trans, "PublishOrders", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteDataset(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            e.g.:  
             DataSet ds = ExecuteDataset(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[],Shmzh.Components.SystemComponent.SqlHelper.SqlConnectionOwnership)">
            <summary>
            Create and prepare a SqlCommand, and call ExecuteReader with the appropriate CommandBehavior.
            </summary>
            <remarks>
            If we created and opened the connection, we want the connection to be closed when the DataReader is closed.
            
            If the caller provided the connection, we want to leave it to them to manage.
            </remarks>
            <param name="connection">A valid SqlConnection, on which to execute this command</param>
            <param name="transaction">A valid SqlTransaction, or 'null'</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
            <param name="connectionOwnership">Indicates whether the connection parameter was provided by the caller, or created by SqlHelper</param>
            <returns>SqlDataReader containing the results of the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteReader(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
              SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteScalar(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, "GetOrderCount", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure using "FOR XML AUTO"</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.FillDataset(System.String,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.FillDataset(System.String,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.FillDataset(System.String,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, 24);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>    
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             FillDataset(conn, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>    
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(conn, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             FillDataset(conn, "GetOrders", ds, new string[] {"orders"}, 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             FillDataset(trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             FillDataset(trans, "GetOrders", ds, new string[]{"orders"}, 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Private helper method that execute a SqlCommand (that returns a resultset) against the specified SqlTransaction and SqlConnection
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(conn, trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.UpdateDataset(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlCommand,System.Data.DataSet,System.String)">
            <summary>
            Executes the respective command for each inserted, updated, or deleted row in the DataSet.
            </summary>
            <remarks>
            e.g.:  
             UpdateDataset(conn, insertCommand, deleteCommand, updateCommand, dataSet, "Order");
            </remarks>
            <param name="insertCommand">A valid transact-SQL statement or stored procedure to insert new records into the data source</param>
            <param name="deleteCommand">A valid transact-SQL statement or stored procedure to delete records from the data source</param>
            <param name="updateCommand">A valid transact-SQL statement or stored procedure used to update records in the data source</param>
            <param name="dataSet">The DataSet used to update the data source</param>
            <param name="tableName">The DataTable used to update the data source.</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.CreateCommand(System.Data.SqlClient.SqlConnection,System.String,System.String[])">
            <summary>
            Simplify the creation of a Sql command object by allowing
            a stored procedure and optional parameters to be provided
            </summary>
            <remarks>
            e.g.:  
             SqlCommand command = CreateCommand(conn, "AddCustomer", "CustomerID", "CustomerName");
            </remarks>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="sourceColumns">An array of string to be assigned as the source columns of the stored procedure parameters</param>
            <returns>A valid SqlCommand object</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteNonQueryTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteNonQueryTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.  
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteNonQueryTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified
            SqlTransaction using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteDatasetTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteDatasetTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the dataRow column values as the store procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteDatasetTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlTransaction 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteReaderTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteReaderTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteReaderTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlTransaction 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteScalarTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteScalarTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteScalarTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlTransaction
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteXmlReaderTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelper.ExecuteXmlReaderTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlTransaction 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SqlHelper.SqlConnectionOwnership">
            <summary>
            This enum is used to indicate whether the connection was provided by the caller, or created by SqlHelper, so that
            we can set the appropriate CommandBehavior when calling ExecuteReader()
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SqlHelper.SqlConnectionOwnership.Internal">
            <summary>Connection is owned and managed by SqlHelper</summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SqlHelper.SqlConnectionOwnership.External">
            <summary>Connection is owned and managed by the caller</summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SEControlTypeInfo">
            <summary>
            查询模块控件类型信息。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SEControlTypeInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlTypeInfo.OldId">
            <summary>
            查询模块控件类型原始ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlTypeInfo.Id">
            <summary>
            查询模块控件类型Id。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlTypeInfo.Name">
            <summary>
            查询模块控件类型名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEControlTypeInfo.Remark">
            <summary>
            查询模块控件类型的备注。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.ListBase`1">
            <summary>
            自定义集合类。
            </summary>
            <typeparam name="T">泛型类型。</typeparam>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.ListBase`1._propertyCollection">
            <summary>
            属性集合。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ListBase`1.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ListBase`1.InitializeList">
            <summary>
            Initialize any member variables when the list is created
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ListBase`1.FindAll(System.Predicate{`0})">
            <summary>
            </summary>
            <param name="match"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ListBase`1.Sort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
             Sorts the data source based on a <see cref="T:System.ComponentModel.PropertyDescriptor">PropertyDescriptor</see> and a <see cref="T:System.ComponentModel.ListSortDirection">ListSortDirection</see>.
            </summary>
            <param name="property">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to sort the collection by.</param>
            <param name="direction">The <see cref="T:System.ComponentModel.ListSortDirection"/> in which to sort the collection.</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ListBase`1.Sort(System.ComponentModel.ListSortDescriptionCollection)">
            <summary>
            根据排序描述集合来进行排序。
            </summary>
            <param name="sorts">排序描述集合。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ListBase`1.Sort(System.String)">
            <summary>
            Sorts the elements in the entire list using the specified Order By statement.
            </summary>
            <param name="orderBy">SQL-like string representing the properties to sort the list by.</param>
            <remarks><i>orderBy</i> should be in the following format: 
            <para>PropertyName[[ [[ASC]|DESC]][, PropertyName[ [[ASC]|DESC]][,...]]]</para></remarks>
            <example><c>list.Sort("Property1, Property2 DESC, Property3 ASC");</c></example>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ListBase`1.AutoSort(System.String)">
            <summary>
            自动排序方法。
            </summary>
            <param name="orderBy">排序语句。</param>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ListBase`1.SortDirectionCore">
            <summary>
            Gets the direction the list is sorted.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ListBase`1.SortPropertyCore">
            <summary>
            Gets the property descriptor that is used for sorting
            </summary>
            <returns>The <see cref="T:System.ComponentModel.PropertyDescriptor"/> used for sorting the list.</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SortComparer`1">
            <summary>
            Generic Sort comparer for the <see cref="T:Shmzh.Components.SystemComponent.ListBase`1"/> class.
            </summary>
            <typeparam name="T">Type of object to sort.</typeparam>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SortComparer`1.m_SortCollection">
            <summary>
            Collection of properties to sort by.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SortComparer`1.m_PropDesc">
            <summary>
            Property to sort by.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SortComparer`1.m_Direction">
            <summary>
            Direction to sort by
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SortComparer`1.m_PropertyDescriptors">
            <summary>
            Collection of properties for T.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SortComparer`1.#ctor(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Create a new instance of the SortComparer class.
            </summary>
            <param name="propDesc">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to sort by.</param>
            <param name="direction">The <see cref="T:System.ComponentModel.ListSortDirection"/> to sort the list.</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SortComparer`1.#ctor(System.ComponentModel.ListSortDescriptionCollection)">
            <summary>
            Create a new instance of the SortComparer class.
            </summary>
            <param name="sortCollection">A <see cref="T:System.ComponentModel.ListSortDescriptionCollection"/> containing the properties to sort the list by.</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SortComparer`1.#ctor(System.String)">
            <summary>
            Create a new instance of the SortComparer class.
            </summary>
            <param name="orderBy">SQL-like string representing the properties to sort the list by.</param>
            <remarks><i>orderBy</i> should be in the following format: 
            <para>PropertyName[[ [[ASC]|DESC]][, PropertyName[ [[ASC]|DESC]][,...]]]</para></remarks>
            <example><c>list.Sort("Property1, Property2 DESC, Property3 ASC");</c></example>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SortComparer`1.Compare(`0,`0)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>Value is less than zero: <c>x</c> is less than <c>y</c>
            <para>Value is equal to zero: <c>x</c> equals <c>y</c></para>
            <para>Value is greater than zero: <c>x</c> is greater than <c>y</c></para>
            </returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SortComparer`1.CompareValues(System.Object,System.Object,System.ComponentModel.ListSortDirection)">
            <summary>
            Compare two objects
            </summary>
            <param name="xValue">The first object to compare</param>
            <param name="yValue">The second object to compare</param>
            <param name="direction">The direction to sort the objects in</param>
            <returns>Returns an integer representing the order of the objects</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SortComparer`1.ParseOrderBy(System.String)">
            <summary>
            Parses a string into a <see cref="T:System.ComponentModel.ListSortDescriptionCollection"/>.
            </summary>
            <param name="orderBy">SQL-like string of sort properties</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SortComparer`1.Initialize">
            <summary>
            Initializes the SortComparer object
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.Enum.UserStateEnum">
            <summary>
             用户状态枚举类。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.UserStateEnum.ACTIVED">
            <summary>
            激活的
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.UserStateEnum.UNACTIVED">
            <summary>
            不激活的
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.Enum.AccessControlObjectType">
            <summary>
            访问控制对象类型.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.AccessControlObjectType.KbArticle">
            <summary>
            知识库文章.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.AccessControlObjectType.KbCategory">
            <summary>
            知识库目录.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.AccessControlObjectType.PqSchema">
            <summary>
            生产报表.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.AccessControlObjectType.PqCategory">
            <summary>
            生产报表分类.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.AccessControlObjectType.PatrolType">
            <summary>
            巡检大类.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.AccessControlObjectType.DeviceType">
            <summary>
            设备分类.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.MenuType.GetMenuTypeParameters">
            <summary>
            获取菜单类型参数。
            </summary>
            <returns>菜单类型参数.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.MenuType.ConvertToMenuTypeInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成MenuTypeInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>菜单类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.Insert(Shmzh.Components.SystemComponent.UserRoleInfo)">
            <summary>
            添加用户角色。
            </summary>
            <param name="userRoleInfo">用户角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.Insert(System.String,System.String,System.Int16)">
            <summary>
            批量添加用户角色。
            </summary>
            <param name="userNames">用户名拼接字符串。</param>
            <param name="roleCodes">角色编号拼接字符串。</param>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.CopyTo(System.String,System.String,System.Int16)">
            <summary>
            复制用户角色到目标用户
            </summary>
            <param name="sourceUserName">源用户名。</param>
            <param name="targetUserName">目标用户名。</param>
            <param name="productCode">产品编号。</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.Insert(System.String,System.String,System.String,System.String)">
            <summary>
            针对知识库条目批量增加用户角色。
            </summary>
            <param name="userNames">用户名拼接字符串。</param>
            <param name="roleCodes">角色编号串。</param>
            <param name="checkCode">知识库条目ID。</param>
            <param name="type">知识库条目类型。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.Delete(Shmzh.Components.SystemComponent.UserRoleInfo)">
            <summary>
            删除用户角色。
            </summary>
            <param name="userRoleInfo">用户角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.Delete(System.String,System.Int16)">
            <summary>
            批量删除某些用户的某个产品的角色。
            </summary>
            <param name="userNames">用户名拼接字符串。</param>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.Delete(System.String,System.String,System.String)">
            <summary>
            针对知识库条目删除某一个用户的角色。
            </summary>
            <param name="userNames">用户名。</param>
            <param name="checkCode">知识库条目ID。</param>
            <param name="type">知识库条目类型。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.ClearAccess(System.String,System.String)">
            <summary>
            清除知识库条目的访问控制。
            </summary>
            <param name="checkCode">知识库条目的id。</param>
            <param name="type">知识库条目的类型。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.GetByUserName(System.String)">
            <summary>
            根据用户名获取所有用户角色。
            </summary>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.GetByProductCode(System.Int16)">
            <summary>
            根据产品编号获取用户角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.GetByRoleCode(System.Int16)">
            <summary>
            根据角色编号获取用户角色集合。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.GetByProductCodeAndName(System.Int16,System.String)">
            <summary>
            根据产品编号和模糊匹配用户名、姓名来获取用户角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="name">用户名、姓名。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.GetByProductCodeAndUserName(System.Int16,System.String)">
            <summary>
            根据产品编号和用户名获取用户角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="userName">用户名。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.GetByProductCodeAndUserNameAndCheckCodeAndType(System.Int16,System.String,System.String,System.String)">
            <summary>
            根据产品编号和用户名获取用户角色集合。
            </summary>
            <param name="productCode">产品编号</param>
            <param name="userName">用户名。</param>
            <param name="checkCode">检查对象编号。</param>
            <param name="type">检查对象类型。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.GetByCheckCodeAndType(System.String,System.String)">
            <summary>
            根据CheckCode和Type获取用户角色列表。
            </summary>
            <param name="checkCode">检查对象编号。</param>
            <param name="type">检查对象类型。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.GetByCheckCodeAndTypeAndUserName(System.String,System.String,System.String)">
            <summary>
            根据用户名和知识库条目获取用户角色集合。
            </summary>
            <param name="checkCode">知识库条目ID。</param>
            <param name="type">知识库条目类型。</param>
            <param name="userName">用户名。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.UserRole.GetNoAccessObj(System.Int32,System.Int32)">
            <summary>
            获取没有设置任何访问权限的对象.
            </summary>
            <param name="rightCode">权限代码</param>
            <param name="productcode">产品代码</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.Insert(Shmzh.Components.SystemComponent.UserInfo)">
            <summary>
            添加用户。
            </summary>
            <param name="userInfo">用户实体对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.Insert(Shmzh.Components.SystemComponent.UserInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.Update(Shmzh.Components.SystemComponent.UserInfo)">
            <summary>
            更改用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.Update(Shmzh.Components.SystemComponent.UserInfo,System.Data.Common.DbTransaction)">
            <summary>
            更改用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.Delete(Shmzh.Components.SystemComponent.UserInfo)">
            <summary>
            删除用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.Delete(Shmzh.Components.SystemComponent.UserInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.Delete(System.Int32)">
            <summary>
            删除用户实体。
            </summary>
            <param name="id">用户id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.Delete(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            删除用户实体。
            </summary>
            <param name="id">用户Id。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.CreateSalt">
            <summary>
            创建Salt值。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.SetPassword(System.String,System.String)">
            <summary>
            设置口令。
            </summary>
            <param name="loginName">登录名。</param>
            <param name="pwd">原始口令。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.HasRight(System.Int32,System.String)">
            <summary>
            根据登录名来判断是否拥有指定的权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <param name="loginName">登录名。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.HasRight(System.Int32,System.String,System.String)">
            <summary>
            根据登录名和文章编号来判断是否拥有指定的权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <param name="loginName">登录名。</param>
            <param name="docCode">文章编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetById(System.Int32)">
            <summary>
            根据ID获取用户对象。
            </summary>
            <param name="id">用户ID。</param>
            <returns>用户对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetByLoginName(System.String)">
            <summary>
            根据登录名获取用户信息。
            </summary>
            <param name="loginName">登录名。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetByCompanyAndLoginName(System.String,System.String)">
            <summary>
            根据公司编号和登录名获取用户信息。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="loginName">登录名。</param>
            <returns>用户。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetByEmpCode(System.String)">
            <summary>
            根据工号获取用户信息。
            </summary>
            <param name="empCode">工号。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetByMobile(System.String)">
            <summary>
            根据手机号码获取用户。
            </summary>
            <param name="mobile">手机号码。</param>
            <returns>用户。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetByCompanyAndEmpCode(System.String,System.String)">
            <summary>
            根据公司编号和工号获取用户信息。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="empCode">工号。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetByProductCode(System.Int16)">
            <summary>
            根据产品号获取用户集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetByGroupCode(System.Int16)">
            <summary>
            根据组编号获取用户。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetByRoleCode(System.Int16)">
            <summary>
            根据角色编号获取用户。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetAllByCompany(System.String)">
            <summary>
            根据公司编号获取所有员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetAllAvalibleByCompany(System.String)">
            <summary>
            根据公司编号获取所有有效的员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetAllEmployeeByCompany(System.String)">
            <summary>
            根据公司编号获取所有员工。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetAllUserByCompany(System.String)">
            <summary>
            根据公司编号获取所有用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetAllByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取所有的员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetAllAvalibleByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取所有有效的员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetAllEmployeeByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取员工。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门的员工。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetAllUserByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门的用户。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetInnerUserByCompany(System.String)">
            <summary>
            根据公司编号获取内部用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetAllAvalibleByCompanyAndRightCode(System.String,System.Int16)">
            <summary>
            根据公司编号或权限编码获取该公司下具有该权限的用户集合。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="rightCode">权限编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.SearchAll(System.String,System.String)">
            <summary>
            根据公司编号和输入的名称（用户名、姓名）模糊查找人员。
            </summary>
            <param name="companyCode">公司编号</param>
            <param name="name">用户名、姓名</param>
            <returns>用户集合.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.SearchAllAvalible(System.String,System.String)">
            <summary>
            根据公司编号和输入的名称（用户名、姓名）模糊查找非禁用人员。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="name">用户名、姓名.</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.SearchEmp(System.String,System.String)">
            <summary>
            根据公司编号和输入的名称（用户名、姓名）模糊查找员工。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="name">用户名、姓名</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.SearchUser(System.String,System.String)">
            <summary>
            根据公司编号和名称（用户名、姓名）模糊查找用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="name">用户名、姓名。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetBySQL(System.String)">
            <summary>
            根据SQL语句来获取用户集合。
            </summary>
            <param name="sqlStatement">SQL语句。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.User.GetDeptMgr(System.String)">
            <summary>
            获取指定部门的部门主管工号。
            </summary>
            <param name="deptCode">部门编号。</param>
            <returns>部门主管工号。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.Insert(Shmzh.Components.SystemComponent.GroupRoleInfo)">
            <summary>
            添加组角色。
            </summary>
            <param name="groupRoleInfo">组角色。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.Insert(System.String,System.String,System.Int16)">
            <summary>
            批量添加组角色。
            </summary>
            <param name="groupCodes">组编号串。</param>
            <param name="roleCodes">角色编号串。</param>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
            <remarks>首先删除</remarks>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.Insert(System.String,System.String,System.String,System.String)">
            <summary>
            针对知识库条目批量添加组角色。
            </summary>
            <param name="groupCodes">组编号串。</param>
            <param name="roleCodes">角色编号串。</param>
            <param name="checkCode">知识库条目id。</param>
            <param name="type">知识库条目类型。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.Delete(Shmzh.Components.SystemComponent.GroupRoleInfo)">
            <summary>
            删除组角色。
            </summary>
            <param name="groupRoleInfo">组角色。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.Delete(System.String,System.Int16)">
            <summary>
            删除某些组的某一产品的组角色关系。
            </summary>
            <param name="groupCodes">组编号。</param>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.Delete(System.String,System.String,System.String)">
            <summary>
            针对知识库条目删除组的角色。
            </summary>
            <param name="groupCodes"></param>
            <param name="checkCode"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.ClearAccess(System.String,System.String)">
            <summary>
            清除知识库条目的访问控制。
            </summary>
            <param name="checkCode">知识库条目id。</param>
            <param name="type">知识库条目类型。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.CopyTo(System.String,System.String,System.Int16)">
            <summary>
            复制组角色到目标组
            </summary>
            <param name="sourceGroupCode">源组名称。</param>
            <param name="targetGroupCode">目标组名称。</param>
            <param name="productCode">产品编号。</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.GetByGroupCodeAndProductCode(System.Int16,System.Int16)">
            <summary>
            根据组编号和产品编号获取组角色。
            </summary>
            <param name="groupCode">组编号。</param>
            <param name="productCode">产品编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.GetByGroupCodeAndCheckCodeAndType(System.Int16,System.String,System.String)">
            <summary>
            根据组编号和知识库条目编号和知识库条目类型获取组角色。
            </summary>
            <param name="groupCode">组编号。</param>
            <param name="checkCode">知识库条目编号。</param>
            <param name="type">知识库条目类型。</param>
            <returns>组角色编号。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.GetByCheckCodeAndType(System.String,System.String)">
            <summary>
            根据知识库条目编号和知识库条目类型获取组角色。
            </summary>
            <param name="checkCode">知识库条目编号。</param>
            <param name="type">知识库条目类型。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.GetByProductCode(System.Int16)">
            <summary>
            根据产品编号获取组角色编号。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.GetByRoleCode(System.Int16)">
            <summary>
            根据产品编号和角色编号获取组角色。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.GetByProductCodeAndName(System.Int16,System.String)">
            <summary>
            根据产品编号和用户名、姓名来获取组角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="name">组名。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.GetByProductCodeAndGroupCode(System.Int16,System.Int16)">
            <summary>
            根据产品编号和组编号来获取组角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="groupCode">组编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.GetByProductCodeAndGroupCodeAndCheckCodeAndType(System.Int16,System.Int16,System.String,System.String)">
            <summary>
            根据产品编号和组编号和检查对象来获取组角色集合
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="groupCode">组编号。</param>
            <param name="checkCode">检查对象编号。</param>
            <param name="type">检查对象类型。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupRole.GetByGroupCodeAndType(System.Int16,System.String)">
            <summary>
            根据用户组和访问对象类型获取组角色列表。
            </summary>
            <param name="groupCode">用户组编号</param>
            <param name="type">访问对象类型</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.User">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.#ctor">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.Insert(Shmzh.Components.SystemComponent.UserService.UserInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.InsertAsync(Shmzh.Components.SystemComponent.UserService.UserInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.InsertAsync(Shmzh.Components.SystemComponent.UserService.UserInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.Update(Shmzh.Components.SystemComponent.UserService.UserInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.UpdateAsync(Shmzh.Components.SystemComponent.UserService.UserInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.UpdateAsync(Shmzh.Components.SystemComponent.UserService.UserInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.Delete(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.DeleteAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.DeleteAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.CreateSalt">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.CreateSaltAsync">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.CreateSaltAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SetPassword(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SetPasswordAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SetPasswordAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.HasRight(System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.HasRightAsync(System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.HasRightAsync(System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.HasRight1(System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.HasRight1Async(System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.HasRight1Async(System.Int32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetById(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByIdAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByIdAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByLoginName(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByLoginNameAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByLoginNameAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByCompanyAndLoginName(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByCompanyAndLoginNameAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByCompanyAndLoginNameAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByEmpCode(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByEmpCodeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByEmpCodeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByMobile(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByMobileAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByMobileAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByCompanyAndEmpCode(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByCompanyAndEmpCodeAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByCompanyAndEmpCodeAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByProductCode(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByProductCodeAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByProductCodeAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByGroupCode(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByGroupCodeAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByGroupCodeAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByRoleCode(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByRoleCodeAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetByRoleCodeAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllByCompany(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllByCompanyAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllByCompanyAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompany(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllEmployeeByCompany(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllEmployeeByCompanyAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllEmployeeByCompanyAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllUserByCompany(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllUserByCompanyAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllUserByCompanyAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllByCompanyAndDept(System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllByCompanyAndDeptAsync(System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllByCompanyAndDeptAsync(System.String,System.String,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyAndDept(System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyAndDeptAsync(System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyAndDeptAsync(System.String,System.String,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyAndDeptIds(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyAndDeptIdsAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyAndDeptIdsAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllEmployeeByCompanyAndDept(System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllEmployeeByCompanyAndDeptAsync(System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllEmployeeByCompanyAndDeptAsync(System.String,System.String,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllUserByCompanyAndDept(System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllUserByCompanyAndDeptAsync(System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllUserByCompanyAndDeptAsync(System.String,System.String,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetInnerUserByCompany(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetInnerUserByCompanyAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetInnerUserByCompanyAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyAndRightCode(System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyAndRightCodeAsync(System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyAndRightCodeAsync(System.String,System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SearchAll(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SearchAllAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SearchAllAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SearchAllAvalible(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SearchAllAvalibleAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SearchAllAvalibleAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SearchEmp(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SearchEmpAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SearchEmpAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SearchUser(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SearchUserAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.SearchUserAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetBySQL(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetBySQLAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetBySQLAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetDeptMgr(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetDeptMgrAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.GetDeptMgrAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserService.User.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.InsertCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.UpdateCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.DeleteCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.CreateSaltCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.SetPasswordCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.HasRightCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.HasRight1Completed">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetByIdCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetByLoginNameCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetByCompanyAndLoginNameCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetByEmpCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetByMobileCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetByCompanyAndEmpCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetByProductCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetByGroupCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetByRoleCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetAllByCompanyCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetAllEmployeeByCompanyCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetAllUserByCompanyCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetAllByCompanyAndDeptCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyAndDeptCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyAndDeptIdsCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetAllEmployeeByCompanyAndDeptCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetAllUserByCompanyAndDeptCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetInnerUserByCompanyCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetAllAvalibleByCompanyAndRightCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.SearchAllCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.SearchAllAvalibleCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.SearchEmpCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.SearchUserCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetBySQLCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserService.User.GetDeptMgrCompleted">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.UserInfo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.PKID">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.EmpCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.EmpCo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.DeptCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.DeptName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.EmpName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.EmpEnName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.Gender">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.BirthDay">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.LoginName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.Password1">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.Password2">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.AppandCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.EmpState">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.DutyCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.DutyName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.DutyEnName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.IDCard">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.OfficeCall">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.OfficeSubCall">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.Mobile">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.OfficeFax">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.EMail">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.IsUser">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.UserState">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.IsEmp">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.CreateDate">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.InDate">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.IsLeave">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.LeaveDate">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.SerialNo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UserInfo.UICulture">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.InsertCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.InsertCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.InsertCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.UpdateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.UpdateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.UpdateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.DeleteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.DeleteCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.DeleteCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.CreateSaltCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.CreateSaltCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.CreateSaltCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.SetPasswordCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.SetPasswordCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.SetPasswordCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.HasRightCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.HasRightCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.HasRightCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.HasRight1CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.HasRight1CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.HasRight1CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetByIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByLoginNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByLoginNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetByLoginNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByCompanyAndLoginNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByCompanyAndLoginNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetByCompanyAndLoginNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByEmpCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByEmpCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetByEmpCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByMobileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByMobileCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetByMobileCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByCompanyAndEmpCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByCompanyAndEmpCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetByCompanyAndEmpCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByProductCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByProductCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetByProductCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByGroupCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByGroupCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetByGroupCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByRoleCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetByRoleCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetByRoleCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllByCompanyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllByCompanyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetAllByCompanyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllAvalibleByCompanyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllAvalibleByCompanyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetAllAvalibleByCompanyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllEmployeeByCompanyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllEmployeeByCompanyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetAllEmployeeByCompanyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllUserByCompanyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllUserByCompanyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetAllUserByCompanyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllByCompanyAndDeptCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllByCompanyAndDeptCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetAllByCompanyAndDeptCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllAvalibleByCompanyAndDeptCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllAvalibleByCompanyAndDeptCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetAllAvalibleByCompanyAndDeptCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllAvalibleByCompanyAndDeptIdsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllAvalibleByCompanyAndDeptIdsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetAllAvalibleByCompanyAndDeptIdsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllEmployeeByCompanyAndDeptCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllEmployeeByCompanyAndDeptCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetAllEmployeeByCompanyAndDeptCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllUserByCompanyAndDeptCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllUserByCompanyAndDeptCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetAllUserByCompanyAndDeptCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetInnerUserByCompanyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetInnerUserByCompanyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetInnerUserByCompanyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllAvalibleByCompanyAndRightCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetAllAvalibleByCompanyAndRightCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetAllAvalibleByCompanyAndRightCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.SearchAllCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.SearchAllCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.SearchAllCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.SearchAllAvalibleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.SearchAllAvalibleCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.SearchAllAvalibleCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.SearchEmpCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.SearchEmpCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.SearchEmpCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.SearchUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.SearchUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.SearchUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetBySQLCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetBySQLCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetBySQLCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetDeptMgrCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserService.GetDeptMgrCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserService.GetDeptMgrCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.ToDoListProvider">
            <summary>
            PubData数据库中待办事宜表的数据访问操作类.
            </summary>
            <remarks>提供了对于待办事宜的检索,增加,删除,置为已办状态等操作.</remarks>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoListProvider.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoListProvider.GetToDoLists">
            <summary>
            获取待办事宜列表
            </summary>
            <returns>ToDoLists</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoListProvider.GetToDoLists(System.String)">
            <summary>
            根据用户名获取待办事宜.
            </summary>
            <param name = "username">用户名</param>
            <returns>ToDoLists 对象</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoListProvider.GetByGUID(System.String)">
            <summary>
            根据GUID获取待办事宜。
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoListProvider.GetByArticleCode(System.String)">
            <summary>
            根据文章代号获取待办事宜。
            </summary>
            <param name="code">文章代号。</param>
            <returns>待办事宜列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoListProvider.AddToDoItem(System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            增加待办事宜
            </summary>
            <param name = "submitDate">提交日期</param>
            <param name = "referuserName">提交人用户名</param>
            <param name = "referName">提交人姓名</param>
            <param name = "name">待办事宜主题</param>
            <param name = "description">待办事宜描述</param>
            <param name = "url">URL地址</param>
            <param name = "handlername">处理人姓名</param>
            <param name = "handlerUserName">处理人用户名</param>
            <param name="taskTypeId">任务类型Id。</param>
            <returns>待办事宜ID</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoListProvider.AddToDoItem(System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            增加待办事宜
            </summary>
            <param name = "submitDate">提交日期</param>
            <param name = "referuserName">派发者用户名</param>
            <param name = "referName">派发者姓名</param>
            <param name = "name">待办事宜名称</param>
            <param name = "description">备注描述</param>
            <param name = "url">URL链接</param>
            <param name = "handlername">处理者姓名</param>
            <param name = "handlerUserName">处理者用户名</param>
            <param name = "awokeTime">提醒时间。</param>
            <param name = "invalidateTime">失效时间。</param>
            <param name="taskTypeId">任务类型Id。</param>
            <returns>int</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoListProvider.AddToDoItem(System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            增加待办事宜.
            </summary>
            <param name = "submitDate">提交日期</param>
            <param name = "referuserName">派发者用户名</param>
            <param name = "referName">派发者姓名</param>
            <param name = "name">待办事宜名称</param>
            <param name = "description">备注描述</param>
            <param name = "url">URL连接</param>
            <param name = "handlername">处理者姓名</param>
            <param name = "handlerUserName">处理者用户名</param>
            <param name = "guid">GUID</param>
            <param name="taskTypeId">任务类型Id。</param>
            <returns>int</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoListProvider.AddToDoItem(Shmzh.Components.SystemComponent.ToDoList)">
            <summary>
            增加待办事宜
            </summary>
            <param name = "item">待办事宜项</param>
            <returns>待办事宜ID</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoListProvider.HasToDo(System.String)">
            <summary>
            已经完成待办事宜,设定为已办.
            </summary>
            <param name = "guid">待办事宜ID</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoListProvider.DeleteToDoList(System.String)">
            <summary>
            根据GUID删除待办事宜.
            </summary>
            <param name = "guid">GUID</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoListProvider.Convert2ToDoList(System.Data.IDataRecord)">
            <summary>
            将DataReader转换为ToDoList对象。
            </summary>
            <param name="dr">DataReader对象。</param>
            <returns>ToDoList对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Setting.GetSettingInfoParameters">
            <summary>
            获取查询模块参数。
            </summary>
            <returns>查询模块参数。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Setting.ConvertToSettingInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成SEModuleInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>查询模块实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.Menu">
            <summary>
            菜单的数据访问层。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.GetAllMenu">
            <summary>
            获取所有的菜单项。
            </summary>
            <returns>DataSet</returns>
            <remarks>方法名和实际行为不符。</remarks>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.GetAllAvalibleMenu">
            <summary>
            获取所有有效的菜单项。
            </summary>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.GetAllMenuByProductId(System.Int32)">
            <summary>
            根据指定产品ID获取所有的菜单项。
            </summary>
            <param name="productId">产品ID。</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.GetAllAvalibleMenuByProductId(System.Int32)">
            <summary>
            根据指定产品ID获取所有有效的菜单项。
            </summary>
            <param name="productId">产品ID。</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.GetAllAvalibleByProductCode(System.Int32)">
            <summary>
            根据产品编号获取所有的有效的菜单。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>菜单集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.GetAllMenuByParentId(System.Int32)">
            <summary>
            根据上一级菜单ID获取所有子菜单项。
            </summary>
            <param name="parentId">上一级菜单项ID。</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.GetAllAvalibleMenuByParentId(System.Int32)">
            <summary>
            根据上一级菜单ID获取所有有效的子菜单项。
            </summary>
            <param name="parentId">上一级菜单项ID。</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.GetMenuById(System.Int32)">
            <summary>
            根据菜单项Id获取菜单项。
            </summary>
            <param name="id">菜单项Id</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.Insert(Shmzh.Components.SystemComponent.MenuInfo)">
            <summary>
            增加菜单项。
            </summary>
            <param name="menuInfo">菜单项实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.Update(Shmzh.Components.SystemComponent.MenuInfo)">
            <summary>
            修改菜单项.
            </summary>
            <param name="menuInfo">菜单项实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.Delete(Shmzh.Components.SystemComponent.MenuInfo)">
            <summary>
            删除菜单实体。
            </summary>
            <param name="menuInfo">菜单实体对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.Delete(System.Int32)">
            <summary>
            删除菜单项。
            </summary>
            <param name="id">菜单项ID。</param>
            <returns>布尔类型。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.MoveTo(System.Int32,System.Int32)">
            <summary>
            转移菜单项。
            </summary>
            <param name="id">菜单项ID。</param>
            <param name="newParentId">新的父节点Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.IsExistsByType(System.Int32)">
            <summary>
            判断是否存在指定菜单类型的菜单项。
            </summary>
            <param name="typeId">菜单类型Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Menu.GetMenuParameters">
            <summary>
            获取Insert和Update命令的参数数组。
            </summary>
            <returns>Sql参数数组。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.ComponentConfiguration">
            <summary>
            组件配置信息。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.ComponentConfiguration.instance">
            <summary>
            配置对象实例。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ComponentConfiguration.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            内部使用的构造函数.
            </summary>
            <param name="componentName">组件名称</param>
            <param name="version">版本</param>
            <param name="purpose">用途</param>
            <param name="databaseConnectionString">数据库连接</param>
            <param name="logFilePath">日志文件路径</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ComponentConfiguration.#ctor(System.String,System.String)">
            <summary>
            内部使用的构造函数。
            </summary>
            <param name="componentName">组件名称。</param>
            <param name="databaseConnectionString">数据库连接字符串。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ComponentConfiguration.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ComponentConfiguration.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="componentName">组件名称。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ComponentConfiguration.Instance(System.String)">
            <summary>
            全局访问点
            </summary>
            <param name="thisComponentName">组件名称</param>
            <returns>ComponentConfiguration</returns>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ComponentConfiguration.ComponentName">
            <summary>
            组件名称.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ComponentConfiguration.Version">
            <summary>
            组件版本
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ComponentConfiguration.Purpose">
            <summary>
            组件用途
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ComponentConfiguration.DatabaseConnectionString">
            <summary>
            组件对应的数据库连接字符串
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ComponentConfiguration.LogFilePath">
            <summary>
            组件所产生的日志文件路径
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.ComponentConfigurations">
            <summary>
            ComponentConfigurations 的摘要说明。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ComponentConfigurations.LoadConfig">
            <summary>
            加载配置文件.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ComponentConfigurations.Instance">
            <summary>
            组件配置信息集合体.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ComponentConfigurations.ConfigFilePath">
            <summary>
            组件配置文件的路径.
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OwnedRoleInfo">
            <summary>
            角色与访问对象的关系实体。
            </summary>
            <remarks>主要为知识库所用，知识库条目和角色之间的关系。</remarks>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OwnedRoleInfo.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OwnedRoleInfo.#ctor(System.Int16,System.String,System.String)">
            <summary>
            构造函数。
            </summary>
            <param name="roleCode">角色编号。</param>
            <param name="checkCode">知识库条目ID。</param>
            <param name="type">知识库条目类型。</param>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OwnedRoleInfo.RoleCode">
            <summary>
            角色编号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OwnedRoleInfo.CheckCode">
            <summary>
            知识库条目ID(非KM系统无意义)。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OwnedRoleInfo.Type">
            <summary>
            知识库条目类型(非KM系统无意义)
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GrantInfo">
            <summary>
            组信息
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GrantInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GrantInfo.ID">
            <summary>
            PKID
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GrantInfo.Grantor">
            <summary>
            授权人用户名。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GrantInfo.GrantorName">
            <summary>
            授权人姓名
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GrantInfo.GrantorDept">
            <summary>
            授权人所属部门名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GrantInfo.Embracer">
            <summary>
            被授权人用户名。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GrantInfo.EmbracerName">
            <summary>
            被授权人姓名。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GrantInfo.EmbracerDept">
            <summary>
            被授权人所属部门名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GrantInfo.IsLeaf">
            <summary>
            是否是是最终被授权者。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GrantInfo.CreateTime">
            <summary>
            授权记录的创建时间。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GrantInfo.EffectTime">
            <summary>
            授权记录的起效时间。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GrantInfo.InvalidTime">
            <summary>
            授权记录的失效时间。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GrantInfo.IsValid">
            <summary>
            是否有效。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GrantInfo.LoginIsValid">
            <summary>
            授权人登录后授权记录自动失效。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GrantInfo.Reason">
            <summary>
            授权原因。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleInfo">
            <summary>
            部门信息实体。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleInfo.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleInfo.RoleCode">
            <summary>
            角色编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleInfo.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleInfo.IsValid">
            <summary>
            是否有效。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleInfo.Remark">
            <summary>
            角色描述。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleInfo.ProductCode">
            <summary>
            产品编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleInfo.SerialNo">
            <summary>
            顺序号。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.MenuInfo">
            <summary>
            组信息
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.MenuInfo.#ctor">
            <summary>
             默认构造函数。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.MenuInfo.#ctor(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="id">用户名。</param>
            <param name="name">IP地址。</param>
            <param name="title">在线状态。</param>
            <param name="productId">心跳时间。</param>
            <param name="rightCode">权限编码。</param>
            <param name="parentId">上级菜单Id。</param>
            <param name="order">序号。</param>
            <param name="level">层次。</param>
            <param name="urlType">URL类型</param>
            <param name="url">URL地址。</param>
            <param name="imageUrl">图片地址。</param>
            <param name="cssClass">css样式。</param>
            <param name="isEnable">是否有效。</param>
            <param name="hasSubMenu">是否有子菜单。</param>
            <param name="type">菜单类型。</param>
            <param name="remark">备注。</param>
            <param name="checkCode">检查对象标识。</param>
            <param name="objType">检查对象类型。</param>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.ID">
            <summary>
            菜单ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.Name">
            <summary>
            菜单名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.ProductID">
            <summary>
            所属产品ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.RightCode">
            <summary>
            权限编号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.ParentID">
            <summary>
            上级菜单ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.Order">
            <summary>
            顺序号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.Level">
            <summary>
            层次。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.URLType">
            <summary>
            URL类型。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.URL">
            <summary>
            URL。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.ImageURL">
            <summary>
            图片地址。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.CSSClass">
            <summary>
            CSS样式。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.IsEnable">
            <summary>
            是否有效。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.HasSubMenu">
            <summary>
            是否有子菜单。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.Type">
            <summary>
            菜单类型。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.Remark">
            <summary>
            备注。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.CheckCode">
            <summary>
            检查对象标识。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuInfo.ObjType">
            <summary>
            标识对象类型。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RightInfo">
            <summary>
            权限代码信息对象.
            </summary>
            <remarks>对应于数据库PubData库中mySystemRights表的记录.</remarks>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RightInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RightInfo.OldRightCode">
            <summary>
            原始权限编号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RightInfo.RightCode">
            <summary>
            权限编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RightInfo.RightName">
            <summary>
            权限名称名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RightInfo.IsValid">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RightInfo.Remark">
            <summary>
            权限描述
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RightInfo.ProductCode">
            <summary>
            所属产品代码
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RightInfo.RightCatCode">
            <summary>
            权限分类
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OperationLogInfo">
            <summary>
            系统的操作日志实体。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OperationLogInfo.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OperationLogInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OperationLogInfo.UserName">
            <summary>
            操作人用户名。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OperationLogInfo.OpTime">
            <summary>
            操作时间。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OperationLogInfo.ProductCode">
            <summary>
            产品编号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OperationLogInfo.OpType">
            <summary>
            操作类型。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OperationLogInfo.OpDesc">
            <summary>
            操作描述。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.MemoryInfo">
            LayoutKind.Automatic：为了提高效率允许运行态对类型成员重新排序
            注意：永远不要使用这个选项来调用不受管辖的动态链接库函数。
            LayoutKind.Explicit：对每个域按照FieldOffset属性对类型成员排序
            LayoutKind.Sequential：对出现在受管辖类型定义地方的不受管辖内存中的类型成员进行排序。
            <summary>
            定义内存的信息结构
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.MemoryInfo.dwLength">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.MemoryInfo.dwMemoryLoad">
            <summary>
            已经使用的内存
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.MemoryInfo.dwTotalPhys">
            <summary>
            总物理内存大小
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.MemoryInfo.dwAvailPhys">
            <summary>
            可用物理内存大小
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.MemoryInfo.dwTotalPageFile">
            <summary>
            交换文件总大小
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.MemoryInfo.dwAvailPageFile">
            <summary>
            可用交换文件大小
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.MemoryInfo.dwTotalVirtual">
            <summary>
            总虚拟内存大小
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.MemoryInfo.dwAvailVirtual">
            <summary>
            可用虚拟内存大小
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.Company">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.#ctor">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.Insert(Shmzh.Components.SystemComponent.CompanyService.CompanyInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.InsertAsync(Shmzh.Components.SystemComponent.CompanyService.CompanyInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.InsertAsync(Shmzh.Components.SystemComponent.CompanyService.CompanyInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.Update(Shmzh.Components.SystemComponent.CompanyService.CompanyInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.UpdateAsync(Shmzh.Components.SystemComponent.CompanyService.CompanyInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.UpdateAsync(Shmzh.Components.SystemComponent.CompanyService.CompanyInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.Delete(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.DeleteAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.DeleteAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.IsExistCode(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.IsExistCodeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.IsExistCodeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.IsExistName(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.IsExistNameAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.IsExistNameAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.GetAll">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.GetAllAsync">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.GetAllAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.GetAllAvalible">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.GetAllAvalibleAsync">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.GetAllAvalibleAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.GetByCode(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.GetByCodeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.GetByCodeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.GetDefault">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.GetDefaultAsync">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.GetDefaultAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyService.Company.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.CompanyService.Company.InsertCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.CompanyService.Company.UpdateCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.CompanyService.Company.DeleteCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.CompanyService.Company.IsExistCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.CompanyService.Company.IsExistNameCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.CompanyService.Company.GetAllCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.CompanyService.Company.GetAllAvalibleCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.CompanyService.Company.GetByCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.CompanyService.Company.GetDefaultCompleted">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.CoCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.CoName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.CoEnName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.CoShortName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.ParentCo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.ParentCoName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.ArtificialPerson">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.Mgr">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.BussinessLicense">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.BussinessRange">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.CoArea">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.CoAddress">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.IsValid">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.Remark">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.CompanyInfo.IsDefault">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.InsertCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.InsertCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.InsertCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.UpdateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.UpdateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.UpdateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.DeleteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.DeleteCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.DeleteCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.IsExistCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.IsExistCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.IsExistCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.IsExistNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.IsExistNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.IsExistNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.GetAllCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.GetAllCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.GetAllCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.GetAllAvalibleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.GetAllAvalibleCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.GetAllAvalibleCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.GetByCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.GetByCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.GetByCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.GetDefaultCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyService.GetDefaultCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyService.GetDefaultCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.ISESchema">
            <summary>
            查询方案的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISESchema.Insert(Shmzh.Components.SystemComponent.SESchemaInfo)">
            <summary>
            添加查询方案。
            </summary>
            <param name="obj">查询方案实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISESchema.Update(Shmzh.Components.SystemComponent.SESchemaInfo)">
            <summary>
            修改查询方案。
            </summary>
            <param name="obj">查询方案实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISESchema.Delete(Shmzh.Components.SystemComponent.SESchemaInfo)">
            <summary>
            删除查询方案。
            </summary>
            <param name="obj">查询方案实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISESchema.Delete(System.Int32)">
            <summary>
            删除查询方案。
            </summary>
            <param name="id">查询方案Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISESchema.GetByModuleAndUser(System.String,System.String)">
            <summary>
            根据查询模块和用户获取所有查询方案集合。
            </summary>
            <param name="moduleId">查询模块Id。</param>
            <param name="userCode">用户名。</param> 
            <returns>查询方案集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISESchema.GetDefaultByModuleAndUser(System.String,System.String)">
            <summary>
            根据查询模块和用户获取默认的查询方案。
            </summary>
            <param name="moduleId">查询模块Id。</param>
            <param name="userCode">用户名。</param>
            <returns>查询方案Id。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISESchema.GetById(System.Int32)">
            <summary>
            根据id获取查询方案。
            </summary>
            <param name="id">查询方案Id</param>
            <returns>查询方案实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISESchema.IsExist(System.String,System.String,System.String)">
            <summary>
            判断查询方案名称是否已经存在。
            </summary>
            <param name="moduleId">查询模块Id。</param>
            <param name="userCode">用户名。</param>
            <param name="schemaName">查询方案名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SESchema.GetParameters">
            <summary>
            获取查询引擎的数据类型的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SESchema.ConvertToSESchemaInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成SESchemaInfo.
            </summary>
            <param name="dr">DataRow</param>
            <returns>查询方案实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HelpDA">
            <summary>
            HelpDA 的摘要说明。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HelpDA.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HelpDA.AddHelpInfo(Shmzh.Components.SystemComponent.HelpInfo)">
            <summary>
            增加帮助信息.
            </summary>
            <param name="helpInfo">帮助信息实体.</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HelpDA.UpdateHelpInfo(Shmzh.Components.SystemComponent.HelpInfo)">
            <summary>
            修改帮助信息.
            </summary>
            <param name="helpInfo">帮助信息实体.</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HelpDA.GetHelpInfoByCode(System.String)">
            <summary>
            根据编号获取帮助信息.
            </summary>
            <param name="code">帮助编号</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HelpDA.GetAllHelpsByParentCode(System.String)">
            <summary>
            根据父编号获取所有子节点帮助.
            </summary>
            <param name="parentCode">父编号</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HelpDA.DeleteHelpInfo(System.String)">
            <summary>
            根据帮助编号删除帮助信息
            </summary>
            <param name="code">帮助编号</param>
            <returns>bool</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.Company">
            <summary>
            公司信息的SQL Server 的数据访问对象。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Company.Insert(Shmzh.Components.SystemComponent.CompanyInfo)">
            <summary>
            添加公司。
            </summary>
            <param name="companyInfo">公司实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Company.Update(Shmzh.Components.SystemComponent.CompanyInfo)">
            <summary>
            修改公司。
            </summary>
            <param name="companyInfo">公司实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Company.Delete(Shmzh.Components.SystemComponent.CompanyInfo)">
            <summary>
            删除公司。
            </summary>
            <param name="companyInfo">公司实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Company.Delete(System.String)">
            <summary>
            删除公司。
            </summary>
            <param name="coCode">公司编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Company.IsExistCode(System.String)">
            <summary>
            判断公司编号是否已经存在。
            </summary>
            <param name="coCode">公司编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Company.IsExistName(System.String)">
            <summary>
            是否已经存在组名称。
            </summary>
            <param name="coCnName">公司名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Company.GetAll">
            <summary>
            获取所有公司。
            </summary>
            <returns>公司集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Company.GetAllAvalible">
            <summary>
            获取所有有效的公司。
            </summary>
            <returns>公司集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Company.GetByCode(System.String)">
            <summary>
            根据公司编号获取公司。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>公司实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Company.GetDefault">
            <summary>
            获取默认的公司。
            </summary>
            <returns>公司信息。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Company.GetCompanyParameters">
            <summary>
            获取组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Company.ConvertToCompanyInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.MenuTypeInfo">
            <summary>
            菜单类型实体。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.MenuTypeInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuTypeInfo.ID">
            <summary>
            菜单类型ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuTypeInfo.Name">
            <summary>
            菜单类型名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuTypeInfo.IsUsedByFrameWork">
            <summary>
            是否是框架使用的类型。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.MenuTypeInfo.Remark">
            <summary>
            菜单类型的说明。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessHelper">
            <summary>
            Access的数据访问帮助类。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.PrepareCommand(System.Data.OleDb.OleDbCommand,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction,System.String,System.Data.OleDb.OleDbParameter[],System.Boolean@)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="connection"></param>
            <param name="transaction"></param>
            <param name="commandText"></param>
            <param name="commandParameters"></param>
            <param name="mustCloseConnection"></param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.AttachParameters(System.Data.OleDb.OleDbCommand,System.Data.OleDb.OleDbParameter[])">
            <summary>
            
            </summary>
            <param name="command"></param>
            <param name="commandParameters"></param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteNonQuery(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="connectionstring"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteNonQuery(System.String,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="commandText"></param>
            <param name="commandParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteNonQuery(System.Data.OleDb.OleDbConnection,System.String)">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteNonQuery(System.Data.OleDb.OleDbConnection,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <param name="commandText"></param>
            <param name="commandParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteNonQuery(System.Data.OleDb.OleDbTransaction,System.String)">
            <summary>
            
            </summary>
            <param name="transaction"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteNonQuery(System.Data.OleDb.OleDbTransaction,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            
            </summary>
            <param name="transaction"></param>
            <param name="commandText"></param>
            <param name="commandParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteScalar(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteScalar(System.String,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="commandText"></param>
            <param name="commandParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteScalar(System.Data.OleDb.OleDbConnection,System.String)">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteScalar(System.Data.OleDb.OleDbConnection,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <param name="commandText"></param>
            <param name="commandParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteScalar(System.Data.OleDb.OleDbTransaction,System.String)">
            <summary>
            
            </summary>
            <param name="transaction"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteScalar(System.Data.OleDb.OleDbTransaction,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            
            </summary>
            <param name="transaction"></param>
            <param name="commandText"></param>
            <param name="commandParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteReader(System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction,System.String,System.Data.OleDb.OleDbParameter[],Shmzh.Components.SystemComponent.AccessHelper.OleDbConnectionOwnership)">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <param name="transaction"></param>
            <param name="commandText"></param>
            <param name="commandParameters"></param>
            <param name="connectionOwnership"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteReader(System.Data.OleDb.OleDbConnection,System.String)">
            <summary>
            </summary>
            <param name="connection"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteReader(System.Data.OleDb.OleDbConnection,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            </summary>
            <param name="connection"></param>
            <param name="commandText"></param>
            <param name="commandParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteReader(System.Data.OleDb.OleDbTransaction,System.String)">
            <summary>
            </summary>
            <param name="transaction"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteReader(System.Data.OleDb.OleDbTransaction,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            </summary>
            <param name="transaction"></param>
            <param name="commandText"></param>
            <param name="commandParameters"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteReader(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteReader(System.String,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="commandText"></param>
            <param name="commandParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteDataset(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteDataset(System.String,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="commandText"></param>
            <param name="commandParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteDataset(System.Data.OleDb.OleDbConnection,System.String)">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteDataset(System.Data.OleDb.OleDbConnection,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <param name="commandText"></param>
            <param name="commandParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteDataset(System.Data.OleDb.OleDbTransaction,System.String)">
            <summary>
            
            </summary>
            <param name="transaction"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelper.ExecuteDataset(System.Data.OleDb.OleDbTransaction,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            
            </summary>
            <param name="transaction"></param>
            <param name="commandText"></param>
            <param name="commandParameters"></param>
            <returns></returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessHelper.OleDbConnectionOwnership">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessHelper.OleDbConnectionOwnership.Internal">
            <summary>
            连接对象是由SqlHelper管理的
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessHelper.OleDbConnectionOwnership.External">
            <summary>
            连接对象是由调用者管理的
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessHelperParameterCache">
            <summary>
            SqlHelperParameterCache provides functions to leverage a static cache of procedure parameters, and the
            ability to discover parameters for stored procedures at run-time.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelperParameterCache.DiscoverSpParameterSet(System.Data.OleDb.OleDbConnection,System.String,System.Boolean)">
            <summary>
            Resolve at run time the appropriate set of SqlParameters for a stored procedure
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">Whether or not to include their return value parameter</param>
            <returns>The parameter array discovered.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelperParameterCache.CloneParameters(System.Data.OleDb.OleDbParameter[])">
            <summary>
            Deep copy of cached SqlParameter array
            </summary>
            <param name="originalParameters">原始参数。</param>
            <returns>SqlParameter[]</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelperParameterCache.CacheParameterSet(System.String,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            Add parameter array to the cache
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters to be cached</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelperParameterCache.GetCachedParameterSet(System.String,System.String)">
            <summary>
            Retrieve a parameter array from the cache
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An array of SqlParamters</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelperParameterCache.GetSpParameterSet(System.String,System.String)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelperParameterCache.GetSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelperParameterCache.GetSpParameterSet(System.Data.OleDb.OleDbConnection,System.String)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelperParameterCache.GetSpParameterSet(System.Data.OleDb.OleDbConnection,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessHelperParameterCache.GetSpParameterSetInternal(System.Data.OleDb.OleDbConnection,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.OperationLog">
            <summary>
            公司信息的SQL Server 的数据访问对象。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IOperationLog">
            <summary>
            操作日志的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOperationLog.Insert(Shmzh.Components.SystemComponent.OperationLogInfo)">
            <summary>
            添加操作日志。
            </summary>
            <param name="obj">操作日志实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOperationLog.Insert(Shmzh.Components.SystemComponent.OperationLogInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加操作日志
            </summary>
            <param name="obj">操作日志实体.</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOperationLog.GetByTimeAndOpType(System.DateTime,System.DateTime,System.String)">
            <summary>
            根据指定的时间范围和操作类型来获取操作日志列表。
            </summary>
            <param name="beginTime">开始时间。</param>
            <param name="endTime">结束时间。</param>
            <param name="opType">操作类型。</param>
            <returns>操作日志列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOperationLog.GetByTimeAndOpTypeAndProductCode(System.DateTime,System.DateTime,System.String,System.Int16)">
            <summary>
            根据指定的时间范围和操作类型、产品编号来获取操作日志列表
            </summary>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="opType">操作类型</param>
            <param name="productCode">产品编号</param>
            <returns>操作日志列表</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOperationLog.GetTop100(System.String)">
            <summary>
            根据指定的操作类型获取最新的100条操作记录。
            </summary>
            <param name="opType">操作类型。</param>
            <returns>操作日志列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOperationLog.GetTop100(System.String,System.Int16)">
            <summary>
            根据指定的操作类型获取最新的100条操作记录。
            </summary>
            <param name="opType">操作类型</param>
            <param name="productCode">产品编号</param>
            <returns>操作日志列表</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOperationLog.GetByTimeAndOpTypeAndOpDesc(System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            根据指定的开始时间、结束时间、操作类型、操作描述等条件进行查询。
            </summary>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="opType">操作类型</param>
            <param name="likeOpDesc">操作描述。</param>
            <returns>操作日志列表</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IOperationLog.GetByTimeAndOpTypeAndProductCodeAndOpDesc(System.DateTime,System.DateTime,System.String,System.Int16,System.String)">
            <summary>
            根据指定的开始时间、结束时间、操作类型、产品编号、操作描述等条件进行查询。
            </summary>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="opType">操作类型</param>
            <param name="productCode">产品编号</param>
            <param name="likeOpDesc">操作描述。</param>
            <returns>操作日志列表</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OperationLog.ConvertToOperationLogInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成OperationLogInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>操作记录实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OperationLog.Insert(Shmzh.Components.SystemComponent.OperationLogInfo)">
            <summary>
            添加操作日志。
            </summary>
            <param name="obj">操作日志实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OperationLog.Insert(Shmzh.Components.SystemComponent.OperationLogInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加操作日志
            </summary>
            <param name="obj">操作日志实体.</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OperationLog.GetByTimeAndOpType(System.DateTime,System.DateTime,System.String)">
            <summary>
            根据指定的时间范围和操作类型来获取操作日志列表。
            </summary>
            <param name="beginTime">开始时间。</param>
            <param name="endTime">结束时间。</param>
            <param name="opType">操作类型。</param>
            <returns>操作日志列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OperationLog.GetByTimeAndOpTypeAndProductCode(System.DateTime,System.DateTime,System.String,System.Int16)">
            <summary>
            根据指定的时间范围和操作类型、产品编号来获取操作日志列表
            </summary>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="opType">操作类型</param>
            <param name="productCode">产品编号</param>
            <returns>操作日志列表</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OperationLog.GetTop100(System.String)">
            <summary>
            根据指定的操作类型获取最新的100条操作记录。
            </summary>
            <param name="opType">操作类型。</param>
            <returns>操作日志列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OperationLog.GetTop100(System.String,System.Int16)">
            <summary>
            根据指定的操作类型获取最新的100条操作记录。
            </summary>
            <param name="opType">操作类型</param>
            <param name="productCode">产品编号</param>
            <returns>操作日志列表</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OperationLog.GetByTimeAndOpTypeAndOpDesc(System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            根据指定的开始时间、结束时间、操作类型、操作描述等条件进行查询。
            </summary>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="opType">操作类型</param>
            <param name="likeOpDesc">操作描述。</param>
            <returns>操作日志列表</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.OperationLog.GetByTimeAndOpTypeAndProductCodeAndOpDesc(System.DateTime,System.DateTime,System.String,System.Int16,System.String)">
            <summary>
            根据指定的开始时间、结束时间、操作类型、产品编号、操作描述等条件进行查询。
            </summary>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="opType">操作类型</param>
            <param name="productCode">产品编号</param>
            <param name="likeOpDesc">操作描述。</param>
            <returns>操作日志列表</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupUser.GetParameters">
            <summary>
            获取组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupUser.ConvertToGroupUserInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupUserInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupUser.Insert(Shmzh.Components.SystemComponent.GroupUserInfo)">
            <summary>
            添加组用户。
            </summary>
            <param name="groupUserInfo">组用户。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupUser.Insert(Shmzh.Components.SystemComponent.GroupUserInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加组用户。
            </summary>
            <param name="obj">组用户实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupUser.Insert(System.Int16,System.String)">
            <summary>
            批量添加组用户。
            </summary>
            <param name="groupCode">组编号。</param>
            <param name="userNames">用户名拼接字符串。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupUser.Delete(Shmzh.Components.SystemComponent.GroupUserInfo)">
            <summary>
            删除组用户。
            </summary>
            <param name="groupUserInfo">组用户。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupUser.Delete(Shmzh.Components.SystemComponent.GroupUserInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除组用户。
            </summary>
            <param name="groupUserInfo">组用户实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupUser.Delete(System.String)">
            <summary>
             根据指定的用户名来删除组和用户的关系记录。
            </summary>
            <param name="userCode">用户名。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupUser.Delete(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据指定的用户名来删除组和用户的关系记录。
            </summary>
            <param name="userCode">用户名。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupUser.GetAll">
            <summary>
            获取所有的组用户集合.
            </summary>
            <returns>组用户集合.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupUser.GetByGroupCode(System.Int16)">
            <summary>
            根据组编号来获取组用户集合。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>组用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupUser.GetByUserCode(System.String)">
            <summary>
            根据用户名获取组用户集合。
            </summary>
            <param name="userCode">用户名。</param>
            <returns>组用户集合。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.TB_UserCat">
            <summary>
            用户分类的SQL Server 的数据访问对象。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_UserCat.Insert(Shmzh.Components.SystemComponent.Model.TB_UserCatInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加用户分类。
            </summary>
            <param name="obj">用户实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_UserCat.Update(Shmzh.Components.SystemComponent.Model.TB_UserCatInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改用户分类。
            </summary>
            <param name="obj">用户实体。</param>
            <param name="trans">事务对象</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_UserCat.Delete(Shmzh.Components.SystemComponent.Model.TB_UserCatInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除用户分类实体。
            </summary>
            <param name="obj">用户分类实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_UserCat.Delete(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            删除用户分类实体。
            </summary>
            <param name="id">用户分类Id。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_UserCat.GetByUserCatName(System.String)">
            <summary>
            根据用户分类名称获取用户分类信息。
            </summary>
            <param name="userCatName">用户分类名称。</param>
            <returns>用户分类实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGMEMLK">
            <summary>
            工作流中组织机构与人员的关系的SQL Serveer的数据访问对象。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.ITB_ORGMEMLK">
            <summary>
            工作流组织机构的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGMEMLK.Insert(Shmzh.Components.SystemComponent.TB_ORGMEMLKInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加东兰工作流部门信息。
            </summary>
            <param name="obj">配置信息实体。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGMEMLK.Update(Shmzh.Components.SystemComponent.TB_ORGMEMLKInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改东兰工作流部门信息。
            </summary>
            <param name="obj">配置信息实体。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGMEMLK.Delete(Shmzh.Components.SystemComponent.TB_ORGMEMLKInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流部门信息。
            </summary>
            <param name="obj">配置信息实体。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGMEMLK.Delete(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流部门信息。
            </summary>
            <param name="lnkId">部门key。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGMEMLK.GetALL">
            <summary>
            获取所有记录。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGMEMLK.GetAllAvalible">
            <summary>
            获取所有有效记录。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGMEMLK.GetByLnkId(System.Int32)">
            <summary>
            根据名称获取组织机构。
            </summary>
            <param name="lnkId">名称。</param>
            <returns>组织机构。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGMEMLK.GetByOrgIdAndUserId(System.Int32,System.Int32)">
            <summary>
            根据组织机构Id和用户Id获取记录。
            </summary>
            <param name="orgId">组织机构Id。</param>
            <param name="userId">用户Id。</param>
            <returns>组织机构与用户关系实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_ORGMEMLK.GetByUserId(System.Int32)">
            <summary>
            根据用户Id获取记录。
            </summary>
            <param name="userId">用户Id。</param>
            <returns>组织机构与用户关系实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGMEMLK.Insert(Shmzh.Components.SystemComponent.TB_ORGMEMLKInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加东兰工作流部门信息。
            </summary>
            <param name="obj">配置信息实体。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGMEMLK.Update(Shmzh.Components.SystemComponent.TB_ORGMEMLKInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改东兰工作流部门信息。
            </summary>
            <param name="obj">配置信息实体。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGMEMLK.Delete(Shmzh.Components.SystemComponent.TB_ORGMEMLKInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流部门信息。
            </summary>
            <param name="obj">配置信息实体。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGMEMLK.Delete(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流部门信息。
            </summary>
            <param name="lnkId">部门key。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGMEMLK.GetALL">
            <summary>
            获取所有记录。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGMEMLK.GetAllAvalible">
            <summary>
            获取所有有效记录。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGMEMLK.GetByLnkId(System.Int32)">
            <summary>
            根据名称获取组织机构。
            </summary>
            <param name="lnkId">名称。</param>
            <returns>组织机构。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGMEMLK.GetByOrgIdAndUserId(System.Int32,System.Int32)">
            <summary>
            根据组织机构Id和用户Id获取记录。
            </summary>
            <param name="orgId">组织机构Id。</param>
            <param name="userId">用户Id。</param>
            <returns>组织机构与用户关系实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_ORGMEMLK.GetByUserId(System.Int32)">
            <summary>
            根据用户Id获取记录。
            </summary>
            <param name="userId">用户Id。</param>
            <returns>组织机构与用户关系实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.I_SD_MessageType">
            <summary>
            消息记录的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_MessageType.Insert(Shmzh.Components.SystemComponent.SD_MessageTypeInfo)">
            <summary>
            添加消息记录。
            </summary>
            <param name="messageTypeInfo">消息记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_MessageType.Update(Shmzh.Components.SystemComponent.SD_MessageTypeInfo)">
            <summary>
            修改消息记录实体。
            </summary>
            <param name="messageTypeInfo">消息记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_MessageType.Delete(Shmzh.Components.SystemComponent.SD_MessageTypeInfo)">
            <summary>
            删除消息类型。
            </summary>
            <param name="messageTypeInfo">消息类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_MessageType.GetALL">
            <summary>
            获取所有的消息类型。
            </summary>
            <returns>消息类型集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_MessageType.GetById(System.String)">
            <summary>
            根据ID获取消息类型。
            </summary>
            <param name="id">消息类型ID。</param>
            <returns>消息类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_MessageType.Move(System.String,System.Byte)">
            <summary>
            消息类型排序号调整。
            </summary>
            <param name="id">消息类型Id。</param>
            <param name="opType">0:上移,1:下移。</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_MessageType.IsAllowDelete(System.String)">
            <summary>
            验证消息类型是否允许删除。
            </summary>
            <param name="typeId">消息类型Id。</param>
            <returns>bool</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.Enum.ProductEnum">
            <summary>
            产品枚举类。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.ProductEnum.KM">
            <summary>
            知识库。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.ProductEnum.MM">
            <summary>
            物料管理。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.ProductEnum.DOOR">
            <summary>
            门禁巡检。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.ProductEnum.PRD4">
            <summary>
            产品4.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.ProductEnum.PRD5">
            <summary>
            产品5.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.ProductEnum.PRD6">
            <summary>
            产品6.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.ProductEnum.PRD7">
            <summary>
            产品7.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.ProductEnum.PRD8">
            <summary>
            产品8.
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.ProductEnum.PRD9">
            <summary>
            产品9.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.Enum.ProductEnum.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.Role">
            <summary>
            角色的SQL Server数据访问对象。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Role.SQL_INSERT_ROLE">
            <summary>
            添加角色记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Role.SQL_UPDATE_ROLE">
            <summary>
            修改角色记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Role.SQL_DELETE_ROLES">
            <summary>
            删除角色记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Role.SQL_SELECT_ALL_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取所有角色记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Role.SQL_SELECT_ALLAVALIBLE_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取所有有效的角色记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Role.SQL_SELECT_BY_NAME_PRODUCTCODE">
            <summary>
            根据角色名称和产品编号获取角色记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Role.SQL_SELECT_BY_CODE">
            <summary>
            根据角色编号获取角色记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Role.PARM_ROLECODE">
            <summary>
            角色编号。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Role.PARM_ROLENAME">
            <summary>
            角色名称。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Role.PARM_ISVALID">
            <summary>
            是否有效。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Role.PARM_REMARK">
            <summary>
            角色描述。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Role.PARM_PRODUCTCODE">
            <summary>
            产品编号。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Role.GetRoleParameters">
            <summary>
            获取角色参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Role.ConvertToRoleInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成RoleInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>角色实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Role.Insert(Shmzh.Components.SystemComponent.RoleInfo)">
            <summary>
            添加角色。
            </summary>
            <param name="roleInfo">角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Role.Update(Shmzh.Components.SystemComponent.RoleInfo)">
            <summary>
            修改角色。
            </summary>
            <param name="roleInfo">角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Role.Delete(Shmzh.Components.SystemComponent.RoleInfo)">
            <summary>
            删除角色。
            </summary>
            <param name="roleInfo">角色实体。</param>
            <returns>bool</returns>
            <remarks>联动删除角色权限、用户角色、组角色。</remarks>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Role.Delete(System.Int16)">
            <summary>
            删除角色。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>bool</returns>
            <remarks>联动删除角色权限、用户角色、组角色。</remarks>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Role.IsExist(System.Int16)">
            <summary>
            根据角色编号判断是否已经在数据库中存在。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Role.IsExist(System.String,System.Int16)">
            <summary>
            根据产品编号和角色名称判断是否已经在数据库中存在。
            </summary>
            <param name="roleName">角色名称。</param>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Role.GetAllByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有的角色。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Role.GetAllAvalibleByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有的有效角色。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Role.GetByCode(System.Int16)">
            <summary>
            根据角色编号获取角色实体。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>角色实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.RoleRight.Insert(Shmzh.Components.SystemComponent.RoleRightInfo)">
            <summary>
            添加角色权限。
            </summary>
            <param name="roleRightInfo">用户角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.RoleRight.Insert(System.Int16,System.String)">
            <summary>
            批量添加角色权限。
            </summary>
            <param name="roleCode">角色编号。</param>
            <param name="rightCodes">权限编码拼接字符串。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.RoleRight.Delete(Shmzh.Components.SystemComponent.RoleRightInfo)">
            <summary>
            删除角色权限。
            </summary>
            <param name="roleRightInfo">角色权限实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.RoleRight.Delete(System.Int16)">
            <summary>
            根据角色编号删除角色权限关系。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.RoleRight.GetAll">
            <summary>
            获取所有的角色权限关系。
            </summary>
            <returns>角色权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.RoleRight.GetAllAvalible">
            <summary>
            获取所有有效的角色权限关系。
            </summary>
            <returns>角色权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.RoleRight.GetByRoleCode(System.Int16)">
            <summary>
            根据角色编号获取角色权限。
            </summary>
            <returns>角色权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.RoleRight.GetByRightCode(System.Int16)">
            <summary>
            根据权限编号获取角色权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <returns>角色权限集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.RoleRight.GetByProductCodeAndUserName(System.Int16,System.String)">
            <summary>
            根据用户名获取角色权限集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="userName">用户名。</param>
            <returns>角色权限集合。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.#ctor">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.Insert(Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatusInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.InsertAsync(Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatusInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.InsertAsync(Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatusInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.Update(Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatusInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.UpdateAsync(Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatusInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.UpdateAsync(Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatusInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.Delete(Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatusInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.DeleteAsync(Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatusInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.DeleteAsync(Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatusInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetByUserNameAndIPAddress(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetByUserNameAndIPAddressAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetByUserNameAndIPAddressAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetByUserName(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetByUserNameAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetByUserNameAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetByIPAddress(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetByIPAddressAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetByIPAddressAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetOnlineUser">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetOnlineUserAsync">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetOnlineUserAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.InsertCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.UpdateCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.DeleteCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetByUserNameAndIPAddressCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetByIPAddressCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatus.GetOnlineUserCompleted">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatusInfo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatusInfo.UserName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatusInfo.IPAddress">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatusInfo.Status">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusService.OnlineStatusInfo.BeatTime">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.InsertCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.InsertCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusService.InsertCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.UpdateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.UpdateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusService.UpdateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.DeleteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.DeleteCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusService.DeleteCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.GetByUserNameAndIPAddressCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.GetByUserNameAndIPAddressCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusService.GetByUserNameAndIPAddressCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.GetByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.GetByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusService.GetByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.GetByIPAddressCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.GetByIPAddressCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusService.GetByIPAddressCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.GetOnlineUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusService.GetOnlineUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusService.GetOnlineUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.User">
            <summary>
            用户对象的SQLServer数据库的数据访问对象。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_DELETE_USER">
            <summary>
            删除用户记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_INSERT_USER">
            <summary>
            添加用户记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_UPDATE_USER">
             <summary>
            修改用户记录的SQL语句。
             </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_ALL_BY_COMPANY">
            <summary>
            根据公司编号获取所有用户或员工。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_ALL_USER_BY_COMPANY">
            <summary>
            根据公司编号获取所有的用户。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_ALL_EMP_BY_COMPANY">
            <summary>
            根据公司编号获取所有的员工。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_INNERUSER_BY_COMPANY">
            <summary>
            根据公司编号获取所有的内部用户。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_ALL_EMP_BY_COMPANY_DEPT_WITHCHILD">
            <summary>
            根据公司编号和部门编号获取所有的员工(包括子部门）。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_ALL_EMP_BY_COMPANY_DEPT">
            <summary>
            根据公司编号和部门编号获取所有的员工。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_ALL_USER_BY_COMPANY_DEPT_WITHCHILID">
            <summary>
            根据公司编号和部门编号获取所有的用户（包括子部门。）
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_ALL_USER_BY_COMPANY_DEPT">
            <summary>
            根据公司编号和部门编号获取所有的用户。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_ALL_BY_COMPANY_DEPT_WITHCHILD">
            <summary>
            根据公司编号和部门编号获取所有的员工和用户（包括子部门）。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_ALL_BY_COMPANY_DEPT">
            <summary>
            根据公司编号和部门编号获取所有的用户和员工。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_ALL_USER_BY_GROUPCODE">
            <summary>
            根据组编号获取所有的用户。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_BY_ID">
            <summary>
            根据ID获取用户的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_USER_BY_EMPCODE">
            <summary>
            根据工号获取用户的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_USER_BY_COMPANYCODE_EMPCODE">
            <summary>
            根据公司编号和工号获取用户的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_USER_BY_COMPANYCODE_LOGINNAME">
            <summary>
            根据公司编号和用户名获取用户的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_USER_BY_LOGINNAME">
            <summary>
            根据登录名获取用户的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_SELECT_USER_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取用户的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_HASRIGHT_BY_RIGHTCODE">
            <summary>
            根据权限编号判断用户是否拥有权限的SQl语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_HASRIGHT_BY_RIGHTCODE_CHECKCODE_TYPE">
            <summary>
            根据权限编号和知识库项目ID和类型来判断用户是否对知识库项目拥有权限的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.User.SQL_ISUNMANAGED_BY_CHECKCODE_TYPE">
            <summary>
            判断知识库条目是否是不受管制的SQL语句。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetUserParameters">
            <summary>
            获取Insert和Update命令的参数数组。
            </summary>
            <returns>Sql参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.ConvertToUserInfo(System.Data.IDataRecord)">
            <summary>
            将SqlDataReader转换为TemplateInfo实体。
            </summary>
            <param name="dr">DataReader</param>
            <returns>模板实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.Get_IsUnManaged_Parameters">
            <summary>
            获取检查文章或目录对象是否是不受管制的SQL语句的参数数组。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.Get_HasRight_By_RightCode_Parameters">
            <summary>
            获取根据权限码判断是否拥有权限的SQL语句的参数数组。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.Get_HasRight_By_RightCode_CheckCode_Type_Parameters">
            <summary>
            获取根据权限码判断是否拥有权限的SQL语句的参数数组。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.CreatePasswordHash(System.String,System.String)">
            <summary>
            根据原始口令和附加码对口令进行哈希.
            </summary>
            <param name="pwd">string:口令</param>
            <param name="salt">string:附加码</param>
            <returns>经过哈希过的口令.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.Insert(Shmzh.Components.SystemComponent.UserInfo)">
            <summary>
            添加用户。
            </summary>
            <param name="userInfo">用户实体对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.Insert(Shmzh.Components.SystemComponent.UserInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.Update(Shmzh.Components.SystemComponent.UserInfo)">
            <summary>
            更改用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.Update(Shmzh.Components.SystemComponent.UserInfo,System.Data.Common.DbTransaction)">
            <summary>
            更改用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.Delete(Shmzh.Components.SystemComponent.UserInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.Delete(Shmzh.Components.SystemComponent.UserInfo)">
            <summary>
            删除用户。
            </summary>
            <param name="userInfo">用户对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.Delete(System.Int32)">
            <summary>
            删除用户实体。
            </summary>
            <param name="id">用户id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.Delete(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            删除用户实体。
            </summary>
            <param name="id">用户Id。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetById(System.Int32)">
            <summary>
            根据ID获取用户对象。
            </summary>
            <param name="id">用户ID。</param>
            <returns>用户对象。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetByProductCode(System.Int16)">
            <summary>
            根据产品号获取用户集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetByGroupCode(System.Int16)">
            <summary>
            根据组编号获取用户。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetAllByCompany(System.String)">
            <summary>
            根据公司编号获取所有员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetAllAvalibleByCompany(System.String)">
            <summary>
            根据公司编号获取所有有效的员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetAllUserByCompany(System.String)">
            <summary>
            根据公司编号获取所有用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetByRoleCode(System.Int16)">
            <summary>
            根据角色编号获取用户。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetInnerUserByCompany(System.String)">
            <summary>
            根据公司编号获取内部用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetAllEmployeeByCompany(System.String)">
            <summary>
            根据公司编号获取所有员工。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetAllByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取所有的员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetAllAvalibleByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取所有有效的员工和用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetAllAvalibleByCompanyAndDeptIds(System.String,System.String)">
            <summary>
            根据指定的部门编号串返回用户列表。
            </summary>
            <param name="companyCode">公司编号</param>
            <param name="deptIds">部门编号串。</param>
            <returns>用户列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetAllEmployeeByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取员工。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门的员工。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetAllUserByCompanyAndDept(System.String,System.String,System.Boolean)">
            <summary>
            根据公司编号和部门编号获取用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="deptCode">部门编号。</param>
            <param name="withChildDept">是否包括子部门的用户。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.SearchAll(System.String,System.String)">
            <summary>
            根据公司编号和输入的名称（用户名、姓名）模糊查找员工和用户。
            </summary>
            <param name="companyCode">公司编号</param>
            <param name="name">用户名、姓名</param>
            <returns>用户集合.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.SearchAllAvalible(System.String,System.String)">
            <summary>
            根据公司编号和输入的名称（用户名、姓名）模糊查找非禁用人员。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="name">用户名、姓名.</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.SearchEmp(System.String,System.String)">
            <summary>
            根据公司编号和输入的名称（用户名、姓名）模糊查找员工。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="name">用户名、姓名</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.SearchUser(System.String,System.String)">
            <summary>
            根据公司编号和名称（用户名、姓名）模糊查找用户。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="name">用户名、姓名。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetByCompanyAndLoginName(System.String,System.String)">
            <summary>
            根据公司编号和登录名获取用户信息。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="loginName">登录名。</param>
            <returns>用户。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetByCompanyAndEmpCode(System.String,System.String)">
            <summary>
            根据公司编号和工号获取用户信息。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="empCode">工号。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetByLoginName(System.String)">
            <summary>
            根据登录名获取用户信息。
            </summary>
            <param name="loginName">登录名。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetByEmpCode(System.String)">
            <summary>
            根据工号获取用户信息。
            </summary>
            <param name="empCode">工号。</param>
            <returns>用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetByMobile(System.String)">
            <summary>
            根据手机号码获取用户。
            </summary>
            <param name="mobile">手机号码。</param>
            <returns>用户。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.CreateSalt">
            <summary>
            生成密码哈希时需要的附加码,随机产生
            </summary>
            <returns>附加码</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.SetPassword(System.String,System.String)">
            <summary>
            设置口令。
            </summary>
            <param name="loginName">登录名。</param>
            <param name="pwd">原始口令。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetAllAvalibleByCompanyAndRightCode(System.String,System.Int16)">
            <summary>
            根据公司编号或权限编码获取该公司下具有该权限的用户集合。
            </summary>
            <param name="companyCode">公司编号。</param>
            <param name="rightCode">权限编号。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetBySQL(System.String)">
            <summary>
            根据SQL语句来获取用户集合。
            </summary>
            <param name="sqlStatement">SQL语句。</param>
            <returns>用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.GetDeptMgr(System.String)">
            <summary>
            通过部门编号查找部门主管工号
            </summary>
            <param name="strDeptCode"></param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.HasRight(System.Int32,System.String)">
            <summary>
            根据登录名来判断是否拥有指定的权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <param name="loginName">登录名。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.User.HasRight(System.Int32,System.String,System.String)">
            <summary>
            根据登录名和文章编号来判断是否拥有指定的权限。
            </summary>
            <param name="rightCode">权限编号。</param>
            <param name="loginName">登录名。</param>
            <param name="docCode">文章编号。</param>
            <returns>bool</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.Template">
            <summary>
            SQLServer版本的模板对象的数据访问层。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.ITemplate">
            <summary>
            模板对象的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITemplate.Insert(Shmzh.Components.SystemComponent.TemplateInfo)">
            <summary>
            添加模板记录。
            </summary>
            <param name="templateInfo">模板记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITemplate.Update(Shmzh.Components.SystemComponent.TemplateInfo)">
            <summary>
            修改模板记录。
            </summary>
            <param name="templateInfo">模板记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITemplate.Delete(Shmzh.Components.SystemComponent.TemplateInfo)">
            <summary>
            删除模板记录。
            </summary>
            <param name="templateInfo">模板记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITemplate.Delete(System.Int32)">
            <summary>
            删除模板记录。
            </summary>
            <param name="id">模板Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITemplate.GetAll">
            <summary>
            获取所有模板记录。
            </summary>
            <returns>模板记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITemplate.GetByProductCode(System.Int16)">
            <summary>
            根据产品ID获取模板记录集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>模板记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITemplate.GetById(System.Int32)">
            <summary>
            根据模板ID获取模板记录实体。
            </summary>
            <param name="id">模板ID。</param>
            <returns>模板记录实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITemplate.GetByCode(System.String)">
            <summary>
            根据模板编号获取模板记录实体。
            </summary>
            <param name="code">模板编号。</param>
            <returns>模板记录实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITemplate.IsExist(System.String)">
            <summary>
            判断模板编号是否已经存在。
            </summary>
            <param name="code">模板编号。</param>
            <returns>bool</returns>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Template.SQL_SELECT_TEMPLATES">
            <summary>
            获取所有模板记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Template.SQL_SELECT_TEMPLATES_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取模板记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Template.SQL_SELECT_TEMPLATE_BY_ID">
            <summary>
            根据模板ID获取模板记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Template.SQL_SELECT_TEMPLATE_BY_CODE">
            <summary>
            根据模板编号获取模板记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Template.SQL_INSERT_TEMPLATE">
            <summary>
            添加模板记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Template.SQL_UPDATE_TEMPLATE">
             <summary>
            修改模板记录的SQL语句。
             </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.Template.SQL_DELETE_TEMPLATE">
            <summary>
            删除模板记录。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Template.Insert(Shmzh.Components.SystemComponent.TemplateInfo)">
            <summary>
            添加模板记录。
            </summary>
            <param name="templateInfo">模板记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Template.Update(Shmzh.Components.SystemComponent.TemplateInfo)">
            <summary>
            修改模板记录实体。
            </summary>
            <param name="templateInfo">模板记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Template.Delete(Shmzh.Components.SystemComponent.TemplateInfo)">
            <summary>
            删除模板记录。
            </summary>
            <param name="templateInfo">模板记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Template.Delete(System.Int32)">
            <summary>
            根据模板ID删除模板记录。
            </summary>
            <param name="id">模板id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Template.GetAll">
            <summary>
            获取所有的模板记录。
            </summary>
            <returns>模板记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Template.GetByProductCode(System.Int16)">
            <summary>
            根据产品编号获取模板记录集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>模板记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Template.GetById(System.Int32)">
            <summary>
            根据模板ID获取模板记录实体。
            </summary>
            <param name="id">模板ID。</param>
            <returns>模板记录实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Template.GetByCode(System.String)">
            <summary>
            根据模板编号获取模板记录实体。
            </summary>
            <param name="code">模板编号。</param>
            <returns>模板记录实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Template.IsExist(System.String)">
            <summary>
            是否已经存在模板编号。
            </summary>
            <param name="code">模板编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Template.GetTemplateParameters">
            <summary>
            获取Insert和Update命令的参数数组。
            </summary>
            <returns>Sql参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.Template.ConvertToTemplateInfo(System.Data.IDataRecord)">
            <summary>
            将SqlDataReader转换为TemplateInfo实体。
            </summary>
            <param name="dr">DataReader</param>
            <returns>模板实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.ISEModule">
            <summary>
            查询模块的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEModule.Insert(Shmzh.Components.SystemComponent.SEModuleInfo)">
            <summary>
            添加查询模块。
            </summary>
            <param name="moduleInfo">查询模块实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEModule.Update(Shmzh.Components.SystemComponent.SEModuleInfo)">
            <summary>
            修改查询模块。
            </summary>
            <param name="moduleInfo">查询模块实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEModule.Delete(Shmzh.Components.SystemComponent.SEModuleInfo)">
            <summary>
            删除查询模块。
            </summary>
            <param name="moduleInfo">查询模块实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEModule.Delete(System.String)">
            <summary>
            删除查询模块。
            </summary>
            <param name="id">查询模块id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEModule.IsExist(System.String)">
            <summary>
            是否已经存在查询模块名称。
            </summary>
            <param name="id">查询模块名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEModule.GetAll">
            <summary>
            获取所有查询模块。
            </summary>
            <returns>查询模块集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEModule.GetByProduct(System.Int16)">
            <summary>
            根据产品获取查询模块集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>查询模块集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ISEModule.GetById(System.String)">
            <summary>
            根据查询模块id获取查询模块。
            </summary>
            <param name="id">查询模块id。</param>
            <returns>查询模块。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEModule.GetSEModuleParameters">
            <summary>
            获取查询模块参数。
            </summary>
            <returns>查询模块参数。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEModule.ConvertToSEModuleInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成SEModuleInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>查询模块实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.EmpState">
            <summary>
            员工状态的SQLServer的数据访问层。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.IEmpState">
            <summary>
            员工状态的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IEmpState.Insert(Shmzh.Components.SystemComponent.EmpStateInfo)">
            <summary>
            添加员工状态。
            </summary>
            <param name="empStateInfo">员工状态实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IEmpState.Update(Shmzh.Components.SystemComponent.EmpStateInfo)">
            <summary>
            修改员工状态。
            </summary>
            <param name="empStateInfo">员工状态实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IEmpState.Delete(Shmzh.Components.SystemComponent.EmpStateInfo)">
            <summary>
            删除员工状态。
            </summary>
            <param name="empStateInfo">员工状态实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IEmpState.Delete(System.String)">
            <summary>
            删除员工状态。
            </summary>
            <param name="code">员工状态代码。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IEmpState.IsExistCode(System.String)">
            <summary>
            是否已经存在员工状态编号。
            </summary>
            <param name="code">员工状态代码。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IEmpState.IsExistDescription(System.String)">
            <summary>
            是否已经存在员工状态名称
            </summary>
            <param name="description">员工状态名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IEmpState.GetAll">
            <summary>
            获取所有员工状态。
            </summary>
            <returns>ArrayList。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IEmpState.GetAllAvalible">
            <summary>
            获取所有有效的员工状态。
            </summary>
            <returns>员工状态集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.IEmpState.GetByCode(System.String)">
            <summary>
            根据员工状态编号获取员工状态。
            </summary>
            <param name="code">员工状态代码。</param>
            <returns>员工状态实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.EmpState.GetEmpStateParameters">
            <summary>
            获取组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.EmpState.ConvertToEmpStateInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.EmpState.Insert(Shmzh.Components.SystemComponent.EmpStateInfo)">
            <summary>
            添加员工状态。
            </summary>
            <param name="empStateInfo">员工状态实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.EmpState.Update(Shmzh.Components.SystemComponent.EmpStateInfo)">
            <summary>
            修改员工状态。
            </summary>
            <param name="empStateInfo">员工状态实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.EmpState.Delete(Shmzh.Components.SystemComponent.EmpStateInfo)">
            <summary>
            删除员工状态。
            </summary>
            <param name="empStateInfo">员工状态实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.EmpState.Delete(System.String)">
            <summary>
            删除员工状态。
            </summary>
            <param name="code">员工状态代码。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.EmpState.IsExistCode(System.String)">
            <summary>
            是否已经存在员工状态编号。
            </summary>
            <param name="code">员工状态代码。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.EmpState.IsExistDescription(System.String)">
            <summary>
            是否已经存在员工状态名称
            </summary>
            <param name="description">员工状态名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.EmpState.GetAll">
            <summary>
            获取所有员工状态。
            </summary>
            <returns>ArrayList。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.EmpState.GetAllAvalible">
            <summary>
            获取所有有效的员工状态。
            </summary>
            <returns>员工状态集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.EmpState.GetByCode(System.String)">
            <summary>
            根据员工状态编号获取员工状态。
            </summary>
            <param name="code">员工状态代码。</param>
            <returns>员工状态实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptInfo">
            <summary>
            部门信息实体。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.DeptCode">
            <summary>
            部门编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.DeptCo">
            <summary>
            部门所属公司代码。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.DeptCnName">
            <summary>
            部门中文名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.DeptEnName">
            <summary>
            部门英文名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.ParentDept">
            <summary>
            上级部门编号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.ParentDeptName">
            <summary>
            上级部门名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.DeptMgr">
            <summary>
            部门主管用户名。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.DeptMgrName">
            <summary>
            部门主管名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.DeptLevel">
            <summary>
            部门级别。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.Serial">
            <summary>
            序号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.TypeId">
            <summary>
            类型ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.TypeName">
            <summary>
            类型名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.CostCenter">
            <summary>
            成本中心。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.CreateDate">
            <summary>
            创建日期。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.IsValid">
            <summary>
            是否有效。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.ShowInOtherSys">
            <summary>
            是否在其他系统中显示。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptInfo.Remark">
            <summary>
            备注。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.SEDataType">
            <summary>
            查询引擎的数据类型的SQLServer的数据访问层。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEDataType.GetSEDataTypeParameters">
            <summary>
            获取查询引擎的数据类型的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEDataType.ConvertToSEDataTypeInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成SEDataTypeInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>查询引擎数据类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEDataType.Insert(Shmzh.Components.SystemComponent.SEDataTypeInfo)">
            <summary>
            添加数据类型。
            </summary>
            <param name="obj">数据类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEDataType.Update(Shmzh.Components.SystemComponent.SEDataTypeInfo)">
            <summary>
            修改数据类型。
            </summary>
            <param name="obj">数据类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEDataType.Delete(Shmzh.Components.SystemComponent.SEDataTypeInfo)">
            <summary>
            删除数据类型。
            </summary>
            <param name="obj">数据类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEDataType.Delete(System.Int32)">
            <summary>
            删除数据类型。
            </summary>
            <param name="id">数据类型Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEDataType.GetAll">
            <summary>
            获取所有数据类型集合。
            </summary>
            <returns>数据类型集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEDataType.GetById(System.Int32)">
            <summary>
            根据id获取数据类型。
            </summary>
            <param name="id">数据类型Id</param>
            <returns>数据类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEDataType.IsExist(System.Int32)">
            <summary>
            判断ID是否已经存在。
            </summary>
            <param name="id">id</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEDataType.IsExist(System.String)">
            <summary>
            判断名称是否已经存在。
            </summary>
            <param name="name">名称。</param>
            <returns>bool</returns>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.SQL_INSERT_USERROLE">
            <summary>
            添加组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.SQL_DELETE_USERROLE">
            <summary>
            删除组记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.SQL_DELETE_BY_USERCODELIST_PRODUCTCODE">
            <summary>
            根据产品删除某一个用户的角色关联。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.SQL_DELETE_BY_USERCODELIST_CHECKCODE_TYPE">
            <summary>
            根据知识库条目删除某一个用户的角色关联。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.SQL_SELECT_ALLAVALIBLE_BY_USERNAME">
            <summary>
            获取所有有效的用户角色记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.SQL_SELECT_BY_PRODUCTCODE">
            <summary>
            根据产品编号来获取用户角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.SQL_SELECT_BY_ROLECODE">
            <summary>
            根据角色编号来获取用户角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.SQL_SELECT_BY_PRODUCTCODE_NAME">
            <summary>
            根据产品编号和用户名、姓名来获取用户角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.SQL_SELECT_BY_PRODUCTCODE_USERNAME">
            <summary>
            根据产品编号和用户名获取用户角色的SQL语句。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.GetUserRoleParameters">
            <summary>
            获取用户角色参数。
            </summary>
            <returns>参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.ConvertToUserRoleInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.Insert(Shmzh.Components.SystemComponent.UserRoleInfo)">
            <summary>
            添加用户角色。
            </summary>
            <param name="userRoleInfo">用户角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.Insert(System.String,System.String,System.Int16)">
            <summary>
            批量添加用户角色。
            </summary>
            <param name="userNameList">用户名拼接字符串。</param>
            <param name="roleCodeList">角色编号拼接字符串。</param>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.Insert(System.String,System.String,System.String,System.String)">
            <summary>
            针对知识库条目批量增加用户角色。
            </summary>
            <param name="userCodeList">用户名拼接字符串。</param>
            <param name="roleCodeList">角色编号串。</param>
            <param name="checkCode">知识库条目ID。</param>
            <param name="type">知识库条目类型。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.Delete(Shmzh.Components.SystemComponent.UserRoleInfo)">
            <summary>
            删除用户角色。
            </summary>
            <param name="userRoleInfo">用户角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.Delete(System.String,System.Int16)">
            <summary>
            批量删除某些用户的某个产品的角色。
            </summary>
            <param name="userCodeList">用户名拼接字符串。</param>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.Delete(System.String,System.String,System.String)">
            <summary>
            针对知识库条目删除某一个用户的角色。
            </summary>
            <param name="userCodeList">用户名。</param>
            <param name="checkCode">知识库条目ID。</param>
            <param name="type">知识库条目类型。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.ClearAccess(System.String,System.String)">
            <summary>
            清除知识库条目的访问控制。
            </summary>
            <param name="checkCode">知识库条目的id。</param>
            <param name="type">知识库条目的类型。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.CopyTo(System.String,System.String,System.Int16)">
            <summary>
            复制用户角色到目标用户
            </summary>
            <param name="sourceUserName">源用户名。</param>
            <param name="targetUserName">目标用户名。</param>
            <param name="productCode">产品编号。</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.GetByUserName(System.String)">
            <summary>
            根据用户名获取所有用户角色。
            </summary>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.GetByProductCode(System.Int16)">
            <summary>
            根据产品编号获取用户角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.GetByRoleCode(System.Int16)">
            <summary>
            根据角色编号获取用户角色集合。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.GetByProductCodeAndName(System.Int16,System.String)">
            <summary>
            根据产品编号和模糊匹配用户名、姓名来获取用户角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="name">用户名、姓名。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.GetByProductCodeAndUserName(System.Int16,System.String)">
            <summary>
            根据产品编号和用户名获取用户角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="userName">用户名。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.GetByProductCodeAndUserNameAndCheckCodeAndType(System.Int16,System.String,System.String,System.String)">
            <summary>
            根据产品编号和用户名获取用户角色集合。
            </summary>
            <param name="productCode">产品编号</param>
            <param name="userName">用户名。</param>
            <param name="checkCode">检查对象编号。</param>
            <param name="type">检查对象类型。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.GetByCheckCodeAndType(System.String,System.String)">
            <summary>
            根据CheckCode和Type获取用户角色列表。
            </summary>
            <param name="checkCode">检查对象编号。</param>
            <param name="type">检查对象类型。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.GetByCheckCodeAndTypeAndUserName(System.String,System.String,System.String)">
            <summary>
            根据用户名和知识库条目获取用户角色集合。
            </summary>
            <param name="checkCode">知识库条目ID。</param>
            <param name="type">知识库条目类型。</param>
            <param name="userName">用户名。</param>
            <returns>用户角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.UserRole.GetNoAccessObj(System.Int32,System.Int32)">
            <summary>
            获取没有设置任何访问权限的对象.
            </summary>
            <param name="rightCode">权限代码</param>
            <param name="productcode">产品代码</param>
            <returns>DataSet</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.SEDataType">
            <summary>
            查询引擎的数据类型的SQLServer的数据访问层。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEDataType.GetSEDataTypeParameters">
            <summary>
            获取查询引擎的数据类型的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEDataType.ConvertToSEDataTypeInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成SEDataTypeInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>查询引擎数据类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEDataType.Insert(Shmzh.Components.SystemComponent.SEDataTypeInfo)">
            <summary>
            添加数据类型。
            </summary>
            <param name="obj">数据类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEDataType.Update(Shmzh.Components.SystemComponent.SEDataTypeInfo)">
            <summary>
            修改数据类型。
            </summary>
            <param name="obj">数据类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEDataType.Delete(Shmzh.Components.SystemComponent.SEDataTypeInfo)">
            <summary>
            删除数据类型。
            </summary>
            <param name="obj">数据类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEDataType.Delete(System.Int32)">
            <summary>
            删除数据类型。
            </summary>
            <param name="id">数据类型Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEDataType.GetAll">
            <summary>
            获取所有数据类型集合。
            </summary>
            <returns>数据类型集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEDataType.GetById(System.Int32)">
            <summary>
            根据id获取数据类型。
            </summary>
            <param name="id">数据类型Id</param>
            <returns>数据类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEDataType.IsExist(System.Int32)">
            <summary>
            判断ID是否已经存在。
            </summary>
            <param name="id">id</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SEDataType.IsExist(System.String)">
            <summary>
            判断名称是否已经存在。
            </summary>
            <param name="name">名称。</param>
            <returns>bool</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.TB_SYSORGTP">
            <summary>
            工作流组织机构类型的SQL server的数据访问对象。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.ITB_SYSORGTP">
            <summary>
            组织机构类型的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_SYSORGTP.Insert(Shmzh.Components.SystemComponent.TB_SYSORGTPInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加东兰工作流组织类型信息。
            </summary>
            <param name="obj">组织类型实体。</param>
            <param name="trans"></param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_SYSORGTP.Update(Shmzh.Components.SystemComponent.TB_SYSORGTPInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改东兰工作流组织机构类型信息。
            </summary>
            <param name="obj">组织类型实体。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_SYSORGTP.Delete(Shmzh.Components.SystemComponent.TB_SYSORGTPInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流部门信息。
            </summary>
            <param name="obj">组织类型实体。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_SYSORGTP.Delete(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流部门信息。
            </summary>
            <param name="typeId">类型Id。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_SYSORGTP.IsExistName(System.String)">
            <summary>
            东兰工作流是否存在某一名称的组织类型。
            </summary>
            <param name="typeName">类型名称。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.ITB_SYSORGTP.GetByTypeName(System.String)">
            <summary>
            根据组织类型名称获取组织机构类型。
            </summary>
            <param name="typeName">组织机构类型名称。</param>
            <returns>组织机构类型。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_SYSORGTP.Insert(Shmzh.Components.SystemComponent.TB_SYSORGTPInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加东兰工作流部门信息。
            </summary>
            <param name="obj">配置信息实体。</param>
            <param name="trans"></param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_SYSORGTP.Update(Shmzh.Components.SystemComponent.TB_SYSORGTPInfo,System.Data.Common.DbTransaction)">
            <summary>
            修改东兰工作流部门信息。
            </summary>
            <param name="obj">配置信息实体。</param>
            <param name="trans"></param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_SYSORGTP.Delete(Shmzh.Components.SystemComponent.TB_SYSORGTPInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流部门信息。
            </summary>
            <param name="obj">配置信息实体。</param>
            <param name="trans"></param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_SYSORGTP.Delete(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            删除东兰工作流部门信息。
            </summary>
            <param name="typeId">组织机构类型Id。</param>
            <param name="trans">事务对象。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_SYSORGTP.IsExistName(System.String)">
            <summary>
            东兰工作流是否存在某一名称的部门
            </summary>
            <param name="typeName"></param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.TB_SYSORGTP.GetByTypeName(System.String)">
            <summary>
            根据组织类型名称获取组织机构类型。
            </summary>
            <param name="typeName">组织机构类型名称。</param>
            <returns>组织机构类型。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupInfo">
            <summary>
            组信息
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupInfo.GroupCode">
            <summary>
            组编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupInfo.GroupName">
            <summary>
            组名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupInfo.Remark">
            <summary>
            组描述
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupInfo.SerialNo">
            <summary>
            序号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupInfo.GroupCatId">
            <summary>
            组分类Id。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.TB_ORGMEMLKInfo">
            <summary>
            组织机构与人员关系表。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_ORGMEMLKInfo.LnkId">
            <summary>
            组织机构与人员关系ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_ORGMEMLKInfo.OrgId">
            <summary>
            组织机构Id。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_ORGMEMLKInfo.UserId">
            <summary>
            用户Id。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.IDAL.I_SD_Message">
            <summary>
            消息记录的数据访问接口。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.Insert(Shmzh.Components.SystemComponent.SD_MessageInfo)">
            <summary>
            添加消息记录。
            </summary>
            <param name="messageInfo">消息记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.Update(Shmzh.Components.SystemComponent.SD_MessageInfo)">
            <summary>
            修改消息记录实体。
            </summary>
            <param name="messageInfo">消息记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.Delete(Shmzh.Components.SystemComponent.SD_MessageInfo)">
            <summary>
            删除消息记录实体。
            </summary>
            <param name="messageInfo">消息记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.GetALL">
            <summary>
            获取所有的消息记录实体。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.GetByHandler(System.String)">
            <summary>
            根据处理人获取消息记录集合。
            </summary>
            <param name="HandlerUserName">处理人用户名。</param>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.GetByHandlerAndStatus(System.String,System.Int16)">
            <summary>
            根据处理人和消息状态获取消息记录集合。
            </summary>
            <param name="HandlerUserName">处理人用户名。</param>
            <param name="status">状态</param>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.GetByHandlerAndType(System.String,System.String)">
            <summary>
            根据处理人和消息类型获取消息记录集合。
            </summary>
            <param name="handlerUserName">处理人用户名。</param>
            <param name="typeId">消息类型ID。</param>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.GetByHandlerAndStatusAndType(System.String,System.Int16,System.String)">
            <summary>
            根据处理人和消息状态和消息类型获取消息记录集合。
            </summary>
            <param name="handlerUserName">处理人用户名。</param>
            <param name="status">消息状态。</param>
            <param name="typeId">消息类型。</param>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.GetByReferAndCreateTime(System.String,System.DateTime)">
            <summary>
            根据发送人用户名和发送时间获取消息记录集合。
            </summary>
            <param name="referUserName">发送人用户名。</param>
            <param name="createTime">发送时间。</param>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.GetByWhereClause(System.String)">
            <summary>
            根据Where条件语句字符串来获取消息记录集合。
            </summary>
            <param name="whereClause">where条件字符串。</param>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.GetSendMsgByWhereClause(System.String)">
            <summary>
            根据WhereClause语句来获取发送消息记录的集合。
            </summary>
            <param name="whereClause">SQL的Where条件语句。</param>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.GetNoReadMsgGroupsByHandler(System.String)">
            <summary>
            根据处理人获取未读的分组统计的消息个数。
            </summary>
            <param name="handlerUserName">处理人用户名。</param>
            <returns>消息类型记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.GetLastMsgInfoByHandler(System.String,System.String)">
            <summary>
            据接收人获取最后收取和读取消息的时间。
            </summary>
            <param name="handlerUserName">接收人用户名</param>
            <param name="strIPAddress">IP地址。</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.SetStatusToReceivedByHandler(System.String)">
            <summary>
            据接收人用户名将消息状态设置为已接收（已提示）。
            </summary>
            <param name="handlerUserName">接收人用户名</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.SetStatusToReadById(System.Int64)">
            <summary>
            据接消息ID将消息状态设置为已读。
            </summary>
            <param name="id">消息ID。</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.GetById(System.Int64)">
            <summary>
            根据ID获取消息记录。
            </summary>
            <param name="id">消息记录ID。</param>
            <returns>消息记录实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.IDAL.I_SD_Message.GetCurrentTimeFromDB">
            <summary>
            从数据库中获取当前时间。
            </summary>
            <returns>当前时间。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Role.Insert(Shmzh.Components.SystemComponent.RoleInfo)">
            <summary>
            添加角色。
            </summary>
            <param name="roleInfo">角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Role.Update(Shmzh.Components.SystemComponent.RoleInfo)">
            <summary>
            修改角色。
            </summary>
            <param name="roleInfo">角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Role.Delete(Shmzh.Components.SystemComponent.RoleInfo)">
            <summary>
            删除角色。
            </summary>
            <param name="roleInfo">角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Role.Delete(System.Int16)">
            <summary>
            删除角色。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Role.IsExist(System.Int16)">
            <summary>
            是否已经存在角色编号。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Role.IsExist(System.String,System.Int16)">
            <summary>
            是否已经存在角色名称。
            </summary>
            <param name="roleName">组名称。</param>
            <param name="productCode">产品编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Role.GetAllByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有角色。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>角色记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Role.GetAllAvalibleByProductCode(System.Int16)">
            <summary>
            根据产品编号获取所有有效的角色。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>角色记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Role.GetByCode(System.Int16)">
            <summary>
            根据角色编号获取角色实体。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>ArrayList</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.UserRole">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.#ctor">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Insert(Shmzh.Components.SystemComponent.UserRoleService.UserRoleInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.InsertAsync(Shmzh.Components.SystemComponent.UserRoleService.UserRoleInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.InsertAsync(Shmzh.Components.SystemComponent.UserRoleService.UserRoleInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Insert1(System.String,System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Insert1Async(System.String,System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Insert1Async(System.String,System.String,System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.CopyTo(System.String,System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.CopyToAsync(System.String,System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.CopyToAsync(System.String,System.String,System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Insert2(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Insert2Async(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Insert2Async(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Delete(Shmzh.Components.SystemComponent.UserRoleService.UserRoleInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.DeleteAsync(Shmzh.Components.SystemComponent.UserRoleService.UserRoleInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.DeleteAsync(Shmzh.Components.SystemComponent.UserRoleService.UserRoleInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Delete1(System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Delete1Async(System.String,System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Delete1Async(System.String,System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Delete2(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Delete2Async(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Delete2Async(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.ClearAccess(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.ClearAccessAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.ClearAccessAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByUserName(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByUserNameAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByUserNameAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCode(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByRoleCode(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByRoleCodeAsync(System.Int16)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByRoleCodeAsync(System.Int16,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeAndName(System.Int16,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeAndNameAsync(System.Int16,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeAndNameAsync(System.Int16,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeAndUserName(System.Int16,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeAndUserNameAsync(System.Int16,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeAndUserNameAsync(System.Int16,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeAndUserNameAndCheckCodeAndType(System.Int16,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeAndUserNameAndCheckCodeAndTypeAsync(System.Int16,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeAndUserNameAndCheckCodeAndTypeAsync(System.Int16,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByCheckCodeAndType(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByCheckCodeAndTypeAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByCheckCodeAndTypeAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByCheckCodeAndTypeAndUserName(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByCheckCodeAndTypeAndUserNameAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByCheckCodeAndTypeAndUserNameAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetNoAccessObj(System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetNoAccessObjAsync(System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetNoAccessObjAsync(System.Int32,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleService.UserRole.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.InsertCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Insert1Completed">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.CopyToCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Insert2Completed">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.DeleteCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Delete1Completed">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.Delete2Completed">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.ClearAccessCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByRoleCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeAndNameCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeAndUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByProductCodeAndUserNameAndCheckCodeAndTypeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByCheckCodeAndTypeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetByCheckCodeAndTypeAndUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.UserRoleService.UserRole.GetNoAccessObjCompleted">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.UserRoleInfo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.UserRoleInfo.UserName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.UserRoleInfo.RoleCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.UserRoleInfo.CheckCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.UserRoleInfo.Type">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.InsertCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.InsertCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.InsertCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.Insert1CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.Insert1CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.Insert1CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.CopyToCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.CopyToCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.CopyToCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.Insert2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.Insert2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.Insert2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.DeleteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.DeleteCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.DeleteCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.Delete1CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.Delete1CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.Delete1CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.Delete2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.Delete2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.Delete2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.ClearAccessCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.ClearAccessCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.ClearAccessCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.GetByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByProductCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByProductCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.GetByProductCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByRoleCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByRoleCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.GetByRoleCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByProductCodeAndNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByProductCodeAndNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.GetByProductCodeAndNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByProductCodeAndUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByProductCodeAndUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.GetByProductCodeAndUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByProductCodeAndUserNameAndCheckCodeAndTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByProductCodeAndUserNameAndCheckCodeAndTypeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.GetByProductCodeAndUserNameAndCheckCodeAndTypeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByCheckCodeAndTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByCheckCodeAndTypeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.GetByCheckCodeAndTypeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByCheckCodeAndTypeAndUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetByCheckCodeAndTypeAndUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.GetByCheckCodeAndTypeAndUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetNoAccessObjCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleService.GetNoAccessObjCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleService.GetNoAccessObjCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserInfo">
            <summary>
            用户信息的实体.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserInfo.#ctor">
            <summary>
            UserInfo的构造函数.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserInfo.CopyTo(Shmzh.Components.SystemComponent.UserInfo)">
            <summary>
            复制。
            </summary>
            <param name="userInfo">目标用户实体。</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserInfo.Equals(System.Object)">
            <summary>
            判断两个对象是否相等。
            </summary>
            <param name="obj">比较的目标对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserInfo.GetHashCode">
            <summary>
            获取hash代码。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserInfo.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.PKID">
            <summary>
            主键ID
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.EmpCode">
            <summary>
            用户工号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.EmpCo">
            <summary>
            公司代码
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.DeptCode">
            <summary>
            部门代码
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.DeptName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.EmpName">
            <summary>
            用户姓名
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.EmpEnName">
            <summary>
            英文名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.Gender">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.BirthDay">
            <summary>
            生日.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.LoginName">
            <summary>
            登录名
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.Password1">
            <summary>
            密码1。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.Password2">
            <summary>
            密码2.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.AppandCode">
            <summary>
            附加码。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.EmpState">
            <summary>
            状态.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.DutyCode">
            <summary>
            职务编号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.DutyName">
            <summary>
            职务中文名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.DutyEnName">
            <summary>
            职务英文名称.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.IDCard">
            <summary>
            身份证.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.OfficeCall">
            <summary>
            办公电话.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.OfficeSubCall">
            <summary>
            办公电话分机号码
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.Tel">
            <summary>
            完整电话。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.Mobile">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.OfficeFax">
            <summary>
            办公传真
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.EMail">
            <summary>
            电邮.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.IsUser">
            <summary>
            是否是用户。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.UserState">
            <summary>
            用户状态.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.IsEmp">
            <summary>
            是否是员工.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.CreateDate">
            <summary>
            创建日期。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.InDate">
            <summary>
            进厂日期。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.IsLeave">
            <summary>
            是否离职。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.LeaveDate">
            <summary>
            离职日期。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.SerialNo">
            <summary>
             顺序号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.Company">
            <summary>
            公司缺省为YPWATER.
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserInfo.UICulture">
            <summary>
            UICulture.
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.SD_MessageType">
            <summary>
            消息类型的SQLServer数据访问类。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_MessageType.Insert(Shmzh.Components.SystemComponent.SD_MessageTypeInfo)">
            <summary>
            添加消息记录。
            </summary>
            <param name="messageTypeInfo">消息记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_MessageType.Update(Shmzh.Components.SystemComponent.SD_MessageTypeInfo)">
            <summary>
            修改消息记录实体。
            </summary>
            <param name="messageTypeInfo">消息记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_MessageType.Delete(Shmzh.Components.SystemComponent.SD_MessageTypeInfo)">
            <summary>
            删除消息类型。
            </summary>
            <param name="messageTypeInfo">消息类型实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_MessageType.GetALL">
            <summary>
            获取所有的消息类型。
            </summary>
            <returns>消息类型集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_MessageType.GetById(System.String)">
            <summary>
            根据ID获取消息类型。
            </summary>
            <param name="id">消息类型ID。</param>
            <returns>消息类型实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_MessageType.Move(System.String,System.Byte)">
            <summary>
            消息类型排序号调整。
            </summary>
            <param name="id">消息类型Id。</param>
            <param name="opType">0:上移,1:下移。</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_MessageType.IsAllowDelete(System.String)">
            <summary>
            验证消息类型是否允许删除。
            </summary>
            <param name="typeId">消息类型Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_MessageType.GetMessageTypeParameters">
            <summary>
            获取Insert和Update命令的参数数组。
            </summary>
            <returns>Sql参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_MessageType.ConvertToMessageTypeInfo(System.Data.IDataRecord)">
            <summary>
            将SqlDataReader转换为消息类型实体。
            </summary>
            <param name="dr">SqlDataReader。</param>
            <returns>消息类型实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SEDataTypeInfo">
            <summary>
            查询模块数据类型信息。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SEDataTypeInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEDataTypeInfo.OldId">
            <summary>
            查询模块原始ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEDataTypeInfo.Id">
            <summary>
            查询模块Id。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEDataTypeInfo.Name">
            <summary>
            查询模块数据类型名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SEDataTypeInfo.Remark">
            <summary>
            查询模块数据类型的备注。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.UserRoleInfo">
            <summary>
            用户角色信息。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.UserRoleInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleInfo.UserName">
            <summary>
            用户登录名。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleInfo.RoleCode">
            <summary>
            角色编号。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleInfo.CheckCode">
            <summary>
            文章或目录的ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.UserRoleInfo.Type">
            <summary>
            类型（文章或类型）。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.GroupCatInfo">
            <summary>
            组分类信息
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.GroupCatInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupCatInfo.Id">
            <summary>
            组分类Id。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupCatInfo.Name">
            <summary>
            组分类名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupCatInfo.Remark">
            <summary>
            组分类描述。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.GroupCatInfo.SerialNo">
            <summary>
            序号。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HelpInfo">
            <summary>
            帮助实体
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HelpInfo.#ctor">
            <summary>
            帮助信息。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HelpInfo.Code">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HelpInfo.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HelpInfo.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HelpInfo.ParentCode">
            <summary>
            上级编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HelpInfo.Serial">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HelpInfo.HasChild">
            <summary>
            是否有孩子
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.TB_SYSORGTPInfo">
            <summary>
            东兰工作流组织机构类型的实体。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_SYSORGTPInfo.TypeId">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_SYSORGTPInfo.ClassOrder">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_SYSORGTPInfo.TypeName">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_SYSORGTPInfo.Enable">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.PriorityEnum">
            <summary>
            优先级
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.PriorityEnum.Normal">
            <summary>
            普通
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.PriorityEnum.Urgent">
            <summary>
            紧急
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.PriorityEnum.Urgentest">
            <summary>
            特急
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SESchema.GetParameters">
            <summary>
            获取查询引擎的数据类型的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SESchema.ConvertToSESchemaInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成SESchemaInfo.
            </summary>
            <param name="dr">DataRow</param>
            <returns>查询方案实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupUser.GetParameters">
            <summary>
            获取组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupUser.ConvertToGroupUserInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupUserInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组用户实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupUser.Insert(Shmzh.Components.SystemComponent.GroupUserInfo,System.Data.Common.DbTransaction)">
            <summary>
            添加组用户。
            </summary>
            <param name="obj">组用户实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupUser.Delete(Shmzh.Components.SystemComponent.GroupUserInfo,System.Data.Common.DbTransaction)">
            <summary>
            删除组用户。
            </summary>
            <param name="groupUserInfo">组用户实体。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupUser.Delete(System.String)">
            <summary>
             根据指定的用户名来删除组和用户的关系记录。
            </summary>
            <param name="userCode">用户名。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupUser.Delete(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据指定的用户名来删除组和用户的关系记录。
            </summary>
            <param name="userCode">用户名。</param>
            <param name="trans">事务对象。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupUser.GetAll">
            <summary>
            获取所有的组用户集合.
            </summary>
            <returns>组用户集合.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.GroupUser.GetByUserCode(System.String)">
            <summary>
            根据用户名获取组用户集合。
            </summary>
            <param name="userCode">用户名。</param>
            <returns>组用户集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.OwnedRole.GetAllByProductCode(System.Int16)">
            <summary>
            根据产品获取所有的角色与对象的关系的集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>角色和访问对象关系的集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.OwnedRole.GetByUserName(System.String)">
            <summary>
            根据用户名获取用户所具有的角色和访问对象的关系。
            </summary>
            <param name="userName">用户名。</param>
            <returns>角色和访问对象关系的集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.OwnedRole.GetByGroupCode(System.Int16)">
            <summary>
            根据组编号获取具有的角色和访问对象的关系。
            </summary>
            <param name="groupCode">组编号。</param>
            <returns>角色和访问对象关系的集合</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryService.History">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.#ctor">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.HelloWorld">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.HelloWorldAsync">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.HelloWorldAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.Insert(Shmzh.Components.SystemComponent.HistoryService.HistoryInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.InsertAsync(Shmzh.Components.SystemComponent.HistoryService.HistoryInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.InsertAsync(Shmzh.Components.SystemComponent.HistoryService.HistoryInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.Update(Shmzh.Components.SystemComponent.HistoryService.HistoryInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.UpdateAsync(Shmzh.Components.SystemComponent.HistoryService.HistoryInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.UpdateAsync(Shmzh.Components.SystemComponent.HistoryService.HistoryInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.Delete(System.Int64)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.DeleteAsync(System.Int64)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.DeleteAsync(System.Int64,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.GetAllByDateTime(System.DateTime,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.GetAllByDateTimeAsync(System.DateTime,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.GetAllByDateTimeAsync(System.DateTime,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.GetByUserAndDateTime(System.String,System.DateTime,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.GetByUserAndDateTimeAsync(System.String,System.DateTime,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.GetByUserAndDateTimeAsync(System.String,System.DateTime,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryService.History.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.HistoryService.History.HelloWorldCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.HistoryService.History.InsertCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.HistoryService.History.UpdateCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.HistoryService.History.DeleteCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.HistoryService.History.GetAllByDateTimeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.HistoryService.History.GetByUserAndDateTimeCompleted">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryService.HistoryInfo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryService.HistoryInfo.Id">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryService.HistoryInfo.Operation">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryService.HistoryInfo.Url">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryService.HistoryInfo.UserName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryService.HistoryInfo.IpAddress">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryService.HistoryInfo.OpTime">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryService.HelloWorldCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryService.HelloWorldCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryService.HelloWorldCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryService.InsertCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryService.InsertCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryService.InsertCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryService.UpdateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryService.UpdateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryService.UpdateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryService.DeleteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryService.DeleteCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryService.DeleteCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryService.GetAllByDateTimeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryService.GetAllByDateTimeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryService.GetAllByDateTimeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryService.GetByUserAndDateTimeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryService.GetByUserAndDateTimeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryService.GetByUserAndDateTimeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.Dept">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.#ctor">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.Insert(Shmzh.Components.SystemComponent.DeptService.DeptInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.InsertAsync(Shmzh.Components.SystemComponent.DeptService.DeptInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.InsertAsync(Shmzh.Components.SystemComponent.DeptService.DeptInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.Update(Shmzh.Components.SystemComponent.DeptService.DeptInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.UpdateAsync(Shmzh.Components.SystemComponent.DeptService.DeptInfo)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.UpdateAsync(Shmzh.Components.SystemComponent.DeptService.DeptInfo,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.Delete(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.DeleteAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.DeleteAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.Disable(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.DisableAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.DisableAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.Enable(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.EnableAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.EnableAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.IsExistDeptCode(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.IsExistDeptCodeAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.IsExistDeptCodeAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.IsExistDeptName(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.IsExistDeptNameAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.IsExistDeptNameAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.HasChildDept(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.HasChildDeptAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.HasChildDeptAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.HasUser(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.HasUserAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.HasUserAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetAllByCompanyCode(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetAllByCompanyCodeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetAllByCompanyCodeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetAllAvalibleCompanyCode(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetAllAvalibleCompanyCodeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetAllAvalibleCompanyCodeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetByCompanyAndManager(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetByCompanyAndManagerAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetByCompanyAndManagerAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetByCompanyCodeAndDeptCode(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetByCompanyCodeAndDeptCodeAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetByCompanyCodeAndDeptCodeAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetParentDeptByCode(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetParentDeptByCodeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.GetParentDeptByCodeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.DeptService.Dept.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.DeptService.Dept.InsertCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.DeptService.Dept.UpdateCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.DeptService.Dept.DeleteCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.DeptService.Dept.DisableCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.DeptService.Dept.EnableCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.DeptService.Dept.IsExistDeptCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.DeptService.Dept.IsExistDeptNameCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.DeptService.Dept.HasChildDeptCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.DeptService.Dept.HasUserCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.DeptService.Dept.GetAllByCompanyCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.DeptService.Dept.GetAllAvalibleCompanyCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.DeptService.Dept.GetByCompanyAndManagerCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.DeptService.Dept.GetByCompanyCodeAndDeptCodeCompleted">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.DeptService.Dept.GetParentDeptByCodeCompleted">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.DeptInfo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.DeptCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.DeptCo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.DeptCnName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.DeptEnName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.ParentDept">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.ParentDeptName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.DeptMgr">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.DeptMgrName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.DeptLevel">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.Serial">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.TypeId">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.TypeName">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.CostCenter">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.CreateDate">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.IsValid">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.ShowInOtherSys">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeptInfo.Remark">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.InsertCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.InsertCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.InsertCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.UpdateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.UpdateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.UpdateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.DeleteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.DeleteCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DeleteCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.DisableCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.DisableCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.DisableCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.EnableCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.EnableCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.EnableCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.IsExistDeptCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.IsExistDeptCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.IsExistDeptCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.IsExistDeptNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.IsExistDeptNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.IsExistDeptNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.HasChildDeptCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.HasChildDeptCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.HasChildDeptCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.HasUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.HasUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.HasUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.GetAllByCompanyCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.GetAllByCompanyCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.GetAllByCompanyCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.GetAllAvalibleCompanyCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.GetAllAvalibleCompanyCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.GetAllAvalibleCompanyCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.GetByCompanyAndManagerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.GetByCompanyAndManagerCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.GetByCompanyAndManagerCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.GetByCompanyCodeAndDeptCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.GetByCompanyCodeAndDeptCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.GetByCompanyCodeAndDeptCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.GetParentDeptByCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.DeptService.GetParentDeptByCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.DeptService.GetParentDeptByCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.Provider">
            <summary>
            数据访问提供类。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleRightInfo">
            <summary>
            用户角色信息。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleRightInfo.#ctor">
            <summary>
            构造函数.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleRightInfo.#ctor(System.Int16,System.Int16)">
            <summary>
            角色权限构造函数。
            </summary>
            <param name="roleCode">角色编号。</param>
            <param name="rightCode">权限编号。</param>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleRightInfo.RoleCode">
            <summary>
            用户登录名。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleRightInfo.RightCode">
            <summary>
            角色编号。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SD_MessageInfo">
            <summary>
            消息实体。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SD_MessageInfo.#ctor">
            <summary>
            默认构造函数。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.ID">
            <summary>
            消息ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.TypeId">
            <summary>
            消息类型ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.Name">
            <summary>
            消息标题。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.Desc">
            <summary>
            消息描述。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.PRI">
            <summary>
            优先级。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.URL">
            <summary>
            URL地址。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.Status">
            <summary>
            消息状态。
            </summary>
            <remarks>0:新状态；1：已提示；2：已阅读。</remarks>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.Refer">
            <summary>
            提交人。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.ReferUserName">
            <summary>
            提交人用户名。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.Handler">
            <summary>
            处理人。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.HandlerUserName">
            <summary>
            处理人用户名。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.CreateTime">
            <summary>
            消息创建时间。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.TipTime">
            <summary>
            消息提示时间。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.ViewTime">
            <summary>
            消息阅读时间。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SD_MessageInfo.HandlerCount">
            <summary>
            接收人个数。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.OnlineStatusInfo">
            <summary>
            组信息
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusInfo.#ctor">
            <summary>
             默认构造函数。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.OnlineStatusInfo.#ctor(System.String,System.String,System.String,System.DateTime)">
            <summary>
            构造函数
            </summary>
            <param name="userName">用户名。</param>
            <param name="ipAddress">IP地址。</param>
            <param name="status">在线状态。</param>
            <param name="beatTime">心跳时间。</param>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusInfo.UserName">
            <summary>
            用户名。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusInfo.IPAddress">
            <summary>
            IP地址。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusInfo.Status">
            <summary>
            在线状态
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.OnlineStatusInfo.BeatTime">
            <summary>
            心跳时间。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.HistoryInfo">
            <summary>
            系统访问历史记录实体类。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.HistoryInfo.#ctor">
            <summary>
            CTOR
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryInfo.Id">
            <summary>
            ID。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryInfo.Operation">
            <summary>
            动作。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryInfo.Url">
            <summary>
            访问的URL。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryInfo.UserName">
            <summary>
            用户名。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryInfo.IpAddress">
            <summary>
            IP地址。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.HistoryInfo.OpTime">
            <summary>
            操作时间。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SqlHelperParameterCache">
            <summary>
            SqlHelperParameterCache provides functions to leverage a static cache of procedure parameters, and the
            ability to discover parameters for stored procedures at run-time.
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelperParameterCache.DiscoverSpParameterSet(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            Resolve at run time the appropriate set of SqlParameters for a stored procedure
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">Whether or not to include their return value parameter</param>
            <returns>The parameter array discovered.</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelperParameterCache.CloneParameters(System.Data.SqlClient.SqlParameter[])">
            <summary>
            Deep copy of cached SqlParameter array
            </summary>
            <param name="originalParameters">原始参数。</param>
            <returns>SqlParameter[]</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelperParameterCache.CacheParameterSet(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Add parameter array to the cache
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters to be cached</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelperParameterCache.GetCachedParameterSet(System.String,System.String)">
            <summary>
            Retrieve a parameter array from the cache
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An array of SqlParamters</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelperParameterCache.GetSpParameterSet(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelperParameterCache.GetSpParameterSet(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SqlHelperParameterCache.GetSpParameterSetInternal(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupCat.Insert(Shmzh.Components.SystemComponent.GroupCatInfo)">
            <summary>
            添加组分类。
            </summary>
            <param name="obj">组分类实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupCat.Update(Shmzh.Components.SystemComponent.GroupCatInfo)">
            <summary>
            修改组分类。
            </summary>
            <param name="obj">组分类实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupCat.Delete(Shmzh.Components.SystemComponent.GroupCatInfo)">
            <summary>
            删除组分类。
            </summary>
            <param name="obj">组分类实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupCat.Delete(System.Int16)">
            <summary>
            删除组分类。
            </summary>
            <param name="id">组分类Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupCat.IsExist(System.String)">
            <summary>
            是否已经存在组分类名称。
            </summary>
            <param name="name">组分类名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupCat.GetAll">
            <summary>
            获取所有组分类。
            </summary>
            <returns>组分类列表。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.GroupCat.GetById(System.Int16)">
            <summary>
            根据组编号获取组。
            </summary>
            <param name="id">组编号。</param>
            <returns>组分类。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Company.Insert(Shmzh.Components.SystemComponent.CompanyInfo)">
            <summary>
            添加公司。
            </summary>
            <param name="companyInfo">公司实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Company.Update(Shmzh.Components.SystemComponent.CompanyInfo)">
            <summary>
            修改公司。
            </summary>
            <param name="companyInfo">公司实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Company.Delete(Shmzh.Components.SystemComponent.CompanyInfo)">
            <summary>
            删除公司。
            </summary>
            <param name="companyInfo">公司实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Company.Delete(System.String)">
            <summary>
            删除公司。
            </summary>
            <param name="coCode">公司编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Company.IsExistCode(System.String)">
            <summary>
            判断公司编号是否已经存在。
            </summary>
            <param name="coCode">公司编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Company.IsExistName(System.String)">
            <summary>
            是否已经存在组名称。
            </summary>
            <param name="coCnName">公司名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Company.GetAll">
            <summary>
            获取所有公司。
            </summary>
            <returns>公司集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Company.GetAllAvalible">
            <summary>
            获取所有有效的公司。
            </summary>
            <returns>公司集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Company.GetByCode(System.String)">
            <summary>
            根据公司编号获取公司。
            </summary>
            <param name="companyCode">公司编号。</param>
            <returns>公司实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.WSDAL.Company.GetDefault">
            <summary>
            获取默认的公司。
            </summary>
            <returns>公司信息。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleRightService.RoleRight">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleRightService.RoleRight.#ctor">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleRightService.RoleRight.GetAllAvalible">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleRightService.RoleRight.GetAllAvalibleAsync">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleRightService.RoleRight.GetAllAvalibleAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.RoleRightService.RoleRight.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:Shmzh.Components.SystemComponent.RoleRightService.RoleRight.GetAllAvalibleCompleted">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleRightService.RoleRightInfo">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleRightService.RoleRightInfo.RoleCode">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleRightService.RoleRightInfo.RightCode">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleRightService.GetAllAvalibleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.RoleRightService.GetAllAvalibleCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.RoleRightService.GetAllAvalibleCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.ToDoList">
            <summary>
            ToDoList 的摘要说明。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoList.#ctor">
            <summary>
            代办事宜。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.AwokeTime">
            <summary>
            提醒时间
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.InvalidateTime">
            <summary>
            失效时间
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.TaskID">
            <summary>
            任务ID
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.Priority">
            <summary>
            优先级
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.Handler">
            <summary>
            处理人姓名
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.HandlerUserName">
            <summary>
            处理人用户名
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.SubmitDate">
            <summary>
            提交日期
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.ProcessID">
            <summary>
            那个流程
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.HasUrl">
            <summary>
            是否有URL
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.URL">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.Refer">
            <summary>
            提交人
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.ReferUserName">
            <summary>
            提交人用户名
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.HasTodo">
            <summary>
            是否已经完成
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.ToDoTime">
            <summary>
            完成时间
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.Guid">
            <summary>
            GUID
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoList.TaskTypeId">
            <summary>
            任务类型Id。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.ToDoLists">
            <summary>
            待办事宜集合。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoLists.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoLists.Add(Shmzh.Components.SystemComponent.ToDoList)">
            <summary>
            增加
            </summary>
            <param name="item">项</param>
            <returns>int</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoLists.Insert(System.Int32,Shmzh.Components.SystemComponent.ToDoList)">
            <summary>
            插入
            </summary>
            <param name="index">序号</param>
            <param name="item">项</param>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.ToDoLists.Remove(Shmzh.Components.SystemComponent.ToDoList)">
            <summary>
            移除
            </summary>
            <param name="item">项</param>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.ToDoLists.Item(System.Int32)">
            <summary>
            索引
            </summary>
            <param name="index">索引号。</param>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.SQL_INSERT_GROUPROLE">
            <summary>
            添加组角色记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.SQL_DELETE_GROUPROLE">
            <summary>
            删除组角色记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.SQL_SELECT_BY_GROUPCODE_PRODUCTCODE">
            <summary>
            根据组编号和产品编号获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.SQL_SELECT_BY_GROUPCODE_CHECKCODE_TYPE">
            <summary>
            根据组编号和知识库条目号和知识库条目类型来获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.SQL_SELECT_BY_CHECKCODE_TYPE">
            <summary>
            根据知识库条目号和知识库条目类型来获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.SQL_SELECT_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.SQL_SELECT_BY_ROLECODE">
            <summary>
            根据角色编号获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.SQL_SELECT_BY_PRODUCTCODE_NAME">
            <summary>
            根据产品编号和组名(模糊)来获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.SQL_SELECT_BY_PRODUCTCODE_GROUPCODE">
            <summary>
            根据产品编号和组编号获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.SQL_SELECT_BY_PRODUCTCODE_GROUPCODE_CHECKCODE_TYPE">
            <summary>
            根据产品编号和组编号和检查对象获取组角色的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.SQL_CLEARACCESS">
            <summary>
            清除知识库条目的访问控制。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.SQL_COPYTOGROUPROLE_BY_SOURCEGROUPCODE_TARGETGROUPCODE_PRODUCTCODE">
            <summary>
            复制组权限到目标组
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.GetGroupRoleParameters">
            <summary>
            获取用户角色参数。
            </summary>
            <returns>参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.ConvertToGroupRoleInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.Insert(Shmzh.Components.SystemComponent.GroupRoleInfo)">
            <summary>
            添加组角色。
            </summary>
            <param name="groupRoleInfo">组角色实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.GetByGroupCodeAndProductCode(System.Int16,System.Int16)">
            <summary>
            根据组编号和产品编号获取组角色。
            </summary>
            <param name="groupCode">组编号。</param>
            <param name="productCode">产品编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.GetByGroupCodeAndCheckCodeAndType(System.Int16,System.String,System.String)">
            <summary>
            根据组编号和知识库条目号和知识库条目类型获取组角色。
            </summary>
            <param name="groupCode">组编号。</param>
            <param name="checkCode">知识库条目号。</param>
            <param name="type">知识库条目类型。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.GetByCheckCodeAndType(System.String,System.String)">
            <summary>
            根据知识库条目号和知识库条目类型获取组角色。
            </summary>
            <param name="checkCode">知识库条目号。</param>
            <param name="type">知识库条目类型。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.GetByProductCode(System.Int16)">
            <summary>
            根据产品编号获取组角色。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.GetByRoleCode(System.Int16)">
            <summary>
            根据角色编号获取组角色集合。
            </summary>
            <param name="roleCode">角色编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.GetByProductCodeAndName(System.Int16,System.String)">
            <summary>
            根据产品编号和组名来获取组角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="name">组名称。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.GetByProductCodeAndGroupCode(System.Int16,System.Int16)">
            <summary>
            根据产品编号和组编号获取组角色集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="groupCode">组编号。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.GetByProductCodeAndGroupCodeAndCheckCodeAndType(System.Int16,System.Int16,System.String,System.String)">
            <summary>
            根据产品编号和组编号和检查对象来获取组角色集合
            </summary>
            <param name="productCode">产品编号。</param>
            <param name="groupCode">组编号。</param>
            <param name="checkCode">检查对象编号。</param>
            <param name="type">检查对象类型。</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.GroupRole.GetByGroupCodeAndType(System.Int16,System.String)">
            <summary>
            根据用户组和访问对象类型获取组角色列表。
            </summary>
            <param name="groupCode">用户组编号</param>
            <param name="type">访问对象类型</param>
            <returns>组角色集合。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message">
            <summary>
            消息的SQLServer数据访问对象。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.Insert(Shmzh.Components.SystemComponent.SD_MessageInfo)">
            <summary>
            添加消息记录。
            </summary>
            <param name="messageInfo">消息记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.Update(Shmzh.Components.SystemComponent.SD_MessageInfo)">
            <summary>
            修改消息记录。
            </summary>
            <param name="messageInfo">消息记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.Delete(Shmzh.Components.SystemComponent.SD_MessageInfo)">
            <summary>
            删除消息记录实体。
            </summary>
            <param name="messageInfo">消息记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.GetALL">
            <summary>
            获取所有消息记录集合。
            </summary>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.GetByHandler(System.String)">
            <summary>
            根据处理人用户名获取消息记录集合。
            </summary>
            <param name="handlerUserName">处理人用户名。</param>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.GetByHandlerAndStatus(System.String,System.Int16)">
            <summary>
            根据处理人用户名和消息记录状态获取消息记录集合。
            </summary>
            <param name="handlerUserName">处理人用户名。</param>
            <param name="status">消息记录状态。</param>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.GetByHandlerAndType(System.String,System.String)">
            <summary>
            根据处理人用户名和消息类型获取消息记录集合。
            </summary>
            <param name="handlerUserName">处理人用户名。</param>
            <param name="typeId">消息类型Id。</param>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.GetByHandlerAndStatusAndType(System.String,System.Int16,System.String)">
            <summary>
            根据处理人和消息状态和消息类型获取消息记录集合。
            </summary>
            <param name="handlerUserName">处理人用户名。</param>
            <param name="status">消息状态。</param>
            <param name="typeId">消息类型。</param>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.GetByReferAndCreateTime(System.String,System.DateTime)">
            <summary>
            根据发送人用户名和发送时间获取消息记录集合。
            </summary>
            <param name="referUserName">发送人用户名。</param>
            <param name="createTime">发送时间。</param>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.GetByWhereClause(System.String)">
            <summary>
            根据WhereClause语句来获取消息记录的集合。
            </summary>
            <param name="whereClause">SQL的Where条件语句。</param>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.GetSendMsgByWhereClause(System.String)">
            <summary>
            根据WhereClause语句来获取发送消息记录的集合。
            </summary>
            <param name="whereClause">SQL的Where条件语句。</param>
            <returns>消息记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.GetNoReadMsgGroupsByHandler(System.String)">
            <summary>
            根据处理人获取未读的分组统计的消息个数。
            </summary>
            <param name="handlerUserName">处理人用户名。</param>
            <returns>消息类型记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.GetLastMsgInfoByHandler(System.String,System.String)">
            <summary>
            据接收人获取最后收取和读取消息的时间。
            </summary>
            <param name="handlerUserName">接收人用户名</param>
            <param name="strIPAddress">IP地址。</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.SetStatusToReceivedByHandler(System.String)">
            <summary>
            据接收人用户名将消息状态设置为已接收（已提示）。
            </summary>
            <param name="handlerUserName">接收人用户名</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.SetStatusToReadById(System.Int64)">
            <summary>
            据接消息ID将消息状态设置为已读。
            </summary>
            <param name="id">消息ID。</param>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.GetById(System.Int64)">
            <summary>
            根据ID获取消息记录。
            </summary>
            <param name="id">消息记录ID。</param>
            <returns>消息记录实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.GetCurrentTimeFromDB">
            <summary>
            从数据库中获取当前时间。
            </summary>
            <returns>当前时间。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.GetMessageParameters">
            <summary>
            获取Insert和Update命令的参数数组。
            </summary>
            <returns>Sql参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.SD_Message.ConvertToMessageInfo(System.Data.IDataRecord)">
            <summary>
            将DataReader数据填充到MessageInfo对象。
            </summary>
            <param name="dr">SqlDataReader。</param>
            <returns>消息实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SettingInfo">
            <summary>
            系统配置信息表。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SettingInfo.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SettingInfo.Key">
            <summary>
            配置键名称。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SettingInfo.Value">
            <summary>
            配置键值。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SettingInfo.Remark">
            <summary>
            配置说明。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.SettingInfo.Category">
            <summary>
            配置分类。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.CompanyInfo">
            <summary>
            CompanyInfo 的摘要说明。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.CompanyInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.CoCode">
            <summary>
            公司编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.CoName">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.CoEnName">
            <summary>
            公司英文名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.CoShortName">
            <summary>
            公司简称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.ParentCo">
            <summary>
            上级公司编号
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.ParentCoName">
            <summary>
            上级公司名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.ArtificialPerson">
            <summary>
            法人代表。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.Mgr">
            <summary>
            总经理
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.BussinessLicense">
            <summary>
            经营许可证
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.BussinessRange">
            <summary>
            经营范围
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.CoArea">
            <summary>
            公司区域
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.CoAddress">
            <summary>
            公司地址
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.IsValid">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.Remark">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.CompanyInfo.IsDefault">
            <summary>
            是否是缺省的.
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SQLServerDAL.History">
            <summary>
            系统访问记录的SQL Server的数据访问层。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.History.Insert(Shmzh.Components.SystemComponent.HistoryInfo)">
            <summary>
            添加系统访问记录。
            </summary>
            <param name="historyInfo">系统访问记录。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.History.Update(Shmzh.Components.SystemComponent.HistoryInfo)">
            <summary>
            修改系统访问记录。
            </summary>
            <param name="historyInfo">系统访问记录。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.History.Delete(Shmzh.Components.SystemComponent.HistoryInfo)">
            <summary>
            删除系统访问记录。
            </summary>
            <param name="historyInfo">系统访问记录。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.History.Delete(System.Int64)">
            <summary>
            删除系统访问记录。
            </summary>
            <param name="id">系统访问记录Id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.History.ConvertToHistoryInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成HistoryInfoInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>访问记录实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.History.GetAllByDateTime(System.DateTime,System.DateTime)">
            <summary>
            根据时间段获取所有用户的登录退出记录。
            </summary>
            <param name="beginTime">开始时间。</param>
            <param name="endTime">结束时间。</param>
            <returns>登录退出记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.SQLServerDAL.History.GetByUserAndDateTime(System.String,System.DateTime,System.DateTime)">
            <summary>
            根据时间段获取指定用户的登录退出记录
            </summary>
            <param name="userName">用户名。</param>
            <param name="beginTime">开始时间。</param>
            <param name="endTime">结束时间。</param>
            <returns>登录退出记录集合。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.TB_ORGTREEInfo">
            <summary>
            东兰工作流组织机构树的实体。
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_ORGTREEInfo.ParentID">
            <summary>
            父级部门 Id
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_ORGTREEInfo.ItemName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_ORGTREEInfo.TypeID">
            <summary>
            部门类型
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_ORGTREEInfo.Enable">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:Shmzh.Components.SystemComponent.TB_ORGTREEInfo.ItemID">
            <summary>
            部门Id
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.Enum.OpTypeEnum">
            <summary>
             操作日志类型枚举。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.OpTypeEnum.UserOperation">
            <summary>
            用户操作。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.OpTypeEnum.RoleRightOperation">
            <summary>
            角色权限操作。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.OpTypeEnum.UserRoleOperation">
            <summary>
            用户角色操作。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.Enum.TaskTypeEnum">
            <summary>
            待办事宜任务类型枚举。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.TaskTypeEnum.MeetingTask">
            <summary>
            会议任务。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.TaskTypeEnum.VechicleYearCheck">
            <summary>
            车辆年检。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.TaskTypeEnum.VechicleMaintain">
            <summary>
            车辆维护。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.TaskTypeEnum.WebSiteArticle">
            <summary>
            网站文章。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.TaskTypeEnum.DeviceRepairOutAdd">
            <summary>
            设备报修单涉外解决。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.TaskTypeEnum.ProjectPreReport">
            <summary>
            项目预报表。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.TaskTypeEnum.ProjectTask">
            <summary>
            项目任务。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.Enum.TaskTypeEnum.ProjectTempTask">
            <summary>
            项目临时任务。
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.SystemTimeInfo">
            LayoutKind.Automatic：为了提高效率允许运行态对类型成员重新排序
            注意：永远不要使用这个选项来调用不受管辖的动态链接库函数。
            LayoutKind.Explicit：对每个域按照FieldOffset属性对类型成员排序
            LayoutKind.Sequential：对出现在受管辖类型定义地方的不受管辖内存中的类型成员进行排序。
            <summary>
            定义系统时间的信息结构
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SystemTimeInfo.wYear">
            <summary>
            年
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SystemTimeInfo.wMonth">
            <summary>
            月
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SystemTimeInfo.wDayOfWeek">
            <summary>
            星期
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SystemTimeInfo.wDay">
            <summary>
            天
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SystemTimeInfo.wHour">
            <summary>
            小时
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SystemTimeInfo.wMinute">
            <summary>
            分钟
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SystemTimeInfo.wSecond">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.SystemTimeInfo.wMilliseconds">
            <summary>
            毫秒
            </summary>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.Template">
            <summary>
            SQLServer版本的模板对象的数据访问层。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Template.SQL_SELECT_TEMPLATES">
            <summary>
            获取所有模板记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Template.SQL_SELECT_TEMPLATES_BY_PRODUCTCODE">
            <summary>
            根据产品编号获取模板记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Template.SQL_SELECT_TEMPLATE_BY_ID">
            <summary>
            根据模板ID获取模板记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Template.SQL_SELECT_TEMPLATE_BY_CODE">
            <summary>
            根据模板编号获取模板记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Template.SQL_INSERT_TEMPLATE">
            <summary>
            添加模板记录的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Template.SQL_UPDATE_TEMPLATE">
             <summary>
            修改模板记录的SQL语句。
             </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.Template.SQL_DELETE_TEMPLATE">
            <summary>
            删除模板记录。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Template.Insert(Shmzh.Components.SystemComponent.TemplateInfo)">
            <summary>
            添加模板记录。
            </summary>
            <param name="templateInfo">模板记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Template.Update(Shmzh.Components.SystemComponent.TemplateInfo)">
            <summary>
            修改模板记录实体。
            </summary>
            <param name="templateInfo">模板记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Template.Delete(Shmzh.Components.SystemComponent.TemplateInfo)">
            <summary>
            删除模板记录。
            </summary>
            <param name="templateInfo">模板记录实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Template.Delete(System.Int32)">
            <summary>
            根据模板ID删除模板记录。
            </summary>
            <param name="id">模板id。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Template.GetAll">
            <summary>
            获取所有的模板记录。
            </summary>
            <returns>模板记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Template.GetByProductCode(System.Int16)">
            <summary>
            根据产品编号获取模板记录集合。
            </summary>
            <param name="productCode">产品编号。</param>
            <returns>模板记录集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Template.GetById(System.Int32)">
            <summary>
            根据模板ID获取模板记录实体。
            </summary>
            <param name="id">模板ID。</param>
            <returns>模板记录实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Template.GetByCode(System.String)">
            <summary>
            根据模板编号获取模板记录实体。
            </summary>
            <param name="code">模板编号。</param>
            <returns>模板记录实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Template.IsExist(System.String)">
            <summary>
            是否已经存在模板编号。
            </summary>
            <param name="code">模板编号。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Template.GetTemplateParameters">
            <summary>
            获取Insert和Update命令的参数数组。
            </summary>
            <returns>Sql参数数组。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.Template.ConvertToTemplateInfo(System.Data.IDataRecord)">
            <summary>
            将SqlDataReader转换为TemplateInfo实体。
            </summary>
            <param name="dr">DataReader</param>
            <returns>模板实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEModule.GetSEModuleParameters">
            <summary>
            获取查询模块参数。
            </summary>
            <returns>查询模块参数。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.SEModule.ConvertToSEModuleInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成SEModuleInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>查询模块实体。</returns>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.OrgType.SQL_INSERT_ORGTYPE">
            <summary>
            添加组织机构类型的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.OrgType.SQL_UPDATE_ORGTYPE">
            <summary>
            修改组织机构类型的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.OrgType.SQL_DELETE_ORGTYPE">
            <summary>
            删除组织机构类型的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.OrgType.SQL_SELECT_ALL">
            <summary>
            获取所有组织机构类型。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.OrgType.SQL_SELECT_ALLAVALIBLE">
            <summary>
            获取所有有效的组织机构类型。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.OrgType.SQL_SELECTCOUNT_BY_CODE">
            <summary>
            通过对组织机构类型编号进行查询，判断编号有没有已经存在的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.OrgType.SQL_SELECTCOUNT_BY_NAME">
            <summary>
            通过对组织机构类型名称进行查询，判断名称有没有已经存在的SQL语句。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.OrgType.SQL_SELECT_BY_CODE">
            <summary>
            根据组编号获取组织机构记录。
            </summary>
        </member>
        <member name="F:Shmzh.Components.SystemComponent.AccessDAL.OrgType.SQL_SELECTORGCOUNT_BY_CODE">
            <summary>
            判断组织机构类型有没有被使用的SQL语句。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.OrgType.GetOrgTypeParameters">
            <summary>
            获取组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.OrgType.ConvertToOrgTypeInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成OrgTypeInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组织机构类型实体。</returns>
        </member>
        <member name="T:Shmzh.Components.SystemComponent.AccessDAL.EmpState">
            <summary>
            员工状态的SQLServer的数据访问层。
            </summary>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.EmpState.GetEmpStateParameters">
            <summary>
            获取组参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.EmpState.ConvertToEmpStateInfo(System.Data.IDataRecord)">
            <summary>
            将DataRow转换成GroupInfo。
            </summary>
            <param name="dr">DataRow</param>
            <returns>组实体。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.EmpState.Insert(Shmzh.Components.SystemComponent.EmpStateInfo)">
            <summary>
            添加员工状态。
            </summary>
            <param name="empStateInfo">员工状态实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.EmpState.Update(Shmzh.Components.SystemComponent.EmpStateInfo)">
            <summary>
            修改员工状态。
            </summary>
            <param name="empStateInfo">员工状态实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.EmpState.Delete(Shmzh.Components.SystemComponent.EmpStateInfo)">
            <summary>
            删除员工状态。
            </summary>
            <param name="empStateInfo">员工状态实体。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.EmpState.Delete(System.String)">
            <summary>
            删除员工状态。
            </summary>
            <param name="code">员工状态代码。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.EmpState.IsExistCode(System.String)">
            <summary>
            是否已经存在员工状态编号。
            </summary>
            <param name="code">员工状态代码。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.EmpState.IsExistDescription(System.String)">
            <summary>
            是否已经存在员工状态名称
            </summary>
            <param name="description">员工状态名称。</param>
            <returns>bool</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.EmpState.GetAll">
            <summary>
            获取所有员工状态。
            </summary>
            <returns>ArrayList。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.EmpState.GetAllAvalible">
            <summary>
            获取所有有效的员工状态。
            </summary>
            <returns>员工状态集合。</returns>
        </member>
        <member name="M:Shmzh.Components.SystemComponent.AccessDAL.EmpState.GetByCode(System.String)">
            <summary>
            根据员工状态编号获取员工状态。
            </summary>
            <param name="code">员工状态代码。</param>
            <returns>员工状态实体。</returns>
        </member>
    </members>
</doc>
