<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="System.Configuration.IgnoreSectionHandler" />
  </configSections>
  <log4net>
    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--滚动式文件方式-->
      <file value="log/" />
      <appendToFile value="true" />
      <rollingStyle value="Date" />
      <!--滚动方式采用日期室，即每天产生一个日志文件-->
      <datePattern value="yyyyMMdd&quot;.log&quot;" />
      <maxSizeRollBackups value="10" />
      <!--保留最新的10个日志文件-->
      <staticLogFileName value="false" />
      <!--对于仅仅是指定了日志文件目录，而没有初始文件名的file，则一定要此属性设为false，否则不会产生日志文件-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!--锁定方式-->
      <layout type="log4net.Layout.PatternLayout">
        <!--日志的输出格式-->
        <header value="--------------------------------Header-----------------------------------------&#13;&#10;" />
        <!--&#13;&#10;代表换行-->
        <footer value= "--------------------------------Footer------------------------------------------&#13;&#10;" />
        <conversionPattern value="%date [%thread] %-5level %logger [%ndc] - %message%newline" />
      </layout>
    </appender>
    <!--FileAppender记录器，对于多线程是不安全的。-->
    <appender name="LogFileAppender" type="log4net.Appender.FileAppender">
      <!--单一文件方式-->
      <file value="log/all.log" />
      <appendToFile value="true" />
      <!--append or overwrite -->
      <encoding value="UTF-8" />
      <layout type="log4net.Layout.PatternLayout">
        <!--输出日志的格式或者样式-->
        <header value="--------------------------------Header-----------------------------------------&#13;&#10;" />
        <!--&#13;&#10;代表换行-->
        <footer value= "--------------------------------Footer------------------------------------------&#13;&#10;" />
        <conversionPattern value="%date [%thread] %-5level %logger [%ndc] &lt;%property{auth}&gt; - %message%newline" />
      </layout>
    </appender>
    <!--
      根级别的Logger，如果没有特殊情况只需要在root中设定appender即可。可以不必另行设定特定的Logger。
    -->
    <root>
      <level value="ALL" />
      <!--记录所有类型的Log-->
      <appender-ref ref="RollingLogFileAppender" />
      <!--滚动式文件方式-->
    </root>
    <!--
      特定的Logger，但是都会继承root的特性。所以值得注意的时候，root中已经定义的，在特定Logger中不需再定义，否则会造成日志输出重复的现象产生。
    -->
    <logger name="MessageClient">
      <!--特定的Logger，但是将继承root的特性。-->
      <!--<level value="ALL" />-->
      <!--<appender-ref ref="LogFileAppender" />-->
      <!--单一日志文件方式-->
      <!--<appender-ref ref="RollingLogFileAppender" />-->
      <!--因为根级别上定义了RollingLogFileAppender，MessageClientLogger又定义了一次，那么在日志文件中将出现重复的日志信息，这个可以认为是个Bug。-->
    </logger>
  </log4net>
</configuration>
